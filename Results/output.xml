<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.12.3 on win32)" generated="20240525 01:19:07.588" rpa="false" schemaversion="4">
<suite id="s1" name="Get Produtos" source="C:\ProjetosC\serveRest-robot\features\get_produtos.robot">
<kw name="Conectar a API" library="services" type="SETUP">
<arg>/login</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>apiServeRest</arg>
<arg>${base_url}</arg>
<arg>${headersLogin}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20240525 01:19:08.367" level="INFO">Creating Session using : alias=apiServeRest, url=https://serverest.dev, headers={'accept': 'application/json', 'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20240525 01:19:08.367" endtime="20240525 01:19:08.367"/>
</kw>
<status status="PASS" starttime="20240525 01:19:08.366" endtime="20240525 01:19:08.367"/>
</kw>
<test id="s1-t1" name="Fazer um Get Produtos com sucesso" line="8">
<kw name="Quando verificar os produtos cadastrados" library="get_produtos">
<kw name="Get in" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>headers=${headersLogin}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240525 01:19:09.467" level="INFO">GET Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20240525 01:19:09.468" level="INFO">GET Response : url=https://serverest.dev/produtos 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'd8dd8fd69fca8d76c7b9046334c287fe;o=1', 'Date': 'Sat, 25 May 2024 04:19:09 GMT', 'Server': 'Google Frontend', 'Content-Length': '3783'} 
 body={
    "quantidade": 18,
    "produtos": [
        {
            "descricao": "Aperiam maiores distinctio tenetur. Voluptate nobis rem officiis non.\nIure quae est necessitatibus. Cupiditate nostrum ipsum dolore qui repellendus. Quas ratione sunt.",
            "nome": "Inventore eveniet.",
            "preco": 10,
            "quantidade": 10,
            "_id": "9Pvhm019a7i7lNCF"
        },
        {
            "nome": "as",
            "preco": 10,
            "descricao": "Produto Teste Robot Framework",
            "quantidade": 5,
            "_id": "AWa6AstPzGkep3px"
        },
        {
            "nome": "Logitech MX Vertical",
            "preco": 470,
            "descricao": "Mouse",
            "quantidade": 382,
            "_id": "BeeJh5lz3k6kSIzA"
        },
        {
            "nome": "loopin v3",
            "preco": 47,
            "descricao": "Capa celular",
            "quantidade": 501,
            "_id": "E8fegtfxImAWQPzW"
        },
        {
            "nome": "speech",
            "preco": 10,
            "descricao": "Produto Teste Robot Framework",
            "quantidade": 5,
            "_id": "GW6NrEmibFnmPPRS"
        },
        {
            "nome": "outside",
            "preco": 10,
            "descricao": "Produto Teste Robot Framework",
            "quantidade": 5,
            "_id": "IpNdQbCMqJISLxpj"
        },
        {
            "nome": "give",
            "preco": 10,
            "descricao": "Produto Teste Robot Framework",
            "quantidade": 5,
            "_id": "Jn8f4jX0walpiumw"
        },
        {
            "nome": "Samsung 60 polegadas",
            "preco": 5240,
            "descricao": "TV",
            "quantidade": 49977,
            "_id": "K6leHdftCeOJj8BJ"
        },
        {
            "nome": "delectus",
            "preco": 46,
            "descricao": "Cum.",
            "quantidade": 90,
            "_id": "OMY7jCqodBbtC3Lm"
        },
        {
            "nome": "time",
            "preco": 10,
            "descricao": "Produto Teste Robot Framework",
            "quantidade": 5,
            "_id": "Oh6Bf638xcOBDx17"
        },
        {
            "nome": "Democrat",
            "preco": 10,
            "descricao": "Produto Teste Robot Framework",
            "quantidade": 5,
            "_id": "TDnujoA779osvBL3"
        },
        {
            "nome": "investment",
            "preco": 10,
            "descricao": "Produto Teste Robot Framework",
            "quantidade": 5,
            "_id": "UvQKs3U2UxOlZ6wi"
        },
        {
            "nome": "123",
            "preco": 123,
            "descricao": "123",
            "quantidade": 123,
            "_id": "VZlQ7BYLuoW5d6r6"
        },
        {
            "nome": "enjoy",
            "preco": 10,
            "descricao": "Produto Teste Robot Framework",
            "quantidade": 5,
            "_id": "b4woBKBiwY1mDyLw"
        },
        {
            "nome": "loopin v2",
            "preco": 47,
            "descricao": "Capa celular",
            "quantidade": 501,
            "_id": "fkFeS0oL4qQbDNif"
        },
        {
            "nome": "TESTE_Product",
            "preco": 400,
            "descricao": "teste api",
            "quantidade": 505,
            "_id": "jyyIFW9R9AAbnobJ"
        },
        {
            "descricao": "Voluptatibus maiores accusamus doloremque unde quod officiis. In nemo numquam est exercitationem facere.",
            "nome": "Quas voluptatibus.",
            "preco": 10,
            "quantidade": 10,
            "_id": "r4OKysaBOnsX13fD"
        },
        {
            "nome": "amet",
            "preco": 46,
            "descricao": "Odit.",
            "quantidade": 13,
            "_id": "uAAwzVgwE69OFQwL"
        }
    ]
} 
 </msg>
<msg timestamp="20240525 01:19:09.468" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:19:08.368" endtime="20240525 01:19:09.468"/>
</kw>
<msg timestamp="20240525 01:19:09.469" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:19:08.368" endtime="20240525 01:19:09.469"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240525 01:19:09.470" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:19:09.469" endtime="20240525 01:19:09.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:19:09.472" level="INFO">{'quantidade': 18, 'produtos': [{'descricao': 'Aperiam maiores distinctio tenetur. Voluptate nobis rem officiis non.\nIure quae est necessitatibus. Cupiditate nostrum ipsum dolore qui repellendus. Quas ratione sunt.', 'nome': 'Inventore eveniet.', 'preco': 10, 'quantidade': 10, '_id': '9Pvhm019a7i7lNCF'}, {'nome': 'as', 'preco': 10, 'descricao': 'Produto Teste Robot Framework', 'quantidade': 5, '_id': 'AWa6AstPzGkep3px'}, {'nome': 'Logitech MX Vertical', 'preco': 470, 'descricao': 'Mouse', 'quantidade': 382, '_id': 'BeeJh5lz3k6kSIzA'}, {'nome': 'loopin v3', 'preco': 47, 'descricao': 'Capa celular', 'quantidade': 501, '_id': 'E8fegtfxImAWQPzW'}, {'nome': 'speech', 'preco': 10, 'descricao': 'Produto Teste Robot Framework', 'quantidade': 5, '_id': 'GW6NrEmibFnmPPRS'}, {'nome': 'outside', 'preco': 10, 'descricao': 'Produto Teste Robot Framework', 'quantidade': 5, '_id': 'IpNdQbCMqJISLxpj'}, {'nome': 'give', 'preco': 10, 'descricao': 'Produto Teste Robot Framework', 'quantidade': 5, '_id': 'Jn8f4jX0walpiumw'}, {'nome': 'Samsung 60 polegadas', 'preco': 5240, 'descricao': 'TV', 'quantidade': 49977, '_id': 'K6leHdftCeOJj8BJ'}, {'nome': 'delectus', 'preco': 46, 'descricao': 'Cum.', 'quantidade': 90, '_id': 'OMY7jCqodBbtC3Lm'}, {'nome': 'time', 'preco': 10, 'descricao': 'Produto Teste Robot Framework', 'quantidade': 5, '_id': 'Oh6Bf638xcOBDx17'}, {'nome': 'Democrat', 'preco': 10, 'descricao': 'Produto Teste Robot Framework', 'quantidade': 5, '_id': 'TDnujoA779osvBL3'}, {'nome': 'investment', 'preco': 10, 'descricao': 'Produto Teste Robot Framework', 'quantidade': 5, '_id': 'UvQKs3U2UxOlZ6wi'}, {'nome': '123', 'preco': 123, 'descricao': '123', 'quantidade': 123, '_id': 'VZlQ7BYLuoW5d6r6'}, {'nome': 'enjoy', 'preco': 10, 'descricao': 'Produto Teste Robot Framework', 'quantidade': 5, '_id': 'b4woBKBiwY1mDyLw'}, {'nome': 'loopin v2', 'preco': 47, 'descricao': 'Capa celular', 'quantidade': 501, '_id': 'fkFeS0oL4qQbDNif'}, {'nome': 'TESTE_Product', 'preco': 400, 'descricao': 'teste api', 'quantidade': 505, '_id': 'jyyIFW9R9AAbnobJ'}, {'descricao': 'Voluptatibus maiores accusamus doloremque unde quod officiis. In nemo numquam est exercitationem facere.', 'nome': 'Quas voluptatibus.', 'preco': 10, 'quantidade': 10, '_id': 'r4OKysaBOnsX13fD'}, {'nome': 'amet', 'preco': 46, 'descricao': 'Odit.', 'quantidade': 13, '_id': 'uAAwzVgwE69OFQwL'}]}</msg>
<status status="PASS" starttime="20240525 01:19:09.470" endtime="20240525 01:19:09.472"/>
</kw>
<status status="PASS" starttime="20240525 01:19:08.368" endtime="20240525 01:19:09.472"/>
</kw>
<kw name="EntÃ£o ira visuazilar o Status Code" library="get_produtos">
<arg>200</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 01:19:09.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 01:19:09.474" endtime="20240525 01:19:09.476"/>
</kw>
<status status="PASS" starttime="20240525 01:19:09.474" endtime="20240525 01:19:09.476"/>
</kw>
<kw name="E o body nÃ£o pode estÃ¡ vazio" library="get_produtos">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20240525 01:19:09.479" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20240525 01:19:09.478" endtime="20240525 01:19:09.480"/>
</kw>
<status status="PASS" starttime="20240525 01:19:09.477" endtime="20240525 01:19:09.480"/>
</kw>
<status status="PASS" starttime="20240525 01:19:08.367" endtime="20240525 01:19:09.481"/>
</test>
<test id="s1-t2" name="Fazer um Get Id Produtos" line="13">
<kw name="Quando verificar o id do produto" library="get_produtos">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<arg>${RESPOSTA.json()}[produtos][0][_id]</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:19:09.489" level="INFO">${id} = 9Pvhm019a7i7lNCF</msg>
<status status="PASS" starttime="20240525 01:19:09.486" endtime="20240525 01:19:09.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${id}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:19:09.490" level="INFO">9Pvhm019a7i7lNCF</msg>
<status status="PASS" starttime="20240525 01:19:09.489" endtime="20240525 01:19:09.490"/>
</kw>
<kw name="Get Id In" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${id}</arg>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>headers=${headersLogin}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240525 01:19:10.593" level="INFO">GET Request : url=https://serverest.dev/produtos/9Pvhm019a7i7lNCF 
 path_url=/produtos/9Pvhm019a7i7lNCF 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20240525 01:19:10.593" level="INFO">GET Response : url=https://serverest.dev/produtos/9Pvhm019a7i7lNCF 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'b1de3924b7630bcbaa1c72536d00c44d', 'Date': 'Sat, 25 May 2024 04:19:10 GMT', 'Server': 'Google Frontend', 'Content-Length': '295'} 
 body={
    "descricao": "Aperiam maiores distinctio tenetur. Voluptate nobis rem officiis non.\nIure quae est necessitatibus. Cupiditate nostrum ipsum dolore qui repellendus. Quas ratione sunt.",
    "nome": "Inventore eveniet.",
    "preco": 10,
    "quantidade": 10,
    "_id": "9Pvhm019a7i7lNCF"
} 
 </msg>
<msg timestamp="20240525 01:19:10.593" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:19:09.491" endtime="20240525 01:19:10.593"/>
</kw>
<msg timestamp="20240525 01:19:10.593" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:19:09.490" endtime="20240525 01:19:10.593"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${nome}</var>
<arg>${RESPOSTA.json()}[nome]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240525 01:19:10.594" level="INFO">${nome} = Inventore eveniet.</msg>
<status status="PASS" starttime="20240525 01:19:10.593" endtime="20240525 01:19:10.594"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${nome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:19:10.594" level="INFO">${nome} = Inventore eveniet.</msg>
<status status="PASS" starttime="20240525 01:19:10.594" endtime="20240525 01:19:10.594"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:19:10.595" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:19:10.594" endtime="20240525 01:19:10.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:19:10.595" level="INFO">{'descricao': 'Aperiam maiores distinctio tenetur. Voluptate nobis rem officiis non.\nIure quae est necessitatibus. Cupiditate nostrum ipsum dolore qui repellendus. Quas ratione sunt.', 'nome': 'Inventore eveniet.', 'preco': 10, 'quantidade': 10, '_id': '9Pvhm019a7i7lNCF'}</msg>
<status status="PASS" starttime="20240525 01:19:10.595" endtime="20240525 01:19:10.595"/>
</kw>
<status status="PASS" starttime="20240525 01:19:09.485" endtime="20240525 01:19:10.595"/>
</kw>
<kw name="EntÃ£o ira visuazilar o Status Code" library="get_produtos">
<arg>200</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 01:19:10.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 01:19:10.596" endtime="20240525 01:19:10.597"/>
</kw>
<status status="PASS" starttime="20240525 01:19:10.596" endtime="20240525 01:19:10.597"/>
</kw>
<kw name="E validar os campos de retorno do body" library="get_produtos">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${campos}</arg>
<arg>${RESPOSTA.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:19:10.599" level="INFO">${campos} = {'descricao': 'Aperiam maiores distinctio tenetur. Voluptate nobis rem officiis non.\nIure quae est necessitatibus. Cupiditate nostrum ipsum dolore qui repellendus. Quas ratione sunt.', 'nome': 'Inven...</msg>
<status status="PASS" starttime="20240525 01:19:10.598" endtime="20240525 01:19:10.599"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${campos}</arg>
<arg>descricao</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:19:10.599" endtime="20240525 01:19:10.600"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${campos}</arg>
<arg>nome</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:19:10.600" endtime="20240525 01:19:10.600"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${campos}</arg>
<arg>preco</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:19:10.600" endtime="20240525 01:19:10.600"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${campos}</arg>
<arg>quantidade</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:19:10.600" endtime="20240525 01:19:10.600"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${campos}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:19:10.600" endtime="20240525 01:19:10.601"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${campos}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240525 01:19:10.601" endtime="20240525 01:19:10.602"/>
</kw>
<status status="PASS" starttime="20240525 01:19:10.598" endtime="20240525 01:19:10.602"/>
</kw>
<kw name="E verificar o campo nome no retorno" library="get_produtos">
<arg>Inventore eveniet.</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${nome}</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240525 01:19:10.602" endtime="20240525 01:19:10.603"/>
</kw>
<status status="PASS" starttime="20240525 01:19:10.602" endtime="20240525 01:19:10.603"/>
</kw>
<kw name="E o body nÃ£o pode estÃ¡ vazio" library="get_produtos">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20240525 01:19:10.604" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20240525 01:19:10.603" endtime="20240525 01:19:10.604"/>
</kw>
<status status="PASS" starttime="20240525 01:19:10.603" endtime="20240525 01:19:10.604"/>
</kw>
<status status="PASS" starttime="20240525 01:19:09.484" endtime="20240525 01:19:10.604"/>
</test>
<doc>Documentacao da API: ServeRest</doc>
<status status="PASS" starttime="20240525 01:19:07.589" endtime="20240525 01:19:10.605"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" skip="0" id="s1" name="Get Produtos">Get Produtos</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
