<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.12.3 on win32)" generated="20240525 02:40:04.815" rpa="false" schemaversion="4">
<suite id="s1" name="04 - Put Produtos" source="C:\ProjetosC\serveRest-robot\features\04 - put_produtos.robot">
<kw name="Token" library="services" type="SETUP">
<kw name="Conectar a API" library="services">
<arg>/login</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>apiServeRest</arg>
<arg>${base_url}</arg>
<arg>${headersLogin}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20240525 02:40:05.591" level="INFO">Creating Session using : alias=apiServeRest, url=https://serverest.dev, headers={'accept': 'application/json', 'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20240525 02:40:05.591" endtime="20240525 02:40:05.592"/>
</kw>
<status status="PASS" starttime="20240525 02:40:05.591" endtime="20240525 02:40:05.592"/>
</kw>
<kw name="Quando entrar com usuario e senha" library="login">
<kw name="Post in" library="services">
<var>${RESPOSTA}</var>
<arg>/login</arg>
<arg>${bodyLOGIN}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headersLogin}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 02:40:06.950" level="INFO">POST Request : url=https://serverest.dev/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "sandroteste@qa.com", "password": "testeQA"}' 
 </msg>
<msg timestamp="20240525 02:40:06.950" level="INFO">POST Response : url=https://serverest.dev/login 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'c830c6ff8690205dadc83b52c6d2bd4b;o=1', 'Date': 'Sat, 25 May 2024 05:40:07 GMT', 'Server': 'Google Frontend', 'Content-Length': '275'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTYwNywiZXhwIjoxNzE2NjE2MjA3fQ.6qRttd_B39TEj5ycMFhRhlyOSH4DAmSMzEZin8NXM4Y"
} 
 </msg>
<msg timestamp="20240525 02:40:06.951" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:40:05.593" endtime="20240525 02:40:06.951"/>
</kw>
<msg timestamp="20240525 02:40:06.951" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:40:05.592" endtime="20240525 02:40:06.951"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${token}</var>
<arg>${RESPOSTA.json()}[authorization]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240525 02:40:06.953" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTYwNywiZXhwIjoxNzE2NjE2MjA3fQ.6qRttd_B39TEj5ycMFhRhlyOSH4DAmSMzEZin8NXM...</msg>
<status status="PASS" starttime="20240525 02:40:06.952" endtime="20240525 02:40:06.953"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${token}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240525 02:40:06.954" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTYwNywiZXhwIjoxNzE2NjE2MjA3fQ.6qRttd_B39TEj5ycMFhRhlyOSH4DAmSMzEZin8NXM...</msg>
<status status="PASS" starttime="20240525 02:40:06.953" endtime="20240525 02:40:06.954"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240525 02:40:06.954" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:40:06.954" endtime="20240525 02:40:06.954"/>
</kw>
<status status="PASS" starttime="20240525 02:40:05.592" endtime="20240525 02:40:06.954"/>
</kw>
<status status="PASS" starttime="20240525 02:40:05.590" endtime="20240525 02:40:06.954"/>
</kw>
<test id="s1-t1" name="Atualizar um produto com sucesso" line="9">
<kw name="Fakers" library="Utils">
<kw name="Name" library="FakerLibrary">
<var>${FakeNome}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20240525 02:40:06.956" level="INFO">${FakeNome} = William Ayala</msg>
<status status="PASS" starttime="20240525 02:40:06.956" endtime="20240525 02:40:06.957"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeNome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:06.957" level="INFO">${FakeNome} = William Ayala</msg>
<status status="PASS" starttime="20240525 02:40:06.957" endtime="20240525 02:40:06.957"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${FakeEmail}</var>
<msg timestamp="20240525 02:40:06.958" level="INFO">${FakeEmail} = beckthomas@example.org</msg>
<status status="PASS" starttime="20240525 02:40:06.957" endtime="20240525 02:40:06.958"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeEmail}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:06.958" level="INFO">${FakeEmail} = beckthomas@example.org</msg>
<status status="PASS" starttime="20240525 02:40:06.958" endtime="20240525 02:40:06.958"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${compSenha}</var>
<arg>text=##</arg>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:40:06.959" level="INFO">${compSenha} = 24</msg>
<status status="PASS" starttime="20240525 02:40:06.958" endtime="20240525 02:40:06.959"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${FakeSenha}</var>
<arg>Seubarriga</arg>
<arg>${compSenha}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240525 02:40:06.959" level="INFO">${FakeSenha} = Seubarriga 24</msg>
<status status="PASS" starttime="20240525 02:40:06.959" endtime="20240525 02:40:06.959"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeSenha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:06.959" level="INFO">${FakeSenha} = Seubarriga 24</msg>
<status status="PASS" starttime="20240525 02:40:06.959" endtime="20240525 02:40:06.959"/>
</kw>
<kw name="Sentence" library="FakerLibrary">
<var>${FakerDescricao}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20240525 02:40:06.960" level="INFO">${FakerDescricao} = Sure source account sure family artist.</msg>
<status status="PASS" starttime="20240525 02:40:06.959" endtime="20240525 02:40:06.960"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerDescricao}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:06.960" level="INFO">${FakerDescricao} = Sure source account sure family artist.</msg>
<status status="PASS" starttime="20240525 02:40:06.960" endtime="20240525 02:40:06.960"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${FakerValor}</var>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:40:06.960" level="INFO">${FakerValor} = 281</msg>
<status status="PASS" starttime="20240525 02:40:06.960" endtime="20240525 02:40:06.960"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerValor}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:06.961" level="INFO">${FakerValor} = 281</msg>
<status status="PASS" starttime="20240525 02:40:06.961" endtime="20240525 02:40:06.961"/>
</kw>
<status status="PASS" starttime="20240525 02:40:06.955" endtime="20240525 02:40:06.961"/>
</kw>
<kw name="Dado que tenha uma massa configurada" library="delete_produtos">
<kw name="Cadastro produtos com sucesso" library="services">
<kw name="Fakers" library="Utils">
<kw name="Name" library="FakerLibrary">
<var>${FakeNome}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20240525 02:40:06.963" level="INFO">${FakeNome} = Allen Cook</msg>
<status status="PASS" starttime="20240525 02:40:06.962" endtime="20240525 02:40:06.963"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeNome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:06.963" level="INFO">${FakeNome} = Allen Cook</msg>
<status status="PASS" starttime="20240525 02:40:06.963" endtime="20240525 02:40:06.963"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${FakeEmail}</var>
<msg timestamp="20240525 02:40:06.964" level="INFO">${FakeEmail} = julianbuckley@example.com</msg>
<status status="PASS" starttime="20240525 02:40:06.963" endtime="20240525 02:40:06.964"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeEmail}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:06.964" level="INFO">${FakeEmail} = julianbuckley@example.com</msg>
<status status="PASS" starttime="20240525 02:40:06.964" endtime="20240525 02:40:06.964"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${compSenha}</var>
<arg>text=##</arg>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:40:06.964" level="INFO">${compSenha} = 22</msg>
<status status="PASS" starttime="20240525 02:40:06.964" endtime="20240525 02:40:06.964"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${FakeSenha}</var>
<arg>Seubarriga</arg>
<arg>${compSenha}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240525 02:40:06.965" level="INFO">${FakeSenha} = Seubarriga 22</msg>
<status status="PASS" starttime="20240525 02:40:06.965" endtime="20240525 02:40:06.965"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeSenha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:06.965" level="INFO">${FakeSenha} = Seubarriga 22</msg>
<status status="PASS" starttime="20240525 02:40:06.965" endtime="20240525 02:40:06.965"/>
</kw>
<kw name="Sentence" library="FakerLibrary">
<var>${FakerDescricao}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20240525 02:40:06.965" level="INFO">${FakerDescricao} = Attention tough laugh care case trip.</msg>
<status status="PASS" starttime="20240525 02:40:06.965" endtime="20240525 02:40:06.965"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerDescricao}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:06.966" level="INFO">${FakerDescricao} = Attention tough laugh care case trip.</msg>
<status status="PASS" starttime="20240525 02:40:06.966" endtime="20240525 02:40:06.966"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${FakerValor}</var>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:40:06.966" level="INFO">${FakerValor} = 580</msg>
<status status="PASS" starttime="20240525 02:40:06.966" endtime="20240525 02:40:06.966"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerValor}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:06.966" level="INFO">${FakerValor} = 580</msg>
<status status="PASS" starttime="20240525 02:40:06.966" endtime="20240525 02:40:06.966"/>
</kw>
<status status="PASS" starttime="20240525 02:40:06.962" endtime="20240525 02:40:06.966"/>
</kw>
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>${token}</arg>
<arg>${FakeNome}${FakerValor}</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>1049</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:40:06.968" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 02:40:06.968" endtime="20240525 02:40:06.968"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:40:06.969" endtime="20240525 02:40:06.969"/>
</kw>
<status status="PASS" starttime="20240525 02:40:06.968" endtime="20240525 02:40:06.969"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:40:06.969" endtime="20240525 02:40:06.970"/>
</kw>
<status status="PASS" starttime="20240525 02:40:06.969" endtime="20240525 02:40:06.970"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:40:06.970" endtime="20240525 02:40:06.970"/>
</kw>
<status status="PASS" starttime="20240525 02:40:06.970" endtime="20240525 02:40:06.970"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:40:06.971" endtime="20240525 02:40:06.971"/>
</kw>
<status status="PASS" starttime="20240525 02:40:06.970" endtime="20240525 02:40:06.971"/>
</kw>
<msg timestamp="20240525 02:40:06.971" level="INFO">${bodyPostProd} = {'nome': 'Allen Cook580', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 02:40:06.967" endtime="20240525 02:40:06.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:40:06.972" level="INFO">{'nome': 'Allen Cook580', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 02:40:06.971" endtime="20240525 02:40:06.972"/>
</kw>
<kw name="HeadersAuth" library="services">
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:40:06.972" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTYwNywiZXhwIjoxNzE2NjE2MjA3fQ.6qRttd_B39TEj5ycMFhRhl...</msg>
<status status="PASS" starttime="20240525 02:40:06.972" endtime="20240525 02:40:06.972"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:06.973" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTYwNywiZXhwIjoxNzE2NjE2MjA3fQ.6qRttd_B39TEj5ycMFhRhl...</msg>
<status status="PASS" starttime="20240525 02:40:06.972" endtime="20240525 02:40:06.973"/>
</kw>
<status status="PASS" starttime="20240525 02:40:06.972" endtime="20240525 02:40:06.973"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 02:40:07.972" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTYwNywiZXhwIjoxNzE2NjE2MjA3fQ.6qRttd_B39TEj5ycMFhRhlyOSH4DAmSMzEZin8NXM4Y', 'Content-Length': '97', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Allen Cook580", "preco": "1010", "descricao": "Teste Automation", "quantidade": "1049"}' 
 </msg>
<msg timestamp="20240525 02:40:07.972" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'bf62fb2278eebd7dd7ce6f223e0ea6f0', 'Date': 'Sat, 25 May 2024 05:40:08 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "bvHVyLunwKTYvE9n"
} 
 </msg>
<msg timestamp="20240525 02:40:07.973" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 02:40:06.973" endtime="20240525 02:40:07.973"/>
</kw>
<msg timestamp="20240525 02:40:07.973" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 02:40:06.973" endtime="20240525 02:40:07.973"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:07.973" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 02:40:07.973" endtime="20240525 02:40:07.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:40:07.974" level="INFO">{'message': 'Cadastro realizado com sucesso', '_id': 'bvHVyLunwKTYvE9n'}</msg>
<status status="PASS" starttime="20240525 02:40:07.973" endtime="20240525 02:40:07.974"/>
</kw>
<status status="PASS" starttime="20240525 02:40:06.967" endtime="20240525 02:40:07.974"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<arg>${RESPOSTA.json()}[_id]</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:07.976" level="INFO">${id} = bvHVyLunwKTYvE9n</msg>
<status status="PASS" starttime="20240525 02:40:07.974" endtime="20240525 02:40:07.976"/>
</kw>
<status status="PASS" starttime="20240525 02:40:06.962" endtime="20240525 02:40:07.976"/>
</kw>
<status status="PASS" starttime="20240525 02:40:06.961" endtime="20240525 02:40:07.976"/>
</kw>
<kw name="Quando enviar uma requisição Put" library="put_produtos">
<arg>${token}</arg>
<arg>${FakeNome}${FakerValor}</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>${FakerValor}</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:40:07.978" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 02:40:07.977" endtime="20240525 02:40:07.978"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:40:07.978" endtime="20240525 02:40:07.978"/>
</kw>
<status status="PASS" starttime="20240525 02:40:07.978" endtime="20240525 02:40:07.978"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:40:07.979" endtime="20240525 02:40:07.979"/>
</kw>
<status status="PASS" starttime="20240525 02:40:07.978" endtime="20240525 02:40:07.979"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:40:07.979" endtime="20240525 02:40:07.979"/>
</kw>
<status status="PASS" starttime="20240525 02:40:07.979" endtime="20240525 02:40:07.979"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:40:07.980" endtime="20240525 02:40:07.980"/>
</kw>
<status status="PASS" starttime="20240525 02:40:07.980" endtime="20240525 02:40:07.980"/>
</kw>
<msg timestamp="20240525 02:40:07.980" level="INFO">${bodyPostProd} = {'nome': 'Allen Cook580', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '580'}</msg>
<status status="PASS" starttime="20240525 02:40:07.977" endtime="20240525 02:40:07.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:40:07.981" level="INFO">{'nome': 'Allen Cook580', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '580'}</msg>
<status status="PASS" starttime="20240525 02:40:07.981" endtime="20240525 02:40:07.981"/>
</kw>
<kw name="HeadersAuth" library="services">
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:40:07.981" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTYwNywiZXhwIjoxNzE2NjE2MjA3fQ.6qRttd_B39TEj5ycMFhRhl...</msg>
<status status="PASS" starttime="20240525 02:40:07.981" endtime="20240525 02:40:07.981"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:07.982" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTYwNywiZXhwIjoxNzE2NjE2MjA3fQ.6qRttd_B39TEj5ycMFhRhl...</msg>
<status status="PASS" starttime="20240525 02:40:07.982" endtime="20240525 02:40:07.982"/>
</kw>
<status status="PASS" starttime="20240525 02:40:07.981" endtime="20240525 02:40:07.982"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${nome}</var>
<arg>${bodyPostProd['nome']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240525 02:40:07.983" level="INFO">${nome} = Allen Cook580</msg>
<status status="PASS" starttime="20240525 02:40:07.982" endtime="20240525 02:40:07.983"/>
</kw>
<kw name="Put in" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<arg>${id}</arg>
<kw name="PUT" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request.</doc>
<msg timestamp="20240525 02:40:08.998" level="INFO">PUT Request : url=https://serverest.dev/produtos/bvHVyLunwKTYvE9n 
 path_url=/produtos/bvHVyLunwKTYvE9n 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTYwNywiZXhwIjoxNzE2NjE2MjA3fQ.6qRttd_B39TEj5ycMFhRhlyOSH4DAmSMzEZin8NXM4Y', 'Content-Length': '96', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Allen Cook580", "preco": "1010", "descricao": "Teste Automation", "quantidade": "580"}' 
 </msg>
<msg timestamp="20240525 02:40:08.998" level="INFO">PUT Response : url=https://serverest.dev/produtos/bvHVyLunwKTYvE9n 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'dcec3dc84a193cb2dd069c1742042ecc', 'Date': 'Sat, 25 May 2024 05:40:09 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20240525 02:40:08.998" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:40:07.983" endtime="20240525 02:40:08.998"/>
</kw>
<msg timestamp="20240525 02:40:08.999" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:40:07.983" endtime="20240525 02:40:08.999"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:09.000" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:40:08.999" endtime="20240525 02:40:09.000"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${nome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:09.000" level="INFO">${nome} = Allen Cook580</msg>
<status status="PASS" starttime="20240525 02:40:09.000" endtime="20240525 02:40:09.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:40:09.003" level="INFO">{'message': 'Registro alterado com sucesso'}</msg>
<status status="PASS" starttime="20240525 02:40:09.001" endtime="20240525 02:40:09.003"/>
</kw>
<status status="PASS" starttime="20240525 02:40:07.976" endtime="20240525 02:40:09.003"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>200</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 02:40:09.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 02:40:09.005" endtime="20240525 02:40:09.007"/>
</kw>
<status status="PASS" starttime="20240525 02:40:09.004" endtime="20240525 02:40:09.007"/>
</kw>
<kw name="E verificar a mensagem de validação" library="post_produtos">
<arg>Registro alterado com sucesso</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[message]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240525 02:40:09.009" endtime="20240525 02:40:09.010"/>
</kw>
<status status="PASS" starttime="20240525 02:40:09.008" endtime="20240525 02:40:09.011"/>
</kw>
<kw name="Excluir produto por nome" library="services">
<arg>${nome}</arg>
<kw name="Get in" library="services">
<var>${getResposta}</var>
<arg>/produtos/?nome=${parametros}</arg>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>headers=${headersLogin}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240525 02:40:10.022" level="INFO">GET Request : url=https://serverest.dev/produtos/?nome=Allen%20Cook580 
 path_url=/produtos/?nome=Allen%20Cook580 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20240525 02:40:10.022" level="INFO">GET Response : url=https://serverest.dev/produtos/?nome=Allen%20Cook580 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'ee95c1f551c657273d1050ecd0f3a621', 'Date': 'Sat, 25 May 2024 05:40:10 GMT', 'Server': 'Google Frontend', 'Content-Length': '246'} 
 body={
    "quantidade": 1,
    "produtos": [
        {
            "nome": "Allen Cook580",
            "preco": 1010,
            "descricao": "Teste Automation",
            "quantidade": 580,
            "_id": "bvHVyLunwKTYvE9n"
        }
    ]
} 
 </msg>
<msg timestamp="20240525 02:40:10.022" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:40:09.014" endtime="20240525 02:40:10.022"/>
</kw>
<msg timestamp="20240525 02:40:10.023" level="INFO">${getResposta} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:40:09.012" endtime="20240525 02:40:10.023"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${id}</var>
<arg>${getResposta.json()}[produtos][0][_id]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240525 02:40:10.025" level="INFO">${id} = bvHVyLunwKTYvE9n</msg>
<status status="PASS" starttime="20240525 02:40:10.023" endtime="20240525 02:40:10.025"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:10.026" level="INFO">${id} = bvHVyLunwKTYvE9n</msg>
<status status="PASS" starttime="20240525 02:40:10.025" endtime="20240525 02:40:10.026"/>
</kw>
<kw name="Delete in" library="services">
<var>${RESPOSTA_DEL}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${id}</arg>
<kw name="DELETE" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request.</doc>
<msg timestamp="20240525 02:40:11.160" level="INFO">DELETE Request : url=https://serverest.dev/produtos/bvHVyLunwKTYvE9n 
 path_url=/produtos/bvHVyLunwKTYvE9n 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTYwNywiZXhwIjoxNzE2NjE2MjA3fQ.6qRttd_B39TEj5ycMFhRhlyOSH4DAmSMzEZin8NXM4Y', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20240525 02:40:11.160" level="INFO">DELETE Response : url=https://serverest.dev/produtos/bvHVyLunwKTYvE9n 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '6d4a8de3098e40041667725931a1cb06', 'Date': 'Sat, 25 May 2024 05:40:11 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20240525 02:40:11.161" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:40:10.027" endtime="20240525 02:40:11.161"/>
</kw>
<msg timestamp="20240525 02:40:11.161" level="INFO">${RESPOSTA_DEL} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:40:10.026" endtime="20240525 02:40:11.161"/>
</kw>
<status status="PASS" starttime="20240525 02:40:09.012" endtime="20240525 02:40:11.161"/>
</kw>
<status status="PASS" starttime="20240525 02:40:06.954" endtime="20240525 02:40:11.162"/>
</test>
<test id="s1-t2" name="Atualizar um produto sem o Token" line="17">
<kw name="Fakers" library="Utils">
<kw name="Name" library="FakerLibrary">
<var>${FakeNome}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20240525 02:40:11.166" level="INFO">${FakeNome} = Scott Russell</msg>
<status status="PASS" starttime="20240525 02:40:11.165" endtime="20240525 02:40:11.166"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeNome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:11.166" level="INFO">${FakeNome} = Scott Russell</msg>
<status status="PASS" starttime="20240525 02:40:11.166" endtime="20240525 02:40:11.166"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${FakeEmail}</var>
<msg timestamp="20240525 02:40:11.167" level="INFO">${FakeEmail} = cindy21@example.net</msg>
<status status="PASS" starttime="20240525 02:40:11.166" endtime="20240525 02:40:11.167"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeEmail}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:11.168" level="INFO">${FakeEmail} = cindy21@example.net</msg>
<status status="PASS" starttime="20240525 02:40:11.167" endtime="20240525 02:40:11.168"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${compSenha}</var>
<arg>text=##</arg>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:40:11.168" level="INFO">${compSenha} = 63</msg>
<status status="PASS" starttime="20240525 02:40:11.168" endtime="20240525 02:40:11.168"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${FakeSenha}</var>
<arg>Seubarriga</arg>
<arg>${compSenha}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240525 02:40:11.169" level="INFO">${FakeSenha} = Seubarriga 63</msg>
<status status="PASS" starttime="20240525 02:40:11.168" endtime="20240525 02:40:11.169"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeSenha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:11.170" level="INFO">${FakeSenha} = Seubarriga 63</msg>
<status status="PASS" starttime="20240525 02:40:11.169" endtime="20240525 02:40:11.170"/>
</kw>
<kw name="Sentence" library="FakerLibrary">
<var>${FakerDescricao}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20240525 02:40:11.170" level="INFO">${FakerDescricao} = High western those make set sell help.</msg>
<status status="PASS" starttime="20240525 02:40:11.170" endtime="20240525 02:40:11.170"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerDescricao}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:11.171" level="INFO">${FakerDescricao} = High western those make set sell help.</msg>
<status status="PASS" starttime="20240525 02:40:11.171" endtime="20240525 02:40:11.171"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${FakerValor}</var>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:40:11.172" level="INFO">${FakerValor} = 597</msg>
<status status="PASS" starttime="20240525 02:40:11.171" endtime="20240525 02:40:11.172"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerValor}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:11.172" level="INFO">${FakerValor} = 597</msg>
<status status="PASS" starttime="20240525 02:40:11.172" endtime="20240525 02:40:11.172"/>
</kw>
<status status="PASS" starttime="20240525 02:40:11.164" endtime="20240525 02:40:11.172"/>
</kw>
<kw name="Dado que tenha uma massa configurada" library="delete_produtos">
<kw name="Cadastro produtos com sucesso" library="services">
<kw name="Fakers" library="Utils">
<kw name="Name" library="FakerLibrary">
<var>${FakeNome}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20240525 02:40:11.175" level="INFO">${FakeNome} = George Hicks</msg>
<status status="PASS" starttime="20240525 02:40:11.175" endtime="20240525 02:40:11.175"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeNome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:11.176" level="INFO">${FakeNome} = George Hicks</msg>
<status status="PASS" starttime="20240525 02:40:11.176" endtime="20240525 02:40:11.176"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${FakeEmail}</var>
<msg timestamp="20240525 02:40:11.178" level="INFO">${FakeEmail} = zacharyenglish@example.org</msg>
<status status="PASS" starttime="20240525 02:40:11.177" endtime="20240525 02:40:11.178"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeEmail}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:11.178" level="INFO">${FakeEmail} = zacharyenglish@example.org</msg>
<status status="PASS" starttime="20240525 02:40:11.178" endtime="20240525 02:40:11.178"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${compSenha}</var>
<arg>text=##</arg>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:40:11.179" level="INFO">${compSenha} = 97</msg>
<status status="PASS" starttime="20240525 02:40:11.179" endtime="20240525 02:40:11.179"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${FakeSenha}</var>
<arg>Seubarriga</arg>
<arg>${compSenha}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240525 02:40:11.180" level="INFO">${FakeSenha} = Seubarriga 97</msg>
<status status="PASS" starttime="20240525 02:40:11.179" endtime="20240525 02:40:11.180"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeSenha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:11.180" level="INFO">${FakeSenha} = Seubarriga 97</msg>
<status status="PASS" starttime="20240525 02:40:11.180" endtime="20240525 02:40:11.180"/>
</kw>
<kw name="Sentence" library="FakerLibrary">
<var>${FakerDescricao}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20240525 02:40:11.181" level="INFO">${FakerDescricao} = Although go lot team success political fund.</msg>
<status status="PASS" starttime="20240525 02:40:11.180" endtime="20240525 02:40:11.181"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerDescricao}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:11.181" level="INFO">${FakerDescricao} = Although go lot team success political fund.</msg>
<status status="PASS" starttime="20240525 02:40:11.181" endtime="20240525 02:40:11.181"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${FakerValor}</var>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:40:11.182" level="INFO">${FakerValor} = 546</msg>
<status status="PASS" starttime="20240525 02:40:11.182" endtime="20240525 02:40:11.182"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerValor}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:11.183" level="INFO">${FakerValor} = 546</msg>
<status status="PASS" starttime="20240525 02:40:11.182" endtime="20240525 02:40:11.183"/>
</kw>
<status status="PASS" starttime="20240525 02:40:11.174" endtime="20240525 02:40:11.183"/>
</kw>
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>${token}</arg>
<arg>${FakeNome}${FakerValor}</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>1049</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:40:11.185" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 02:40:11.185" endtime="20240525 02:40:11.185"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:40:11.186" endtime="20240525 02:40:11.187"/>
</kw>
<status status="PASS" starttime="20240525 02:40:11.185" endtime="20240525 02:40:11.187"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:40:11.188" endtime="20240525 02:40:11.188"/>
</kw>
<status status="PASS" starttime="20240525 02:40:11.187" endtime="20240525 02:40:11.188"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:40:11.189" endtime="20240525 02:40:11.189"/>
</kw>
<status status="PASS" starttime="20240525 02:40:11.188" endtime="20240525 02:40:11.189"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:40:11.190" endtime="20240525 02:40:11.190"/>
</kw>
<status status="PASS" starttime="20240525 02:40:11.189" endtime="20240525 02:40:11.190"/>
</kw>
<msg timestamp="20240525 02:40:11.190" level="INFO">${bodyPostProd} = {'nome': 'George Hicks546', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 02:40:11.184" endtime="20240525 02:40:11.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:40:11.191" level="INFO">{'nome': 'George Hicks546', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 02:40:11.191" endtime="20240525 02:40:11.191"/>
</kw>
<kw name="HeadersAuth" library="services">
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:40:11.193" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTYwNywiZXhwIjoxNzE2NjE2MjA3fQ.6qRttd_B39TEj5ycMFhRhl...</msg>
<status status="PASS" starttime="20240525 02:40:11.192" endtime="20240525 02:40:11.193"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:11.193" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTYwNywiZXhwIjoxNzE2NjE2MjA3fQ.6qRttd_B39TEj5ycMFhRhl...</msg>
<status status="PASS" starttime="20240525 02:40:11.193" endtime="20240525 02:40:11.193"/>
</kw>
<status status="PASS" starttime="20240525 02:40:11.191" endtime="20240525 02:40:11.194"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 02:40:12.173" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTYwNywiZXhwIjoxNzE2NjE2MjA3fQ.6qRttd_B39TEj5ycMFhRhlyOSH4DAmSMzEZin8NXM4Y', 'Content-Length': '99', 'Content-Type': 'application/json'} 
 body=b'{"nome": "George Hicks546", "preco": "1010", "descricao": "Teste Automation", "quantidade": "1049"}' 
 </msg>
<msg timestamp="20240525 02:40:12.174" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'cef2f85ec414ed53ba93912fe131ef05', 'Date': 'Sat, 25 May 2024 05:40:12 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "2qEjpkSa7o09qBVN"
} 
 </msg>
<msg timestamp="20240525 02:40:12.174" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 02:40:11.194" endtime="20240525 02:40:12.174"/>
</kw>
<msg timestamp="20240525 02:40:12.175" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 02:40:11.194" endtime="20240525 02:40:12.175"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:12.176" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 02:40:12.175" endtime="20240525 02:40:12.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:40:12.178" level="INFO">{'message': 'Cadastro realizado com sucesso', '_id': '2qEjpkSa7o09qBVN'}</msg>
<status status="PASS" starttime="20240525 02:40:12.176" endtime="20240525 02:40:12.178"/>
</kw>
<status status="PASS" starttime="20240525 02:40:11.183" endtime="20240525 02:40:12.178"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<arg>${RESPOSTA.json()}[_id]</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:12.181" level="INFO">${id} = 2qEjpkSa7o09qBVN</msg>
<status status="PASS" starttime="20240525 02:40:12.178" endtime="20240525 02:40:12.181"/>
</kw>
<status status="PASS" starttime="20240525 02:40:11.173" endtime="20240525 02:40:12.182"/>
</kw>
<status status="PASS" starttime="20240525 02:40:11.173" endtime="20240525 02:40:12.182"/>
</kw>
<kw name="Quando enviar uma requisição Put" library="put_produtos">
<arg>${EMPTY}</arg>
<arg>${FakeNome}${FakerValor}</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>${FakerValor}</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:40:12.187" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 02:40:12.186" endtime="20240525 02:40:12.187"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:40:12.188" endtime="20240525 02:40:12.189"/>
</kw>
<status status="PASS" starttime="20240525 02:40:12.187" endtime="20240525 02:40:12.189"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:40:12.190" endtime="20240525 02:40:12.190"/>
</kw>
<status status="PASS" starttime="20240525 02:40:12.189" endtime="20240525 02:40:12.190"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:40:12.191" endtime="20240525 02:40:12.192"/>
</kw>
<status status="PASS" starttime="20240525 02:40:12.190" endtime="20240525 02:40:12.192"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:40:12.193" endtime="20240525 02:40:12.193"/>
</kw>
<status status="PASS" starttime="20240525 02:40:12.192" endtime="20240525 02:40:12.193"/>
</kw>
<msg timestamp="20240525 02:40:12.194" level="INFO">${bodyPostProd} = {'nome': 'George Hicks546', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '546'}</msg>
<status status="PASS" starttime="20240525 02:40:12.185" endtime="20240525 02:40:12.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:40:12.194" level="INFO">{'nome': 'George Hicks546', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '546'}</msg>
<status status="PASS" starttime="20240525 02:40:12.194" endtime="20240525 02:40:12.195"/>
</kw>
<kw name="HeadersAuth" library="services">
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:40:12.196" level="INFO">${headersAuth} = {'Authorization': ''}</msg>
<status status="PASS" starttime="20240525 02:40:12.196" endtime="20240525 02:40:12.196"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:12.197" level="INFO">${headersAuth} = {'Authorization': ''}</msg>
<status status="PASS" starttime="20240525 02:40:12.197" endtime="20240525 02:40:12.197"/>
</kw>
<status status="PASS" starttime="20240525 02:40:12.195" endtime="20240525 02:40:12.197"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${nome}</var>
<arg>${bodyPostProd['nome']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240525 02:40:12.199" level="INFO">${nome} = George Hicks546</msg>
<status status="PASS" starttime="20240525 02:40:12.198" endtime="20240525 02:40:12.199"/>
</kw>
<kw name="Put in" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<arg>${id}</arg>
<kw name="PUT" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request.</doc>
<msg timestamp="20240525 02:40:13.196" level="INFO">PUT Request : url=https://serverest.dev/produtos/2qEjpkSa7o09qBVN 
 path_url=/produtos/2qEjpkSa7o09qBVN 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': '', 'Content-Length': '98', 'Content-Type': 'application/json'} 
 body=b'{"nome": "George Hicks546", "preco": "1010", "descricao": "Teste Automation", "quantidade": "546"}' 
 </msg>
<msg timestamp="20240525 02:40:13.197" level="INFO">PUT Response : url=https://serverest.dev/produtos/2qEjpkSa7o09qBVN 
 status=401, reason=Unauthorized 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '6dfa7ed3becc9081f573368c178673a4', 'Date': 'Sat, 25 May 2024 05:40:13 GMT', 'Server': 'Google Frontend', 'Content-Length': '103'} 
 body={
    "message": "Token de acesso ausente, inválido, expirado ou usuário do token não existe mais"
} 
 </msg>
<msg timestamp="20240525 02:40:13.197" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20240525 02:40:12.200" endtime="20240525 02:40:13.197"/>
</kw>
<msg timestamp="20240525 02:40:13.197" level="INFO">${RESPOSTA} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20240525 02:40:12.199" endtime="20240525 02:40:13.197"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:13.198" level="INFO">${RESPOSTA} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20240525 02:40:13.198" endtime="20240525 02:40:13.198"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${nome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:13.199" level="INFO">${nome} = George Hicks546</msg>
<status status="PASS" starttime="20240525 02:40:13.198" endtime="20240525 02:40:13.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:40:13.201" level="INFO">{'message': 'Token de acesso ausente, inválido, expirado ou usuário do token não existe mais'}</msg>
<status status="PASS" starttime="20240525 02:40:13.199" endtime="20240525 02:40:13.201"/>
</kw>
<status status="PASS" starttime="20240525 02:40:12.183" endtime="20240525 02:40:13.201"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>401</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 02:40:13.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 02:40:13.203" endtime="20240525 02:40:13.205"/>
</kw>
<status status="PASS" starttime="20240525 02:40:13.202" endtime="20240525 02:40:13.205"/>
</kw>
<kw name="E verificar a mensagem de validação" library="post_produtos">
<arg>Token de acesso ausente, inválido, expirado ou usuário do token não existe mais</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[message]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240525 02:40:13.207" endtime="20240525 02:40:13.208"/>
</kw>
<status status="PASS" starttime="20240525 02:40:13.206" endtime="20240525 02:40:13.208"/>
</kw>
<kw name="Excluir produto por nome" library="services">
<arg>${nome}</arg>
<kw name="Get in" library="services">
<var>${getResposta}</var>
<arg>/produtos/?nome=${parametros}</arg>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>headers=${headersLogin}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240525 02:40:14.221" level="INFO">GET Request : url=https://serverest.dev/produtos/?nome=George%20Hicks546 
 path_url=/produtos/?nome=George%20Hicks546 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20240525 02:40:14.221" level="INFO">GET Response : url=https://serverest.dev/produtos/?nome=George%20Hicks546 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'a0e13a60145919635394311829f0b89a', 'Date': 'Sat, 25 May 2024 05:40:14 GMT', 'Server': 'Google Frontend', 'Content-Length': '249'} 
 body={
    "quantidade": 1,
    "produtos": [
        {
            "nome": "George Hicks546",
            "preco": 1010,
            "descricao": "Teste Automation",
            "quantidade": 1049,
            "_id": "2qEjpkSa7o09qBVN"
        }
    ]
} 
 </msg>
<msg timestamp="20240525 02:40:14.221" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:40:13.211" endtime="20240525 02:40:14.221"/>
</kw>
<msg timestamp="20240525 02:40:14.222" level="INFO">${getResposta} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:40:13.210" endtime="20240525 02:40:14.222"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${id}</var>
<arg>${getResposta.json()}[produtos][0][_id]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240525 02:40:14.224" level="INFO">${id} = 2qEjpkSa7o09qBVN</msg>
<status status="PASS" starttime="20240525 02:40:14.222" endtime="20240525 02:40:14.224"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:14.225" level="INFO">${id} = 2qEjpkSa7o09qBVN</msg>
<status status="PASS" starttime="20240525 02:40:14.224" endtime="20240525 02:40:14.225"/>
</kw>
<kw name="Delete in" library="services">
<var>${RESPOSTA_DEL}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${id}</arg>
<kw name="DELETE" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request.</doc>
<msg timestamp="20240525 02:40:15.142" level="INFO">DELETE Request : url=https://serverest.dev/produtos/2qEjpkSa7o09qBVN 
 path_url=/produtos/2qEjpkSa7o09qBVN 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': '', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20240525 02:40:15.142" level="INFO">DELETE Response : url=https://serverest.dev/produtos/2qEjpkSa7o09qBVN 
 status=401, reason=Unauthorized 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'cc139071f3a3a50e33447383a5d10f8a', 'Date': 'Sat, 25 May 2024 05:40:15 GMT', 'Server': 'Google Frontend', 'Content-Length': '103'} 
 body={
    "message": "Token de acesso ausente, inválido, expirado ou usuário do token não existe mais"
} 
 </msg>
<msg timestamp="20240525 02:40:15.143" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20240525 02:40:14.226" endtime="20240525 02:40:15.143"/>
</kw>
<msg timestamp="20240525 02:40:15.143" level="INFO">${RESPOSTA_DEL} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20240525 02:40:14.225" endtime="20240525 02:40:15.143"/>
</kw>
<status status="PASS" starttime="20240525 02:40:13.209" endtime="20240525 02:40:15.143"/>
</kw>
<status status="PASS" starttime="20240525 02:40:11.164" endtime="20240525 02:40:15.144"/>
</test>
<test id="s1-t3" name="Atualizar um produto com Token Invalido" line="25">
<kw name="Fakers" library="Utils">
<kw name="Name" library="FakerLibrary">
<var>${FakeNome}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20240525 02:40:15.150" level="INFO">${FakeNome} = Heather Hernandez</msg>
<status status="PASS" starttime="20240525 02:40:15.149" endtime="20240525 02:40:15.150"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeNome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:15.151" level="INFO">${FakeNome} = Heather Hernandez</msg>
<status status="PASS" starttime="20240525 02:40:15.151" endtime="20240525 02:40:15.151"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${FakeEmail}</var>
<msg timestamp="20240525 02:40:15.152" level="INFO">${FakeEmail} = charlesjones@example.com</msg>
<status status="PASS" starttime="20240525 02:40:15.151" endtime="20240525 02:40:15.153"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeEmail}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:15.153" level="INFO">${FakeEmail} = charlesjones@example.com</msg>
<status status="PASS" starttime="20240525 02:40:15.153" endtime="20240525 02:40:15.153"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${compSenha}</var>
<arg>text=##</arg>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:40:15.154" level="INFO">${compSenha} = 56</msg>
<status status="PASS" starttime="20240525 02:40:15.154" endtime="20240525 02:40:15.154"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${FakeSenha}</var>
<arg>Seubarriga</arg>
<arg>${compSenha}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240525 02:40:15.155" level="INFO">${FakeSenha} = Seubarriga 56</msg>
<status status="PASS" starttime="20240525 02:40:15.154" endtime="20240525 02:40:15.155"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeSenha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:15.156" level="INFO">${FakeSenha} = Seubarriga 56</msg>
<status status="PASS" starttime="20240525 02:40:15.155" endtime="20240525 02:40:15.156"/>
</kw>
<kw name="Sentence" library="FakerLibrary">
<var>${FakerDescricao}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20240525 02:40:15.156" level="INFO">${FakerDescricao} = Wish news community good listen risk stay.</msg>
<status status="PASS" starttime="20240525 02:40:15.156" endtime="20240525 02:40:15.156"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerDescricao}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:15.157" level="INFO">${FakerDescricao} = Wish news community good listen risk stay.</msg>
<status status="PASS" starttime="20240525 02:40:15.157" endtime="20240525 02:40:15.157"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${FakerValor}</var>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:40:15.158" level="INFO">${FakerValor} = 057</msg>
<status status="PASS" starttime="20240525 02:40:15.157" endtime="20240525 02:40:15.158"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerValor}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:15.159" level="INFO">${FakerValor} = 057</msg>
<status status="PASS" starttime="20240525 02:40:15.158" endtime="20240525 02:40:15.159"/>
</kw>
<status status="PASS" starttime="20240525 02:40:15.149" endtime="20240525 02:40:15.159"/>
</kw>
<kw name="Dado que tenha uma massa configurada" library="delete_produtos">
<kw name="Cadastro produtos com sucesso" library="services">
<kw name="Fakers" library="Utils">
<kw name="Name" library="FakerLibrary">
<var>${FakeNome}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20240525 02:40:15.163" level="INFO">${FakeNome} = Helen Davis</msg>
<status status="PASS" starttime="20240525 02:40:15.162" endtime="20240525 02:40:15.163"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeNome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:15.164" level="INFO">${FakeNome} = Helen Davis</msg>
<status status="PASS" starttime="20240525 02:40:15.163" endtime="20240525 02:40:15.164"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${FakeEmail}</var>
<msg timestamp="20240525 02:40:15.165" level="INFO">${FakeEmail} = mossallison@example.com</msg>
<status status="PASS" starttime="20240525 02:40:15.164" endtime="20240525 02:40:15.165"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeEmail}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:15.166" level="INFO">${FakeEmail} = mossallison@example.com</msg>
<status status="PASS" starttime="20240525 02:40:15.166" endtime="20240525 02:40:15.166"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${compSenha}</var>
<arg>text=##</arg>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:40:15.167" level="INFO">${compSenha} = 57</msg>
<status status="PASS" starttime="20240525 02:40:15.167" endtime="20240525 02:40:15.167"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${FakeSenha}</var>
<arg>Seubarriga</arg>
<arg>${compSenha}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240525 02:40:15.168" level="INFO">${FakeSenha} = Seubarriga 57</msg>
<status status="PASS" starttime="20240525 02:40:15.167" endtime="20240525 02:40:15.168"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeSenha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:15.169" level="INFO">${FakeSenha} = Seubarriga 57</msg>
<status status="PASS" starttime="20240525 02:40:15.168" endtime="20240525 02:40:15.169"/>
</kw>
<kw name="Sentence" library="FakerLibrary">
<var>${FakerDescricao}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20240525 02:40:15.170" level="INFO">${FakerDescricao} = Trial college in push about pull.</msg>
<status status="PASS" starttime="20240525 02:40:15.169" endtime="20240525 02:40:15.170"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerDescricao}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:15.171" level="INFO">${FakerDescricao} = Trial college in push about pull.</msg>
<status status="PASS" starttime="20240525 02:40:15.170" endtime="20240525 02:40:15.171"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${FakerValor}</var>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:40:15.171" level="INFO">${FakerValor} = 922</msg>
<status status="PASS" starttime="20240525 02:40:15.171" endtime="20240525 02:40:15.171"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerValor}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:15.172" level="INFO">${FakerValor} = 922</msg>
<status status="PASS" starttime="20240525 02:40:15.172" endtime="20240525 02:40:15.172"/>
</kw>
<status status="PASS" starttime="20240525 02:40:15.161" endtime="20240525 02:40:15.172"/>
</kw>
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>${token}</arg>
<arg>${FakeNome}${FakerValor}</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>1049</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:40:15.176" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 02:40:15.175" endtime="20240525 02:40:15.176"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:40:15.178" endtime="20240525 02:40:15.179"/>
</kw>
<status status="PASS" starttime="20240525 02:40:15.176" endtime="20240525 02:40:15.179"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:40:15.181" endtime="20240525 02:40:15.182"/>
</kw>
<status status="PASS" starttime="20240525 02:40:15.180" endtime="20240525 02:40:15.183"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:40:15.184" endtime="20240525 02:40:15.184"/>
</kw>
<status status="PASS" starttime="20240525 02:40:15.183" endtime="20240525 02:40:15.184"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:40:15.185" endtime="20240525 02:40:15.186"/>
</kw>
<status status="PASS" starttime="20240525 02:40:15.185" endtime="20240525 02:40:15.186"/>
</kw>
<msg timestamp="20240525 02:40:15.186" level="INFO">${bodyPostProd} = {'nome': 'Helen Davis922', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 02:40:15.174" endtime="20240525 02:40:15.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:40:15.187" level="INFO">{'nome': 'Helen Davis922', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 02:40:15.187" endtime="20240525 02:40:15.187"/>
</kw>
<kw name="HeadersAuth" library="services">
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:40:15.190" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTYwNywiZXhwIjoxNzE2NjE2MjA3fQ.6qRttd_B39TEj5ycMFhRhl...</msg>
<status status="PASS" starttime="20240525 02:40:15.188" endtime="20240525 02:40:15.190"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:15.191" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTYwNywiZXhwIjoxNzE2NjE2MjA3fQ.6qRttd_B39TEj5ycMFhRhl...</msg>
<status status="PASS" starttime="20240525 02:40:15.190" endtime="20240525 02:40:15.191"/>
</kw>
<status status="PASS" starttime="20240525 02:40:15.187" endtime="20240525 02:40:15.191"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 02:40:16.166" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTYwNywiZXhwIjoxNzE2NjE2MjA3fQ.6qRttd_B39TEj5ycMFhRhlyOSH4DAmSMzEZin8NXM4Y', 'Content-Length': '98', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Helen Davis922", "preco": "1010", "descricao": "Teste Automation", "quantidade": "1049"}' 
 </msg>
<msg timestamp="20240525 02:40:16.167" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'fed29412ffa054106b506f9006c05913', 'Date': 'Sat, 25 May 2024 05:40:16 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "qW6HeZqjh6jIKq0o"
} 
 </msg>
<msg timestamp="20240525 02:40:16.167" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 02:40:15.193" endtime="20240525 02:40:16.167"/>
</kw>
<msg timestamp="20240525 02:40:16.167" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 02:40:15.192" endtime="20240525 02:40:16.167"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:16.168" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 02:40:16.168" endtime="20240525 02:40:16.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:40:16.170" level="INFO">{'message': 'Cadastro realizado com sucesso', '_id': 'qW6HeZqjh6jIKq0o'}</msg>
<status status="PASS" starttime="20240525 02:40:16.168" endtime="20240525 02:40:16.170"/>
</kw>
<status status="PASS" starttime="20240525 02:40:15.173" endtime="20240525 02:40:16.170"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<arg>${RESPOSTA.json()}[_id]</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:16.173" level="INFO">${id} = qW6HeZqjh6jIKq0o</msg>
<status status="PASS" starttime="20240525 02:40:16.170" endtime="20240525 02:40:16.173"/>
</kw>
<status status="PASS" starttime="20240525 02:40:15.161" endtime="20240525 02:40:16.173"/>
</kw>
<status status="PASS" starttime="20240525 02:40:15.160" endtime="20240525 02:40:16.173"/>
</kw>
<kw name="Quando enviar uma requisição Put" library="put_produtos">
<arg>token_invalido</arg>
<arg>${FakeNome}${FakerValor}</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>${FakerValor}</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:40:16.178" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 02:40:16.177" endtime="20240525 02:40:16.178"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:40:16.179" endtime="20240525 02:40:16.179"/>
</kw>
<status status="PASS" starttime="20240525 02:40:16.178" endtime="20240525 02:40:16.179"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:40:16.180" endtime="20240525 02:40:16.181"/>
</kw>
<status status="PASS" starttime="20240525 02:40:16.179" endtime="20240525 02:40:16.181"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:40:16.182" endtime="20240525 02:40:16.182"/>
</kw>
<status status="PASS" starttime="20240525 02:40:16.181" endtime="20240525 02:40:16.182"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:40:16.183" endtime="20240525 02:40:16.184"/>
</kw>
<status status="PASS" starttime="20240525 02:40:16.182" endtime="20240525 02:40:16.184"/>
</kw>
<msg timestamp="20240525 02:40:16.184" level="INFO">${bodyPostProd} = {'nome': 'Helen Davis922', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '922'}</msg>
<status status="PASS" starttime="20240525 02:40:16.176" endtime="20240525 02:40:16.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:40:16.185" level="INFO">{'nome': 'Helen Davis922', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '922'}</msg>
<status status="PASS" starttime="20240525 02:40:16.184" endtime="20240525 02:40:16.185"/>
</kw>
<kw name="HeadersAuth" library="services">
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:40:16.186" level="INFO">${headersAuth} = {'Authorization': 'token_invalido'}</msg>
<status status="PASS" starttime="20240525 02:40:16.186" endtime="20240525 02:40:16.186"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:16.187" level="INFO">${headersAuth} = {'Authorization': 'token_invalido'}</msg>
<status status="PASS" starttime="20240525 02:40:16.186" endtime="20240525 02:40:16.187"/>
</kw>
<status status="PASS" starttime="20240525 02:40:16.185" endtime="20240525 02:40:16.187"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${nome}</var>
<arg>${bodyPostProd['nome']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240525 02:40:16.188" level="INFO">${nome} = Helen Davis922</msg>
<status status="PASS" starttime="20240525 02:40:16.187" endtime="20240525 02:40:16.188"/>
</kw>
<kw name="Put in" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<arg>${id}</arg>
<kw name="PUT" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request.</doc>
<msg timestamp="20240525 02:40:17.292" level="INFO">PUT Request : url=https://serverest.dev/produtos/qW6HeZqjh6jIKq0o 
 path_url=/produtos/qW6HeZqjh6jIKq0o 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'token_invalido', 'Content-Length': '97', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Helen Davis922", "preco": "1010", "descricao": "Teste Automation", "quantidade": "922"}' 
 </msg>
<msg timestamp="20240525 02:40:17.293" level="INFO">PUT Response : url=https://serverest.dev/produtos/qW6HeZqjh6jIKq0o 
 status=401, reason=Unauthorized 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '3b5f3d5e8c4bbbc2f1f439f0b3913d25;o=1', 'Date': 'Sat, 25 May 2024 05:40:17 GMT', 'Server': 'Google Frontend', 'Content-Length': '103'} 
 body={
    "message": "Token de acesso ausente, inválido, expirado ou usuário do token não existe mais"
} 
 </msg>
<msg timestamp="20240525 02:40:17.293" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20240525 02:40:16.190" endtime="20240525 02:40:17.293"/>
</kw>
<msg timestamp="20240525 02:40:17.293" level="INFO">${RESPOSTA} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20240525 02:40:16.189" endtime="20240525 02:40:17.293"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:17.294" level="INFO">${RESPOSTA} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20240525 02:40:17.294" endtime="20240525 02:40:17.294"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${nome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:17.295" level="INFO">${nome} = Helen Davis922</msg>
<status status="PASS" starttime="20240525 02:40:17.295" endtime="20240525 02:40:17.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:40:17.297" level="INFO">{'message': 'Token de acesso ausente, inválido, expirado ou usuário do token não existe mais'}</msg>
<status status="PASS" starttime="20240525 02:40:17.295" endtime="20240525 02:40:17.297"/>
</kw>
<status status="PASS" starttime="20240525 02:40:16.175" endtime="20240525 02:40:17.297"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>401</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 02:40:17.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 02:40:17.300" endtime="20240525 02:40:17.301"/>
</kw>
<status status="PASS" starttime="20240525 02:40:17.299" endtime="20240525 02:40:17.301"/>
</kw>
<kw name="E verificar a mensagem de validação" library="post_produtos">
<arg>Token de acesso ausente, inválido, expirado ou usuário do token não existe mais</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[message]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240525 02:40:17.303" endtime="20240525 02:40:17.305"/>
</kw>
<status status="PASS" starttime="20240525 02:40:17.302" endtime="20240525 02:40:17.305"/>
</kw>
<kw name="Excluir produto por nome" library="services">
<arg>${nome}</arg>
<kw name="Get in" library="services">
<var>${getResposta}</var>
<arg>/produtos/?nome=${parametros}</arg>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>headers=${headersLogin}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240525 02:40:18.318" level="INFO">GET Request : url=https://serverest.dev/produtos/?nome=Helen%20Davis922 
 path_url=/produtos/?nome=Helen%20Davis922 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20240525 02:40:18.318" level="INFO">GET Response : url=https://serverest.dev/produtos/?nome=Helen%20Davis922 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '2872a3a2e68cd4388721eef02d7994e9', 'Date': 'Sat, 25 May 2024 05:40:18 GMT', 'Server': 'Google Frontend', 'Content-Length': '248'} 
 body={
    "quantidade": 1,
    "produtos": [
        {
            "nome": "Helen Davis922",
            "preco": 1010,
            "descricao": "Teste Automation",
            "quantidade": 1049,
            "_id": "qW6HeZqjh6jIKq0o"
        }
    ]
} 
 </msg>
<msg timestamp="20240525 02:40:18.318" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:40:17.308" endtime="20240525 02:40:18.318"/>
</kw>
<msg timestamp="20240525 02:40:18.319" level="INFO">${getResposta} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:40:17.307" endtime="20240525 02:40:18.319"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${id}</var>
<arg>${getResposta.json()}[produtos][0][_id]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240525 02:40:18.321" level="INFO">${id} = qW6HeZqjh6jIKq0o</msg>
<status status="PASS" starttime="20240525 02:40:18.319" endtime="20240525 02:40:18.321"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:40:18.322" level="INFO">${id} = qW6HeZqjh6jIKq0o</msg>
<status status="PASS" starttime="20240525 02:40:18.321" endtime="20240525 02:40:18.322"/>
</kw>
<kw name="Delete in" library="services">
<var>${RESPOSTA_DEL}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${id}</arg>
<kw name="DELETE" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request.</doc>
<msg timestamp="20240525 02:40:19.340" level="INFO">DELETE Request : url=https://serverest.dev/produtos/qW6HeZqjh6jIKq0o 
 path_url=/produtos/qW6HeZqjh6jIKq0o 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'token_invalido', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20240525 02:40:19.341" level="INFO">DELETE Response : url=https://serverest.dev/produtos/qW6HeZqjh6jIKq0o 
 status=401, reason=Unauthorized 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'f62a8ae035d2f39ad45fc46170b1ae5e', 'Date': 'Sat, 25 May 2024 05:40:19 GMT', 'Server': 'Google Frontend', 'Content-Length': '103'} 
 body={
    "message": "Token de acesso ausente, inválido, expirado ou usuário do token não existe mais"
} 
 </msg>
<msg timestamp="20240525 02:40:19.341" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20240525 02:40:18.323" endtime="20240525 02:40:19.341"/>
</kw>
<msg timestamp="20240525 02:40:19.341" level="INFO">${RESPOSTA_DEL} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20240525 02:40:18.322" endtime="20240525 02:40:19.342"/>
</kw>
<status status="PASS" starttime="20240525 02:40:17.306" endtime="20240525 02:40:19.342"/>
</kw>
<status status="PASS" starttime="20240525 02:40:15.148" endtime="20240525 02:40:19.342"/>
</test>
<doc>Documentacao do POST da API: ServeRest</doc>
<status status="PASS" starttime="20240525 02:40:04.817" endtime="20240525 02:40:19.347"/>
</suite>
<statistics>
<total>
<stat pass="3" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="0" skip="0" id="s1" name="04 - Put Produtos">04 - Put Produtos</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
