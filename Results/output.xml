<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.12.3 on win32)" generated="20240525 01:37:11.644" rpa="false" schemaversion="4">
<suite id="s1" name="Features" source="C:\ProjetosC\serveRest-robot\features">
<suite id="s1-s1" name="01 - Login" source="C:\ProjetosC\serveRest-robot\features\01 - login.robot">
<kw name="Conectar a API" library="services" type="SETUP">
<arg>/login</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>apiServeRest</arg>
<arg>${base_url}</arg>
<arg>${headersLogin}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20240525 01:37:12.444" level="INFO">Creating Session using : alias=apiServeRest, url=https://serverest.dev, headers={'accept': 'application/json', 'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20240525 01:37:12.444" endtime="20240525 01:37:12.444"/>
</kw>
<status status="PASS" starttime="20240525 01:37:12.443" endtime="20240525 01:37:12.445"/>
</kw>
<test id="s1-s1-t1" name="Login" line="10">
<kw name="Quando entrar com usuario e senha" library="login">
<kw name="Post in" library="services">
<var>${RESPOSTA}</var>
<arg>/login</arg>
<arg>${bodyLOGIN}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headersLogin}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 01:37:13.587" level="INFO">POST Request : url=https://serverest.dev/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "sandroteste@qa.com", "password": "testeQA"}' 
 </msg>
<msg timestamp="20240525 01:37:13.587" level="INFO">POST Response : url=https://serverest.dev/login 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '1b1e3824defbb22f9482d3ec8b00b547;o=1', 'Date': 'Sat, 25 May 2024 04:37:13 GMT', 'Server': 'Google Frontend', 'Content-Length': '275'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzMywiZXhwIjoxNzE2NjEyNDMzfQ.tFHw7capHPeJFVYeXGUO9DecmJ0phaEXe2og-fR7CNc"
} 
 </msg>
<msg timestamp="20240525 01:37:13.587" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:12.446" endtime="20240525 01:37:13.587"/>
</kw>
<msg timestamp="20240525 01:37:13.588" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:12.445" endtime="20240525 01:37:13.588"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${token}</var>
<arg>${RESPOSTA.json()}[authorization]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240525 01:37:13.590" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzMywiZXhwIjoxNzE2NjEyNDMzfQ.tFHw7capHPeJFVYeXGUO9DecmJ0phaEXe2og-fR7C...</msg>
<status status="PASS" starttime="20240525 01:37:13.588" endtime="20240525 01:37:13.590"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${token}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240525 01:37:13.591" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzMywiZXhwIjoxNzE2NjEyNDMzfQ.tFHw7capHPeJFVYeXGUO9DecmJ0phaEXe2og-fR7C...</msg>
<status status="PASS" starttime="20240525 01:37:13.590" endtime="20240525 01:37:13.591"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240525 01:37:13.592" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:13.591" endtime="20240525 01:37:13.592"/>
</kw>
<status status="PASS" starttime="20240525 01:37:12.445" endtime="20240525 01:37:13.592"/>
</kw>
<kw name="Então o Status Code deverá ser" library="login">
<arg>200</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 01:37:13.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 01:37:13.594" endtime="20240525 01:37:13.595"/>
</kw>
<status status="PASS" starttime="20240525 01:37:13.593" endtime="20240525 01:37:13.596"/>
</kw>
<kw name="E verificar a mensagem" library="login">
<arg>Login realizado com sucesso</arg>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${RESPOSTA.json()}[message]</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240525 01:37:13.597" endtime="20240525 01:37:13.599"/>
</kw>
<status status="PASS" starttime="20240525 01:37:13.597" endtime="20240525 01:37:13.599"/>
</kw>
<status status="PASS" starttime="20240525 01:37:12.445" endtime="20240525 01:37:13.600"/>
</test>
<doc>Documentacao da API: ServeRest</doc>
<status status="PASS" starttime="20240525 01:37:11.693" endtime="20240525 01:37:13.605"/>
</suite>
<suite id="s1-s2" name="02 - Get Produtos" source="C:\ProjetosC\serveRest-robot\features\02 - get_produtos.robot">
<kw name="Conectar a API" library="services" type="SETUP">
<arg>/login</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>apiServeRest</arg>
<arg>${base_url}</arg>
<arg>${headersLogin}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20240525 01:37:13.649" level="INFO">Creating Session using : alias=apiServeRest, url=https://serverest.dev, headers={'accept': 'application/json', 'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20240525 01:37:13.649" endtime="20240525 01:37:13.651"/>
</kw>
<status status="PASS" starttime="20240525 01:37:13.648" endtime="20240525 01:37:13.651"/>
</kw>
<test id="s1-s2-t1" name="Fazer um Get Produtos com sucesso" line="8">
<kw name="Quando verificar os produtos cadastrados" library="get_produtos">
<kw name="Get in" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>headers=${headersLogin}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240525 01:37:14.715" level="INFO">GET Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20240525 01:37:14.715" level="INFO">GET Response : url=https://serverest.dev/produtos 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'c7780d05f80be861e151814ca68d50c2', 'Date': 'Sat, 25 May 2024 04:37:14 GMT', 'Server': 'Google Frontend', 'Content-Length': '3783'} 
 body={
    "quantidade": 18,
    "produtos": [
        {
            "descricao": "Aperiam maiores distinctio tenetur. Voluptate nobis rem officiis non.\nIure quae est necessitatibus. Cupiditate nostrum ipsum dolore qui repellendus. Quas ratione sunt.",
            "nome": "Inventore eveniet.",
            "preco": 10,
            "quantidade": 10,
            "_id": "9Pvhm019a7i7lNCF"
        },
        {
            "nome": "as",
            "preco": 10,
            "descricao": "Produto Teste Robot Framework",
            "quantidade": 5,
            "_id": "AWa6AstPzGkep3px"
        },
        {
            "nome": "Logitech MX Vertical",
            "preco": 470,
            "descricao": "Mouse",
            "quantidade": 382,
            "_id": "BeeJh5lz3k6kSIzA"
        },
        {
            "nome": "loopin v3",
            "preco": 47,
            "descricao": "Capa celular",
            "quantidade": 501,
            "_id": "E8fegtfxImAWQPzW"
        },
        {
            "nome": "speech",
            "preco": 10,
            "descricao": "Produto Teste Robot Framework",
            "quantidade": 5,
            "_id": "GW6NrEmibFnmPPRS"
        },
        {
            "nome": "outside",
            "preco": 10,
            "descricao": "Produto Teste Robot Framework",
            "quantidade": 5,
            "_id": "IpNdQbCMqJISLxpj"
        },
        {
            "nome": "give",
            "preco": 10,
            "descricao": "Produto Teste Robot Framework",
            "quantidade": 5,
            "_id": "Jn8f4jX0walpiumw"
        },
        {
            "nome": "Samsung 60 polegadas",
            "preco": 5240,
            "descricao": "TV",
            "quantidade": 49977,
            "_id": "K6leHdftCeOJj8BJ"
        },
        {
            "nome": "delectus",
            "preco": 46,
            "descricao": "Cum.",
            "quantidade": 90,
            "_id": "OMY7jCqodBbtC3Lm"
        },
        {
            "nome": "time",
            "preco": 10,
            "descricao": "Produto Teste Robot Framework",
            "quantidade": 5,
            "_id": "Oh6Bf638xcOBDx17"
        },
        {
            "nome": "Democrat",
            "preco": 10,
            "descricao": "Produto Teste Robot Framework",
            "quantidade": 5,
            "_id": "TDnujoA779osvBL3"
        },
        {
            "nome": "investment",
            "preco": 10,
            "descricao": "Produto Teste Robot Framework",
            "quantidade": 5,
            "_id": "UvQKs3U2UxOlZ6wi"
        },
        {
            "nome": "123",
            "preco": 123,
            "descricao": "123",
            "quantidade": 123,
            "_id": "VZlQ7BYLuoW5d6r6"
        },
        {
            "nome": "enjoy",
            "preco": 10,
            "descricao": "Produto Teste Robot Framework",
            "quantidade": 5,
            "_id": "b4woBKBiwY1mDyLw"
        },
        {
            "nome": "loopin v2",
            "preco": 47,
            "descricao": "Capa celular",
            "quantidade": 501,
            "_id": "fkFeS0oL4qQbDNif"
        },
        {
            "nome": "TESTE_Product",
            "preco": 400,
            "descricao": "teste api",
            "quantidade": 505,
            "_id": "jyyIFW9R9AAbnobJ"
        },
        {
            "descricao": "Voluptatibus maiores accusamus doloremque unde quod officiis. In nemo numquam est exercitationem facere.",
            "nome": "Quas voluptatibus.",
            "preco": 10,
            "quantidade": 10,
            "_id": "r4OKysaBOnsX13fD"
        },
        {
            "nome": "amet",
            "preco": 46,
            "descricao": "Odit.",
            "quantidade": 13,
            "_id": "uAAwzVgwE69OFQwL"
        }
    ]
} 
 </msg>
<msg timestamp="20240525 01:37:14.716" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:13.653" endtime="20240525 01:37:14.716"/>
</kw>
<msg timestamp="20240525 01:37:14.716" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:13.653" endtime="20240525 01:37:14.716"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240525 01:37:14.718" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:14.717" endtime="20240525 01:37:14.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:14.720" level="INFO">{'quantidade': 18, 'produtos': [{'descricao': 'Aperiam maiores distinctio tenetur. Voluptate nobis rem officiis non.\nIure quae est necessitatibus. Cupiditate nostrum ipsum dolore qui repellendus. Quas ratione sunt.', 'nome': 'Inventore eveniet.', 'preco': 10, 'quantidade': 10, '_id': '9Pvhm019a7i7lNCF'}, {'nome': 'as', 'preco': 10, 'descricao': 'Produto Teste Robot Framework', 'quantidade': 5, '_id': 'AWa6AstPzGkep3px'}, {'nome': 'Logitech MX Vertical', 'preco': 470, 'descricao': 'Mouse', 'quantidade': 382, '_id': 'BeeJh5lz3k6kSIzA'}, {'nome': 'loopin v3', 'preco': 47, 'descricao': 'Capa celular', 'quantidade': 501, '_id': 'E8fegtfxImAWQPzW'}, {'nome': 'speech', 'preco': 10, 'descricao': 'Produto Teste Robot Framework', 'quantidade': 5, '_id': 'GW6NrEmibFnmPPRS'}, {'nome': 'outside', 'preco': 10, 'descricao': 'Produto Teste Robot Framework', 'quantidade': 5, '_id': 'IpNdQbCMqJISLxpj'}, {'nome': 'give', 'preco': 10, 'descricao': 'Produto Teste Robot Framework', 'quantidade': 5, '_id': 'Jn8f4jX0walpiumw'}, {'nome': 'Samsung 60 polegadas', 'preco': 5240, 'descricao': 'TV', 'quantidade': 49977, '_id': 'K6leHdftCeOJj8BJ'}, {'nome': 'delectus', 'preco': 46, 'descricao': 'Cum.', 'quantidade': 90, '_id': 'OMY7jCqodBbtC3Lm'}, {'nome': 'time', 'preco': 10, 'descricao': 'Produto Teste Robot Framework', 'quantidade': 5, '_id': 'Oh6Bf638xcOBDx17'}, {'nome': 'Democrat', 'preco': 10, 'descricao': 'Produto Teste Robot Framework', 'quantidade': 5, '_id': 'TDnujoA779osvBL3'}, {'nome': 'investment', 'preco': 10, 'descricao': 'Produto Teste Robot Framework', 'quantidade': 5, '_id': 'UvQKs3U2UxOlZ6wi'}, {'nome': '123', 'preco': 123, 'descricao': '123', 'quantidade': 123, '_id': 'VZlQ7BYLuoW5d6r6'}, {'nome': 'enjoy', 'preco': 10, 'descricao': 'Produto Teste Robot Framework', 'quantidade': 5, '_id': 'b4woBKBiwY1mDyLw'}, {'nome': 'loopin v2', 'preco': 47, 'descricao': 'Capa celular', 'quantidade': 501, '_id': 'fkFeS0oL4qQbDNif'}, {'nome': 'TESTE_Product', 'preco': 400, 'descricao': 'teste api', 'quantidade': 505, '_id': 'jyyIFW9R9AAbnobJ'}, {'descricao': 'Voluptatibus maiores accusamus doloremque unde quod officiis. In nemo numquam est exercitationem facere.', 'nome': 'Quas voluptatibus.', 'preco': 10, 'quantidade': 10, '_id': 'r4OKysaBOnsX13fD'}, {'nome': 'amet', 'preco': 46, 'descricao': 'Odit.', 'quantidade': 13, '_id': 'uAAwzVgwE69OFQwL'}]}</msg>
<status status="PASS" starttime="20240525 01:37:14.718" endtime="20240525 01:37:14.720"/>
</kw>
<status status="PASS" starttime="20240525 01:37:13.652" endtime="20240525 01:37:14.720"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>200</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 01:37:14.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 01:37:14.721" endtime="20240525 01:37:14.723"/>
</kw>
<status status="PASS" starttime="20240525 01:37:14.721" endtime="20240525 01:37:14.724"/>
</kw>
<kw name="E o body não pode está vazio" library="get_produtos">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20240525 01:37:14.727" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20240525 01:37:14.725" endtime="20240525 01:37:14.727"/>
</kw>
<status status="PASS" starttime="20240525 01:37:14.725" endtime="20240525 01:37:14.727"/>
</kw>
<status status="PASS" starttime="20240525 01:37:13.651" endtime="20240525 01:37:14.729"/>
</test>
<test id="s1-s2-t2" name="Fazer um Get Id Produtos" line="13">
<kw name="Quando verificar o id do produto" library="get_produtos">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<arg>${RESPOSTA.json()}[produtos][0][_id]</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:14.738" level="INFO">${id} = 9Pvhm019a7i7lNCF</msg>
<status status="PASS" starttime="20240525 01:37:14.735" endtime="20240525 01:37:14.738"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${id}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:14.738" level="INFO">9Pvhm019a7i7lNCF</msg>
<status status="PASS" starttime="20240525 01:37:14.738" endtime="20240525 01:37:14.738"/>
</kw>
<kw name="Get Id In" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${id}</arg>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>headers=${headersLogin}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240525 01:37:15.840" level="INFO">GET Request : url=https://serverest.dev/produtos/9Pvhm019a7i7lNCF 
 path_url=/produtos/9Pvhm019a7i7lNCF 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20240525 01:37:15.841" level="INFO">GET Response : url=https://serverest.dev/produtos/9Pvhm019a7i7lNCF 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'b732c3980d1dd609d845ba25b1111fcc', 'Date': 'Sat, 25 May 2024 04:37:16 GMT', 'Server': 'Google Frontend', 'Content-Length': '295'} 
 body={
    "descricao": "Aperiam maiores distinctio tenetur. Voluptate nobis rem officiis non.\nIure quae est necessitatibus. Cupiditate nostrum ipsum dolore qui repellendus. Quas ratione sunt.",
    "nome": "Inventore eveniet.",
    "preco": 10,
    "quantidade": 10,
    "_id": "9Pvhm019a7i7lNCF"
} 
 </msg>
<msg timestamp="20240525 01:37:15.841" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:14.739" endtime="20240525 01:37:15.841"/>
</kw>
<msg timestamp="20240525 01:37:15.841" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:14.738" endtime="20240525 01:37:15.842"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${nome}</var>
<arg>${RESPOSTA.json()}[nome]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240525 01:37:15.844" level="INFO">${nome} = Inventore eveniet.</msg>
<status status="PASS" starttime="20240525 01:37:15.842" endtime="20240525 01:37:15.844"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${nome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:15.845" level="INFO">${nome} = Inventore eveniet.</msg>
<status status="PASS" starttime="20240525 01:37:15.844" endtime="20240525 01:37:15.845"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:15.846" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:15.845" endtime="20240525 01:37:15.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:15.847" level="INFO">{'descricao': 'Aperiam maiores distinctio tenetur. Voluptate nobis rem officiis non.\nIure quae est necessitatibus. Cupiditate nostrum ipsum dolore qui repellendus. Quas ratione sunt.', 'nome': 'Inventore eveniet.', 'preco': 10, 'quantidade': 10, '_id': '9Pvhm019a7i7lNCF'}</msg>
<status status="PASS" starttime="20240525 01:37:15.846" endtime="20240525 01:37:15.847"/>
</kw>
<status status="PASS" starttime="20240525 01:37:14.734" endtime="20240525 01:37:15.848"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>200</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 01:37:15.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 01:37:15.849" endtime="20240525 01:37:15.851"/>
</kw>
<status status="PASS" starttime="20240525 01:37:15.849" endtime="20240525 01:37:15.851"/>
</kw>
<kw name="E validar os campos de retorno do body" library="get_produtos">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${campos}</arg>
<arg>${RESPOSTA.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:15.857" level="INFO">${campos} = {'descricao': 'Aperiam maiores distinctio tenetur. Voluptate nobis rem officiis non.\nIure quae est necessitatibus. Cupiditate nostrum ipsum dolore qui repellendus. Quas ratione sunt.', 'nome': 'Inven...</msg>
<status status="PASS" starttime="20240525 01:37:15.853" endtime="20240525 01:37:15.857"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${campos}</arg>
<arg>descricao</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:15.857" endtime="20240525 01:37:15.858"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${campos}</arg>
<arg>nome</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:15.858" endtime="20240525 01:37:15.858"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${campos}</arg>
<arg>preco</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:15.859" endtime="20240525 01:37:15.859"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${campos}</arg>
<arg>quantidade</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:15.859" endtime="20240525 01:37:15.860"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${campos}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:15.860" endtime="20240525 01:37:15.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${campos}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:15.861" level="INFO">{'descricao': 'Aperiam maiores distinctio tenetur. Voluptate nobis rem officiis non.\nIure quae est necessitatibus. Cupiditate nostrum ipsum dolore qui repellendus. Quas ratione sunt.', 'nome': 'Inventore eveniet.', 'preco': 10, 'quantidade': 10, '_id': '9Pvhm019a7i7lNCF'}</msg>
<status status="PASS" starttime="20240525 01:37:15.861" endtime="20240525 01:37:15.861"/>
</kw>
<status status="PASS" starttime="20240525 01:37:15.853" endtime="20240525 01:37:15.862"/>
</kw>
<kw name="E o body não pode está vazio" library="get_produtos">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20240525 01:37:15.865" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20240525 01:37:15.864" endtime="20240525 01:37:15.865"/>
</kw>
<status status="PASS" starttime="20240525 01:37:15.863" endtime="20240525 01:37:15.865"/>
</kw>
<status status="PASS" starttime="20240525 01:37:14.733" endtime="20240525 01:37:15.867"/>
</test>
<doc>Documentacao da API: ServeRest</doc>
<status status="PASS" starttime="20240525 01:37:13.609" endtime="20240525 01:37:15.870"/>
</suite>
<suite id="s1-s3" name="03 - Post Produtos" source="C:\ProjetosC\serveRest-robot\features\03 - post_produtos.robot">
<kw name="Token" library="services" type="SETUP">
<kw name="Conectar a API" library="services">
<arg>/login</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>apiServeRest</arg>
<arg>${base_url}</arg>
<arg>${headersLogin}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20240525 01:37:15.919" level="INFO">Creating Session using : alias=apiServeRest, url=https://serverest.dev, headers={'accept': 'application/json', 'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20240525 01:37:15.918" endtime="20240525 01:37:15.919"/>
</kw>
<status status="PASS" starttime="20240525 01:37:15.917" endtime="20240525 01:37:15.919"/>
</kw>
<kw name="Quando entrar com usuario e senha" library="login">
<kw name="Post in" library="services">
<var>${RESPOSTA}</var>
<arg>/login</arg>
<arg>${bodyLOGIN}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headersLogin}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 01:37:16.864" level="INFO">POST Request : url=https://serverest.dev/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "sandroteste@qa.com", "password": "testeQA"}' 
 </msg>
<msg timestamp="20240525 01:37:16.864" level="INFO">POST Response : url=https://serverest.dev/login 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '674703145f8a817a62e182c1919caac4', 'Date': 'Sat, 25 May 2024 04:37:17 GMT', 'Server': 'Google Frontend', 'Content-Length': '275'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88XIuODRn1a8UmjcZ8bt-0Kg"
} 
 </msg>
<msg timestamp="20240525 01:37:16.869" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:15.920" endtime="20240525 01:37:16.870"/>
</kw>
<msg timestamp="20240525 01:37:16.870" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:15.920" endtime="20240525 01:37:16.870"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${token}</var>
<arg>${RESPOSTA.json()}[authorization]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240525 01:37:16.873" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88XIuODRn1a8UmjcZ8bt-0...</msg>
<status status="PASS" starttime="20240525 01:37:16.871" endtime="20240525 01:37:16.873"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${token}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240525 01:37:16.874" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88XIuODRn1a8UmjcZ8bt-0...</msg>
<status status="PASS" starttime="20240525 01:37:16.873" endtime="20240525 01:37:16.874"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240525 01:37:16.875" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:16.874" endtime="20240525 01:37:16.875"/>
</kw>
<status status="PASS" starttime="20240525 01:37:15.919" endtime="20240525 01:37:16.875"/>
</kw>
<status status="PASS" starttime="20240525 01:37:15.917" endtime="20240525 01:37:16.875"/>
</kw>
<test id="s1-s3-t1" name="Cadastrar Produto com sucesso" line="8">
<kw name="Fakers" library="Utils">
<kw name="Name" library="FakerLibrary">
<var>${FakeNome}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20240525 01:37:16.879" level="INFO">${FakeNome} = Karen Hodges</msg>
<status status="PASS" starttime="20240525 01:37:16.877" endtime="20240525 01:37:16.879"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeNome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:16.879" level="INFO">${FakeNome} = Karen Hodges</msg>
<status status="PASS" starttime="20240525 01:37:16.879" endtime="20240525 01:37:16.880"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${FakeEmail}</var>
<msg timestamp="20240525 01:37:16.881" level="INFO">${FakeEmail} = anthonymelendez@example.com</msg>
<status status="PASS" starttime="20240525 01:37:16.880" endtime="20240525 01:37:16.881"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeEmail}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:16.882" level="INFO">${FakeEmail} = anthonymelendez@example.com</msg>
<status status="PASS" starttime="20240525 01:37:16.881" endtime="20240525 01:37:16.882"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${compSenha}</var>
<arg>text=##</arg>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 01:37:16.883" level="INFO">${compSenha} = 61</msg>
<status status="PASS" starttime="20240525 01:37:16.882" endtime="20240525 01:37:16.883"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${FakeSenha}</var>
<arg>Seubarriga</arg>
<arg>${compSenha}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240525 01:37:16.884" level="INFO">${FakeSenha} = Seubarriga 61</msg>
<status status="PASS" starttime="20240525 01:37:16.883" endtime="20240525 01:37:16.884"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeSenha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:16.884" level="INFO">${FakeSenha} = Seubarriga 61</msg>
<status status="PASS" starttime="20240525 01:37:16.884" endtime="20240525 01:37:16.885"/>
</kw>
<kw name="Sentence" library="FakerLibrary">
<var>${FakerDescricao}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20240525 01:37:16.886" level="INFO">${FakerDescricao} = Face ahead surface institution strategy.</msg>
<status status="PASS" starttime="20240525 01:37:16.885" endtime="20240525 01:37:16.886"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerDescricao}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:16.887" level="INFO">${FakerDescricao} = Face ahead surface institution strategy.</msg>
<status status="PASS" starttime="20240525 01:37:16.886" endtime="20240525 01:37:16.887"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${FakerValor}</var>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 01:37:16.887" level="INFO">${FakerValor} = 194</msg>
<status status="PASS" starttime="20240525 01:37:16.887" endtime="20240525 01:37:16.888"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerValor}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:16.888" level="INFO">${FakerValor} = 194</msg>
<status status="PASS" starttime="20240525 01:37:16.888" endtime="20240525 01:37:16.888"/>
</kw>
<status status="PASS" starttime="20240525 01:37:16.876" endtime="20240525 01:37:16.888"/>
</kw>
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>${FakeNome}${FakerValor}</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>1049</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 01:37:16.893" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 01:37:16.892" endtime="20240525 01:37:16.893"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:16.894" endtime="20240525 01:37:16.894"/>
</kw>
<status status="PASS" starttime="20240525 01:37:16.893" endtime="20240525 01:37:16.894"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:16.895" endtime="20240525 01:37:16.896"/>
</kw>
<status status="PASS" starttime="20240525 01:37:16.894" endtime="20240525 01:37:16.896"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:16.897" endtime="20240525 01:37:16.897"/>
</kw>
<status status="PASS" starttime="20240525 01:37:16.896" endtime="20240525 01:37:16.897"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:16.898" endtime="20240525 01:37:16.899"/>
</kw>
<status status="PASS" starttime="20240525 01:37:16.898" endtime="20240525 01:37:16.899"/>
</kw>
<msg timestamp="20240525 01:37:16.900" level="INFO">${bodyPostProd} = {'nome': 'Karen Hodges194', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 01:37:16.891" endtime="20240525 01:37:16.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:16.901" level="INFO">{'nome': 'Karen Hodges194', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 01:37:16.900" endtime="20240525 01:37:16.901"/>
</kw>
<kw name="HeadersAuth" library="services">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 01:37:16.903" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88X...</msg>
<status status="PASS" starttime="20240525 01:37:16.902" endtime="20240525 01:37:16.903"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:16.904" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88X...</msg>
<status status="PASS" starttime="20240525 01:37:16.904" endtime="20240525 01:37:16.905"/>
</kw>
<status status="PASS" starttime="20240525 01:37:16.901" endtime="20240525 01:37:16.905"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 01:37:17.989" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88XIuODRn1a8UmjcZ8bt-0Kg', 'Content-Length': '99', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Karen Hodges194", "preco": "1010", "descricao": "Teste Automation", "quantidade": "1049"}' 
 </msg>
<msg timestamp="20240525 01:37:17.989" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '2c583e0c6a561a1124b28ac18361111d', 'Date': 'Sat, 25 May 2024 04:37:18 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "A1U5zpZVuKvsrimS"
} 
 </msg>
<msg timestamp="20240525 01:37:17.989" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:16.906" endtime="20240525 01:37:17.989"/>
</kw>
<msg timestamp="20240525 01:37:17.990" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:16.905" endtime="20240525 01:37:17.990"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:17.990" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:17.990" endtime="20240525 01:37:17.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:17.991" level="INFO">{'message': 'Cadastro realizado com sucesso', '_id': 'A1U5zpZVuKvsrimS'}</msg>
<status status="PASS" starttime="20240525 01:37:17.990" endtime="20240525 01:37:17.992"/>
</kw>
<status status="PASS" starttime="20240525 01:37:16.890" endtime="20240525 01:37:17.992"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>201</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 01:37:17.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 01:37:17.993" endtime="20240525 01:37:17.993"/>
</kw>
<status status="PASS" starttime="20240525 01:37:17.992" endtime="20240525 01:37:17.994"/>
</kw>
<kw name="E verificar a mensagem de validação" library="post_produtos">
<arg>Cadastro realizado com sucesso</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[message]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240525 01:37:17.995" endtime="20240525 01:37:17.995"/>
</kw>
<status status="PASS" starttime="20240525 01:37:17.994" endtime="20240525 01:37:17.995"/>
</kw>
<kw name="Excluir Produto" library="services">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<arg>${RESPOSTA.json()}[_id]</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:17.998" level="INFO">${id} = A1U5zpZVuKvsrimS</msg>
<status status="PASS" starttime="20240525 01:37:17.996" endtime="20240525 01:37:17.998"/>
</kw>
<kw name="Quando enviar uma requisição pra excluir um produto" library="delete_produtos">
<kw name="Delete in" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${id}</arg>
<kw name="DELETE" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a DELETE request.</doc>
<msg timestamp="20240525 01:37:19.017" level="INFO">DELETE Request : url=https://serverest.dev/produtos/A1U5zpZVuKvsrimS 
 path_url=/produtos/A1U5zpZVuKvsrimS 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88XIuODRn1a8UmjcZ8bt-0Kg', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20240525 01:37:19.018" level="INFO">DELETE Response : url=https://serverest.dev/produtos/A1U5zpZVuKvsrimS 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '93b91a36759219f23c9e9442e6a4dffe', 'Date': 'Sat, 25 May 2024 04:37:19 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20240525 01:37:19.019" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:17.999" endtime="20240525 01:37:19.020"/>
</kw>
<msg timestamp="20240525 01:37:19.021" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:17.998" endtime="20240525 01:37:19.021"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:19.023" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:19.022" endtime="20240525 01:37:19.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:19.026" level="INFO">{'message': 'Registro excluído com sucesso'}</msg>
<status status="PASS" starttime="20240525 01:37:19.024" endtime="20240525 01:37:19.026"/>
</kw>
<status status="PASS" starttime="20240525 01:37:17.998" endtime="20240525 01:37:19.026"/>
</kw>
<status status="PASS" starttime="20240525 01:37:17.996" endtime="20240525 01:37:19.026"/>
</kw>
<kw name="E verificar a mensagem de exclusão" library="delete_produtos">
<arg>Registro excluído com sucesso</arg>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${RESPOSTA.json()}[message]</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240525 01:37:19.029" endtime="20240525 01:37:19.030"/>
</kw>
<status status="PASS" starttime="20240525 01:37:19.028" endtime="20240525 01:37:19.030"/>
</kw>
<status status="PASS" starttime="20240525 01:37:16.875" endtime="20240525 01:37:19.031"/>
</test>
<test id="s1-s3-t2" name="Validar Produto duplicado" line="16">
<kw name="Fakers" library="Utils">
<kw name="Name" library="FakerLibrary">
<var>${FakeNome}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20240525 01:37:19.040" level="INFO">${FakeNome} = Sean Martinez</msg>
<status status="PASS" starttime="20240525 01:37:19.038" endtime="20240525 01:37:19.040"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeNome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:19.041" level="INFO">${FakeNome} = Sean Martinez</msg>
<status status="PASS" starttime="20240525 01:37:19.040" endtime="20240525 01:37:19.041"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${FakeEmail}</var>
<msg timestamp="20240525 01:37:19.042" level="INFO">${FakeEmail} = khatfield@example.com</msg>
<status status="PASS" starttime="20240525 01:37:19.041" endtime="20240525 01:37:19.042"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeEmail}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:19.043" level="INFO">${FakeEmail} = khatfield@example.com</msg>
<status status="PASS" starttime="20240525 01:37:19.042" endtime="20240525 01:37:19.043"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${compSenha}</var>
<arg>text=##</arg>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 01:37:19.044" level="INFO">${compSenha} = 13</msg>
<status status="PASS" starttime="20240525 01:37:19.044" endtime="20240525 01:37:19.044"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${FakeSenha}</var>
<arg>Seubarriga</arg>
<arg>${compSenha}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240525 01:37:19.045" level="INFO">${FakeSenha} = Seubarriga 13</msg>
<status status="PASS" starttime="20240525 01:37:19.045" endtime="20240525 01:37:19.045"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeSenha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:19.046" level="INFO">${FakeSenha} = Seubarriga 13</msg>
<status status="PASS" starttime="20240525 01:37:19.045" endtime="20240525 01:37:19.046"/>
</kw>
<kw name="Sentence" library="FakerLibrary">
<var>${FakerDescricao}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20240525 01:37:19.047" level="INFO">${FakerDescricao} = Suffer body food old the.</msg>
<status status="PASS" starttime="20240525 01:37:19.046" endtime="20240525 01:37:19.047"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerDescricao}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:19.048" level="INFO">${FakerDescricao} = Suffer body food old the.</msg>
<status status="PASS" starttime="20240525 01:37:19.047" endtime="20240525 01:37:19.048"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${FakerValor}</var>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 01:37:19.048" level="INFO">${FakerValor} = 936</msg>
<status status="PASS" starttime="20240525 01:37:19.048" endtime="20240525 01:37:19.048"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerValor}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:19.049" level="INFO">${FakerValor} = 936</msg>
<status status="PASS" starttime="20240525 01:37:19.049" endtime="20240525 01:37:19.049"/>
</kw>
<status status="PASS" starttime="20240525 01:37:19.037" endtime="20240525 01:37:19.049"/>
</kw>
<kw name="Cadastro duplicado" library="services">
<arg>Testes Robot 10</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>1049</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 01:37:19.054" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 01:37:19.052" endtime="20240525 01:37:19.054"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:19.056" endtime="20240525 01:37:19.057"/>
</kw>
<status status="PASS" starttime="20240525 01:37:19.055" endtime="20240525 01:37:19.058"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:19.059" endtime="20240525 01:37:19.060"/>
</kw>
<status status="PASS" starttime="20240525 01:37:19.058" endtime="20240525 01:37:19.060"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:19.061" endtime="20240525 01:37:19.062"/>
</kw>
<status status="PASS" starttime="20240525 01:37:19.061" endtime="20240525 01:37:19.062"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:19.064" endtime="20240525 01:37:19.064"/>
</kw>
<status status="PASS" starttime="20240525 01:37:19.063" endtime="20240525 01:37:19.065"/>
</kw>
<msg timestamp="20240525 01:37:19.065" level="INFO">${bodyPostProd} = {'nome': 'Testes Robot 10', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 01:37:19.051" endtime="20240525 01:37:19.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:19.066" level="INFO">{'nome': 'Testes Robot 10', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 01:37:19.065" endtime="20240525 01:37:19.066"/>
</kw>
<kw name="HeadersAuth" library="services">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 01:37:19.069" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88X...</msg>
<status status="PASS" starttime="20240525 01:37:19.067" endtime="20240525 01:37:19.069"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:19.070" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88X...</msg>
<status status="PASS" starttime="20240525 01:37:19.069" endtime="20240525 01:37:19.070"/>
</kw>
<status status="PASS" starttime="20240525 01:37:19.066" endtime="20240525 01:37:19.070"/>
</kw>
<kw name="Post Cadastrar" library="services">
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 01:37:20.038" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88XIuODRn1a8UmjcZ8bt-0Kg', 'Content-Length': '99', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Testes Robot 10", "preco": "1010", "descricao": "Teste Automation", "quantidade": "1049"}' 
 </msg>
<msg timestamp="20240525 01:37:20.038" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '30c3b1eb06cc07d09e22bb183306a5c6', 'Date': 'Sat, 25 May 2024 04:37:20 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "vxLzof2xOq8hZXpL"
} 
 </msg>
<msg timestamp="20240525 01:37:20.039" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:19.072" endtime="20240525 01:37:20.039"/>
</kw>
<status status="PASS" starttime="20240525 01:37:19.070" endtime="20240525 01:37:20.039"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 01:37:21.060" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88XIuODRn1a8UmjcZ8bt-0Kg', 'Content-Length': '99', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Testes Robot 10", "preco": "1010", "descricao": "Teste Automation", "quantidade": "1049"}' 
 </msg>
<msg timestamp="20240525 01:37:21.060" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=400, reason=Bad Request 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'd85e2360b7b763733f8e91c24c473748', 'Date': 'Sat, 25 May 2024 04:37:21 GMT', 'Server': 'Google Frontend', 'Content-Length': '53'} 
 body={
    "message": "Já existe produto com esse nome"
} 
 </msg>
<msg timestamp="20240525 01:37:21.060" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:20.040" endtime="20240525 01:37:21.060"/>
</kw>
<msg timestamp="20240525 01:37:21.061" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:20.039" endtime="20240525 01:37:21.061"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:21.061" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:21.061" endtime="20240525 01:37:21.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:21.062" level="INFO">{'message': 'Já existe produto com esse nome'}</msg>
<status status="PASS" starttime="20240525 01:37:21.061" endtime="20240525 01:37:21.062"/>
</kw>
<status status="PASS" starttime="20240525 01:37:19.050" endtime="20240525 01:37:21.062"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>400</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 01:37:21.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 01:37:21.063" endtime="20240525 01:37:21.063"/>
</kw>
<status status="PASS" starttime="20240525 01:37:21.062" endtime="20240525 01:37:21.063"/>
</kw>
<kw name="E verificar a mensagem de validação" library="post_produtos">
<arg>Já existe produto com esse nome</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[message]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240525 01:37:21.064" endtime="20240525 01:37:21.065"/>
</kw>
<status status="PASS" starttime="20240525 01:37:21.064" endtime="20240525 01:37:21.065"/>
</kw>
<kw name="Excluir produto por nome" library="services">
<arg>Testes Robot 10</arg>
<kw name="Get in" library="services">
<var>${getResposta}</var>
<arg>/produtos/?nome=${parametros}</arg>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>headers=${headersLogin}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240525 01:37:22.084" level="INFO">GET Request : url=https://serverest.dev/produtos/?nome=Testes%20Robot%2010 
 path_url=/produtos/?nome=Testes%20Robot%2010 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20240525 01:37:22.085" level="INFO">GET Response : url=https://serverest.dev/produtos/?nome=Testes%20Robot%2010 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '175f782d72c6f3eb80cf8f09fb8c9c24', 'Date': 'Sat, 25 May 2024 04:37:22 GMT', 'Server': 'Google Frontend', 'Content-Length': '249'} 
 body={
    "quantidade": 1,
    "produtos": [
        {
            "nome": "Testes Robot 10",
            "preco": 1010,
            "descricao": "Teste Automation",
            "quantidade": 1049,
            "_id": "vxLzof2xOq8hZXpL"
        }
    ]
} 
 </msg>
<msg timestamp="20240525 01:37:22.085" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:21.066" endtime="20240525 01:37:22.085"/>
</kw>
<msg timestamp="20240525 01:37:22.085" level="INFO">${getResposta} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:21.065" endtime="20240525 01:37:22.085"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${id}</var>
<arg>${getResposta.json()}[produtos][0][_id]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240525 01:37:22.086" level="INFO">${id} = vxLzof2xOq8hZXpL</msg>
<status status="PASS" starttime="20240525 01:37:22.085" endtime="20240525 01:37:22.086"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:22.086" level="INFO">${id} = vxLzof2xOq8hZXpL</msg>
<status status="PASS" starttime="20240525 01:37:22.086" endtime="20240525 01:37:22.086"/>
</kw>
<kw name="Delete in" library="services">
<var>${RESPOSTA_DEL}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${id}</arg>
<kw name="DELETE" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a DELETE request.</doc>
<msg timestamp="20240525 01:37:23.109" level="INFO">DELETE Request : url=https://serverest.dev/produtos/vxLzof2xOq8hZXpL 
 path_url=/produtos/vxLzof2xOq8hZXpL 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88XIuODRn1a8UmjcZ8bt-0Kg', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20240525 01:37:23.110" level="INFO">DELETE Response : url=https://serverest.dev/produtos/vxLzof2xOq8hZXpL 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'efe25ba72e0f94a6ac4a9f2c76ba47e7', 'Date': 'Sat, 25 May 2024 04:37:23 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20240525 01:37:23.110" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:22.087" endtime="20240525 01:37:23.110"/>
</kw>
<msg timestamp="20240525 01:37:23.110" level="INFO">${RESPOSTA_DEL} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:22.086" endtime="20240525 01:37:23.110"/>
</kw>
<status status="PASS" starttime="20240525 01:37:21.065" endtime="20240525 01:37:23.110"/>
</kw>
<status status="PASS" starttime="20240525 01:37:19.036" endtime="20240525 01:37:23.112"/>
</test>
<test id="s1-s3-t3" name="Validar o campo Nome em Branco" line="23">
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>${EMPTY}</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>1049</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 01:37:23.119" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 01:37:23.119" endtime="20240525 01:37:23.120"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:23.121" endtime="20240525 01:37:23.121"/>
</kw>
<status status="PASS" starttime="20240525 01:37:23.120" endtime="20240525 01:37:23.121"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:23.122" endtime="20240525 01:37:23.123"/>
</kw>
<status status="PASS" starttime="20240525 01:37:23.122" endtime="20240525 01:37:23.123"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:23.124" endtime="20240525 01:37:23.124"/>
</kw>
<status status="PASS" starttime="20240525 01:37:23.123" endtime="20240525 01:37:23.125"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:23.125" endtime="20240525 01:37:23.126"/>
</kw>
<status status="PASS" starttime="20240525 01:37:23.125" endtime="20240525 01:37:23.126"/>
</kw>
<msg timestamp="20240525 01:37:23.127" level="INFO">${bodyPostProd} = {'nome': '', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 01:37:23.118" endtime="20240525 01:37:23.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:23.128" level="INFO">{'nome': '', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 01:37:23.127" endtime="20240525 01:37:23.128"/>
</kw>
<kw name="HeadersAuth" library="services">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 01:37:23.131" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88X...</msg>
<status status="PASS" starttime="20240525 01:37:23.129" endtime="20240525 01:37:23.131"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:23.132" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88X...</msg>
<status status="PASS" starttime="20240525 01:37:23.131" endtime="20240525 01:37:23.132"/>
</kw>
<status status="PASS" starttime="20240525 01:37:23.129" endtime="20240525 01:37:23.132"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 01:37:24.237" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88XIuODRn1a8UmjcZ8bt-0Kg', 'Content-Length': '84', 'Content-Type': 'application/json'} 
 body=b'{"nome": "", "preco": "1010", "descricao": "Teste Automation", "quantidade": "1049"}' 
 </msg>
<msg timestamp="20240525 01:37:24.237" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=400, reason=Bad Request 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'dd576e8b2bd5e74c9913c1a567547492;o=1', 'Date': 'Sat, 25 May 2024 04:37:24 GMT', 'Server': 'Google Frontend', 'Content-Length': '48'} 
 body={
    "nome": "nome não pode ficar em branco"
} 
 </msg>
<msg timestamp="20240525 01:37:24.238" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:23.134" endtime="20240525 01:37:24.238"/>
</kw>
<msg timestamp="20240525 01:37:24.238" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:23.133" endtime="20240525 01:37:24.238"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:24.239" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:24.239" endtime="20240525 01:37:24.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:24.241" level="INFO">{'nome': 'nome não pode ficar em branco'}</msg>
<status status="PASS" starttime="20240525 01:37:24.240" endtime="20240525 01:37:24.241"/>
</kw>
<status status="PASS" starttime="20240525 01:37:23.116" endtime="20240525 01:37:24.242"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>400</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 01:37:24.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 01:37:24.244" endtime="20240525 01:37:24.245"/>
</kw>
<status status="PASS" starttime="20240525 01:37:24.242" endtime="20240525 01:37:24.246"/>
</kw>
<kw name="E verificar a mensagem de validação do campo" library="post_produtos">
<arg>nome</arg>
<arg>nome não pode ficar em branco</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[${campo}]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240525 01:37:24.248" endtime="20240525 01:37:24.249"/>
</kw>
<status status="PASS" starttime="20240525 01:37:24.247" endtime="20240525 01:37:24.250"/>
</kw>
<status status="PASS" starttime="20240525 01:37:23.115" endtime="20240525 01:37:24.251"/>
</test>
<test id="s1-s3-t4" name="Validar o campo Nome Obrigatório" line="28">
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>None</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>1049</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 01:37:24.258" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 01:37:24.257" endtime="20240525 01:37:24.258"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240525 01:37:24.258" endtime="20240525 01:37:24.259"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:24.259" endtime="20240525 01:37:24.260"/>
</kw>
<status status="PASS" starttime="20240525 01:37:24.259" endtime="20240525 01:37:24.260"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:24.260" endtime="20240525 01:37:24.261"/>
</kw>
<status status="PASS" starttime="20240525 01:37:24.260" endtime="20240525 01:37:24.261"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:24.262" endtime="20240525 01:37:24.262"/>
</kw>
<status status="PASS" starttime="20240525 01:37:24.261" endtime="20240525 01:37:24.263"/>
</kw>
<msg timestamp="20240525 01:37:24.263" level="INFO">${bodyPostProd} = {'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 01:37:24.256" endtime="20240525 01:37:24.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:24.264" level="INFO">{'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 01:37:24.263" endtime="20240525 01:37:24.264"/>
</kw>
<kw name="HeadersAuth" library="services">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 01:37:24.266" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88X...</msg>
<status status="PASS" starttime="20240525 01:37:24.265" endtime="20240525 01:37:24.266"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:24.267" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88X...</msg>
<status status="PASS" starttime="20240525 01:37:24.266" endtime="20240525 01:37:24.267"/>
</kw>
<status status="PASS" starttime="20240525 01:37:24.264" endtime="20240525 01:37:24.267"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 01:37:25.363" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88XIuODRn1a8UmjcZ8bt-0Kg', 'Content-Length': '72', 'Content-Type': 'application/json'} 
 body=b'{"preco": "1010", "descricao": "Teste Automation", "quantidade": "1049"}' 
 </msg>
<msg timestamp="20240525 01:37:25.363" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=400, reason=Bad Request 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'de7496ceb73349a1bc33f23a0aace777', 'Date': 'Sat, 25 May 2024 04:37:25 GMT', 'Server': 'Google Frontend', 'Content-Length': '38'} 
 body={
    "nome": "nome é obrigatório"
} 
 </msg>
<msg timestamp="20240525 01:37:25.367" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:24.268" endtime="20240525 01:37:25.367"/>
</kw>
<msg timestamp="20240525 01:37:25.367" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:24.267" endtime="20240525 01:37:25.368"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:25.368" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:25.368" endtime="20240525 01:37:25.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:25.371" level="INFO">{'nome': 'nome é obrigatório'}</msg>
<status status="PASS" starttime="20240525 01:37:25.369" endtime="20240525 01:37:25.371"/>
</kw>
<status status="PASS" starttime="20240525 01:37:24.255" endtime="20240525 01:37:25.371"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>400</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 01:37:25.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 01:37:25.373" endtime="20240525 01:37:25.375"/>
</kw>
<status status="PASS" starttime="20240525 01:37:25.372" endtime="20240525 01:37:25.375"/>
</kw>
<kw name="E verificar a mensagem de validação do campo" library="post_produtos">
<arg>nome</arg>
<arg>nome é obrigatório</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[${campo}]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240525 01:37:25.377" endtime="20240525 01:37:25.378"/>
</kw>
<status status="PASS" starttime="20240525 01:37:25.376" endtime="20240525 01:37:25.379"/>
</kw>
<status status="PASS" starttime="20240525 01:37:24.254" endtime="20240525 01:37:25.380"/>
</test>
<test id="s1-s3-t5" name="Validar o campo Preço em Branco" line="33">
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>nome</arg>
<arg>${EMPTY}</arg>
<arg>descricao</arg>
<arg>quantidade</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 01:37:25.388" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 01:37:25.387" endtime="20240525 01:37:25.388"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:25.389" endtime="20240525 01:37:25.389"/>
</kw>
<status status="PASS" starttime="20240525 01:37:25.388" endtime="20240525 01:37:25.389"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:25.390" endtime="20240525 01:37:25.391"/>
</kw>
<status status="PASS" starttime="20240525 01:37:25.390" endtime="20240525 01:37:25.391"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:25.392" endtime="20240525 01:37:25.392"/>
</kw>
<status status="PASS" starttime="20240525 01:37:25.391" endtime="20240525 01:37:25.392"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:25.393" endtime="20240525 01:37:25.394"/>
</kw>
<status status="PASS" starttime="20240525 01:37:25.393" endtime="20240525 01:37:25.394"/>
</kw>
<msg timestamp="20240525 01:37:25.395" level="INFO">${bodyPostProd} = {'nome': 'nome', 'preco': '', 'descricao': 'descricao', 'quantidade': 'quantidade'}</msg>
<status status="PASS" starttime="20240525 01:37:25.386" endtime="20240525 01:37:25.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:25.395" level="INFO">{'nome': 'nome', 'preco': '', 'descricao': 'descricao', 'quantidade': 'quantidade'}</msg>
<status status="PASS" starttime="20240525 01:37:25.395" endtime="20240525 01:37:25.395"/>
</kw>
<kw name="HeadersAuth" library="services">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 01:37:25.397" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88X...</msg>
<status status="PASS" starttime="20240525 01:37:25.396" endtime="20240525 01:37:25.397"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:25.398" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88X...</msg>
<status status="PASS" starttime="20240525 01:37:25.397" endtime="20240525 01:37:25.398"/>
</kw>
<status status="PASS" starttime="20240525 01:37:25.396" endtime="20240525 01:37:25.398"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 01:37:26.339" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88XIuODRn1a8UmjcZ8bt-0Kg', 'Content-Length': '83', 'Content-Type': 'application/json'} 
 body=b'{"nome": "nome", "preco": "", "descricao": "descricao", "quantidade": "quantidade"}' 
 </msg>
<msg timestamp="20240525 01:37:26.339" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=400, reason=Bad Request 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '0be71461877f0fec947a864d85f44a58', 'Date': 'Sat, 25 May 2024 04:37:26 GMT', 'Server': 'Google Frontend', 'Content-Length': '96'} 
 body={
    "preco": "preco deve ser um número",
    "quantidade": "quantidade deve ser um número"
} 
 </msg>
<msg timestamp="20240525 01:37:26.339" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:25.399" endtime="20240525 01:37:26.340"/>
</kw>
<msg timestamp="20240525 01:37:26.340" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:25.398" endtime="20240525 01:37:26.340"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:26.341" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:26.340" endtime="20240525 01:37:26.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:26.343" level="INFO">{'preco': 'preco deve ser um número', 'quantidade': 'quantidade deve ser um número'}</msg>
<status status="PASS" starttime="20240525 01:37:26.341" endtime="20240525 01:37:26.343"/>
</kw>
<status status="PASS" starttime="20240525 01:37:25.384" endtime="20240525 01:37:26.343"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>400</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 01:37:26.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 01:37:26.345" endtime="20240525 01:37:26.346"/>
</kw>
<status status="PASS" starttime="20240525 01:37:26.344" endtime="20240525 01:37:26.347"/>
</kw>
<kw name="E verificar a mensagem de validação do campo" library="post_produtos">
<arg>preco</arg>
<arg>preco deve ser um número</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[${campo}]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240525 01:37:26.348" endtime="20240525 01:37:26.350"/>
</kw>
<status status="PASS" starttime="20240525 01:37:26.347" endtime="20240525 01:37:26.350"/>
</kw>
<status status="PASS" starttime="20240525 01:37:25.383" endtime="20240525 01:37:26.351"/>
</test>
<test id="s1-s3-t6" name="Validar o campo Preço Obrigatório" line="38">
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>nome</arg>
<arg>None</arg>
<arg>descricao</arg>
<arg>quantidade</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 01:37:26.359" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 01:37:26.358" endtime="20240525 01:37:26.359"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:26.360" endtime="20240525 01:37:26.361"/>
</kw>
<status status="PASS" starttime="20240525 01:37:26.359" endtime="20240525 01:37:26.361"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240525 01:37:26.361" endtime="20240525 01:37:26.362"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:26.363" endtime="20240525 01:37:26.364"/>
</kw>
<status status="PASS" starttime="20240525 01:37:26.362" endtime="20240525 01:37:26.364"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:26.365" endtime="20240525 01:37:26.365"/>
</kw>
<status status="PASS" starttime="20240525 01:37:26.364" endtime="20240525 01:37:26.366"/>
</kw>
<msg timestamp="20240525 01:37:26.366" level="INFO">${bodyPostProd} = {'nome': 'nome', 'descricao': 'descricao', 'quantidade': 'quantidade'}</msg>
<status status="PASS" starttime="20240525 01:37:26.356" endtime="20240525 01:37:26.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:26.367" level="INFO">{'nome': 'nome', 'descricao': 'descricao', 'quantidade': 'quantidade'}</msg>
<status status="PASS" starttime="20240525 01:37:26.366" endtime="20240525 01:37:26.367"/>
</kw>
<kw name="HeadersAuth" library="services">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 01:37:26.369" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88X...</msg>
<status status="PASS" starttime="20240525 01:37:26.368" endtime="20240525 01:37:26.369"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:26.369" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88X...</msg>
<status status="PASS" starttime="20240525 01:37:26.369" endtime="20240525 01:37:26.370"/>
</kw>
<status status="PASS" starttime="20240525 01:37:26.367" endtime="20240525 01:37:26.370"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 01:37:27.309" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88XIuODRn1a8UmjcZ8bt-0Kg', 'Content-Length': '70', 'Content-Type': 'application/json'} 
 body=b'{"nome": "nome", "descricao": "descricao", "quantidade": "quantidade"}' 
 </msg>
<msg timestamp="20240525 01:37:27.309" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=400, reason=Bad Request 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'c9831c462324b6e620bacf22c6e8d97e', 'Date': 'Sat, 25 May 2024 04:37:27 GMT', 'Server': 'Google Frontend', 'Content-Length': '92'} 
 body={
    "preco": "preco é obrigatório",
    "quantidade": "quantidade deve ser um número"
} 
 </msg>
<msg timestamp="20240525 01:37:27.313" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:26.371" endtime="20240525 01:37:27.313"/>
</kw>
<msg timestamp="20240525 01:37:27.313" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:26.370" endtime="20240525 01:37:27.313"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:27.314" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:27.314" endtime="20240525 01:37:27.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:27.317" level="INFO">{'preco': 'preco é obrigatório', 'quantidade': 'quantidade deve ser um número'}</msg>
<status status="PASS" starttime="20240525 01:37:27.315" endtime="20240525 01:37:27.317"/>
</kw>
<status status="PASS" starttime="20240525 01:37:26.355" endtime="20240525 01:37:27.317"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>400</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 01:37:27.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 01:37:27.318" endtime="20240525 01:37:27.320"/>
</kw>
<status status="PASS" starttime="20240525 01:37:27.317" endtime="20240525 01:37:27.320"/>
</kw>
<kw name="E verificar a mensagem de validação do campo" library="post_produtos">
<arg>preco</arg>
<arg>preco é obrigatório</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[${campo}]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240525 01:37:27.322" endtime="20240525 01:37:27.324"/>
</kw>
<status status="PASS" starttime="20240525 01:37:27.321" endtime="20240525 01:37:27.324"/>
</kw>
<status status="PASS" starttime="20240525 01:37:26.354" endtime="20240525 01:37:27.325"/>
</test>
<test id="s1-s3-t7" name="Validar o campo Descrição em Branco" line="43">
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>nome</arg>
<arg>preco</arg>
<arg>${EMPTY}</arg>
<arg>quantidade</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 01:37:27.332" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 01:37:27.332" endtime="20240525 01:37:27.333"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:27.334" endtime="20240525 01:37:27.334"/>
</kw>
<status status="PASS" starttime="20240525 01:37:27.333" endtime="20240525 01:37:27.334"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:27.335" endtime="20240525 01:37:27.336"/>
</kw>
<status status="PASS" starttime="20240525 01:37:27.335" endtime="20240525 01:37:27.336"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:27.337" endtime="20240525 01:37:27.337"/>
</kw>
<status status="PASS" starttime="20240525 01:37:27.336" endtime="20240525 01:37:27.337"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:27.338" endtime="20240525 01:37:27.338"/>
</kw>
<status status="PASS" starttime="20240525 01:37:27.337" endtime="20240525 01:37:27.339"/>
</kw>
<msg timestamp="20240525 01:37:27.339" level="INFO">${bodyPostProd} = {'nome': 'nome', 'preco': 'preco', 'descricao': '', 'quantidade': 'quantidade'}</msg>
<status status="PASS" starttime="20240525 01:37:27.331" endtime="20240525 01:37:27.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:27.339" level="INFO">{'nome': 'nome', 'preco': 'preco', 'descricao': '', 'quantidade': 'quantidade'}</msg>
<status status="PASS" starttime="20240525 01:37:27.339" endtime="20240525 01:37:27.340"/>
</kw>
<kw name="HeadersAuth" library="services">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 01:37:27.341" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88X...</msg>
<status status="PASS" starttime="20240525 01:37:27.340" endtime="20240525 01:37:27.341"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:27.342" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88X...</msg>
<status status="PASS" starttime="20240525 01:37:27.341" endtime="20240525 01:37:27.342"/>
</kw>
<status status="PASS" starttime="20240525 01:37:27.340" endtime="20240525 01:37:27.342"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 01:37:28.333" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88XIuODRn1a8UmjcZ8bt-0Kg', 'Content-Length': '79', 'Content-Type': 'application/json'} 
 body=b'{"nome": "nome", "preco": "preco", "descricao": "", "quantidade": "quantidade"}' 
 </msg>
<msg timestamp="20240525 01:37:28.334" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=400, reason=Bad Request 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '02677a5ed4c4ddc8167cef373f23c98b', 'Date': 'Sat, 25 May 2024 04:37:28 GMT', 'Server': 'Google Frontend', 'Content-Length': '152'} 
 body={
    "preco": "preco deve ser um número",
    "descricao": "descricao não pode ficar em branco",
    "quantidade": "quantidade deve ser um número"
} 
 </msg>
<msg timestamp="20240525 01:37:28.334" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:27.343" endtime="20240525 01:37:28.334"/>
</kw>
<msg timestamp="20240525 01:37:28.335" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:27.342" endtime="20240525 01:37:28.335"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:28.336" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:28.335" endtime="20240525 01:37:28.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:28.338" level="INFO">{'preco': 'preco deve ser um número', 'descricao': 'descricao não pode ficar em branco', 'quantidade': 'quantidade deve ser um número'}</msg>
<status status="PASS" starttime="20240525 01:37:28.336" endtime="20240525 01:37:28.338"/>
</kw>
<status status="PASS" starttime="20240525 01:37:27.329" endtime="20240525 01:37:28.338"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>400</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 01:37:28.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 01:37:28.340" endtime="20240525 01:37:28.342"/>
</kw>
<status status="PASS" starttime="20240525 01:37:28.339" endtime="20240525 01:37:28.342"/>
</kw>
<kw name="E verificar a mensagem de validação do campo" library="post_produtos">
<arg>descricao</arg>
<arg>descricao não pode ficar em branco</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[${campo}]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240525 01:37:28.344" endtime="20240525 01:37:28.346"/>
</kw>
<status status="PASS" starttime="20240525 01:37:28.343" endtime="20240525 01:37:28.346"/>
</kw>
<status status="PASS" starttime="20240525 01:37:27.328" endtime="20240525 01:37:28.347"/>
</test>
<test id="s1-s3-t8" name="Validar o campo Descrição Obrigatório" line="48">
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>nome</arg>
<arg>preco</arg>
<arg>None</arg>
<arg>quantidade</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 01:37:28.354" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 01:37:28.354" endtime="20240525 01:37:28.354"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:28.355" endtime="20240525 01:37:28.356"/>
</kw>
<status status="PASS" starttime="20240525 01:37:28.354" endtime="20240525 01:37:28.356"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:28.357" endtime="20240525 01:37:28.357"/>
</kw>
<status status="PASS" starttime="20240525 01:37:28.356" endtime="20240525 01:37:28.357"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240525 01:37:28.358" endtime="20240525 01:37:28.358"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:28.359" endtime="20240525 01:37:28.360"/>
</kw>
<status status="PASS" starttime="20240525 01:37:28.358" endtime="20240525 01:37:28.360"/>
</kw>
<msg timestamp="20240525 01:37:28.360" level="INFO">${bodyPostProd} = {'nome': 'nome', 'preco': 'preco', 'quantidade': 'quantidade'}</msg>
<status status="PASS" starttime="20240525 01:37:28.352" endtime="20240525 01:37:28.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:28.361" level="INFO">{'nome': 'nome', 'preco': 'preco', 'quantidade': 'quantidade'}</msg>
<status status="PASS" starttime="20240525 01:37:28.360" endtime="20240525 01:37:28.361"/>
</kw>
<kw name="HeadersAuth" library="services">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 01:37:28.362" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88X...</msg>
<status status="PASS" starttime="20240525 01:37:28.361" endtime="20240525 01:37:28.362"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:28.363" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88X...</msg>
<status status="PASS" starttime="20240525 01:37:28.362" endtime="20240525 01:37:28.363"/>
</kw>
<status status="PASS" starttime="20240525 01:37:28.361" endtime="20240525 01:37:28.363"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 01:37:29.459" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88XIuODRn1a8UmjcZ8bt-0Kg', 'Content-Length': '62', 'Content-Type': 'application/json'} 
 body=b'{"nome": "nome", "preco": "preco", "quantidade": "quantidade"}' 
 </msg>
<msg timestamp="20240525 01:37:29.459" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=400, reason=Bad Request 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '9c36f1b5e604241065edef04c6bb9bc2', 'Date': 'Sat, 25 May 2024 04:37:29 GMT', 'Server': 'Google Frontend', 'Content-Length': '142'} 
 body={
    "preco": "preco deve ser um número",
    "descricao": "descricao é obrigatório",
    "quantidade": "quantidade deve ser um número"
} 
 </msg>
<msg timestamp="20240525 01:37:29.464" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:28.364" endtime="20240525 01:37:29.464"/>
</kw>
<msg timestamp="20240525 01:37:29.464" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:28.363" endtime="20240525 01:37:29.464"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:29.465" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:29.465" endtime="20240525 01:37:29.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:29.467" level="INFO">{'preco': 'preco deve ser um número', 'descricao': 'descricao é obrigatório', 'quantidade': 'quantidade deve ser um número'}</msg>
<status status="PASS" starttime="20240525 01:37:29.465" endtime="20240525 01:37:29.467"/>
</kw>
<status status="PASS" starttime="20240525 01:37:28.352" endtime="20240525 01:37:29.467"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>400</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 01:37:29.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 01:37:29.470" endtime="20240525 01:37:29.471"/>
</kw>
<status status="PASS" starttime="20240525 01:37:29.469" endtime="20240525 01:37:29.472"/>
</kw>
<kw name="E verificar a mensagem de validação do campo" library="post_produtos">
<arg>descricao</arg>
<arg>descricao é obrigatório</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[${campo}]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240525 01:37:29.474" endtime="20240525 01:37:29.476"/>
</kw>
<status status="PASS" starttime="20240525 01:37:29.473" endtime="20240525 01:37:29.476"/>
</kw>
<status status="PASS" starttime="20240525 01:37:28.351" endtime="20240525 01:37:29.477"/>
</test>
<test id="s1-s3-t9" name="Validar o campo Quantidade em Branco" line="53">
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>nome</arg>
<arg>preco</arg>
<arg>descricao</arg>
<arg>${EMPTY}</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 01:37:29.485" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 01:37:29.485" endtime="20240525 01:37:29.485"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:29.486" endtime="20240525 01:37:29.487"/>
</kw>
<status status="PASS" starttime="20240525 01:37:29.486" endtime="20240525 01:37:29.487"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:29.488" endtime="20240525 01:37:29.488"/>
</kw>
<status status="PASS" starttime="20240525 01:37:29.487" endtime="20240525 01:37:29.489"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:29.490" endtime="20240525 01:37:29.490"/>
</kw>
<status status="PASS" starttime="20240525 01:37:29.489" endtime="20240525 01:37:29.490"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:29.491" endtime="20240525 01:37:29.492"/>
</kw>
<status status="PASS" starttime="20240525 01:37:29.490" endtime="20240525 01:37:29.492"/>
</kw>
<msg timestamp="20240525 01:37:29.492" level="INFO">${bodyPostProd} = {'nome': 'nome', 'preco': 'preco', 'descricao': 'descricao', 'quantidade': ''}</msg>
<status status="PASS" starttime="20240525 01:37:29.483" endtime="20240525 01:37:29.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:29.493" level="INFO">{'nome': 'nome', 'preco': 'preco', 'descricao': 'descricao', 'quantidade': ''}</msg>
<status status="PASS" starttime="20240525 01:37:29.492" endtime="20240525 01:37:29.493"/>
</kw>
<kw name="HeadersAuth" library="services">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 01:37:29.494" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88X...</msg>
<status status="PASS" starttime="20240525 01:37:29.494" endtime="20240525 01:37:29.494"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:29.496" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88X...</msg>
<status status="PASS" starttime="20240525 01:37:29.495" endtime="20240525 01:37:29.496"/>
</kw>
<status status="PASS" starttime="20240525 01:37:29.493" endtime="20240525 01:37:29.496"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 01:37:30.484" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88XIuODRn1a8UmjcZ8bt-0Kg', 'Content-Length': '78', 'Content-Type': 'application/json'} 
 body=b'{"nome": "nome", "preco": "preco", "descricao": "descricao", "quantidade": ""}' 
 </msg>
<msg timestamp="20240525 01:37:30.484" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=400, reason=Bad Request 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'ebdc317e6ca558ff62a3642868cfdfa3', 'Date': 'Sat, 25 May 2024 04:37:30 GMT', 'Server': 'Google Frontend', 'Content-Length': '96'} 
 body={
    "preco": "preco deve ser um número",
    "quantidade": "quantidade deve ser um número"
} 
 </msg>
<msg timestamp="20240525 01:37:30.485" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:29.497" endtime="20240525 01:37:30.485"/>
</kw>
<msg timestamp="20240525 01:37:30.485" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:29.496" endtime="20240525 01:37:30.485"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:30.486" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:30.486" endtime="20240525 01:37:30.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:30.488" level="INFO">{'preco': 'preco deve ser um número', 'quantidade': 'quantidade deve ser um número'}</msg>
<status status="PASS" starttime="20240525 01:37:30.487" endtime="20240525 01:37:30.488"/>
</kw>
<status status="PASS" starttime="20240525 01:37:29.481" endtime="20240525 01:37:30.489"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>400</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 01:37:30.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 01:37:30.491" endtime="20240525 01:37:30.493"/>
</kw>
<status status="PASS" starttime="20240525 01:37:30.490" endtime="20240525 01:37:30.493"/>
</kw>
<kw name="E verificar a mensagem de validação do campo" library="post_produtos">
<arg>quantidade</arg>
<arg>quantidade deve ser um número</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[${campo}]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240525 01:37:30.495" endtime="20240525 01:37:30.497"/>
</kw>
<status status="PASS" starttime="20240525 01:37:30.494" endtime="20240525 01:37:30.497"/>
</kw>
<status status="PASS" starttime="20240525 01:37:29.480" endtime="20240525 01:37:30.498"/>
</test>
<test id="s1-s3-t10" name="Validar o campo Quantidade Obrigatório" line="58">
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>nome</arg>
<arg>preco</arg>
<arg>descricao</arg>
<arg>None</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 01:37:30.505" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 01:37:30.505" endtime="20240525 01:37:30.505"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:30.506" endtime="20240525 01:37:30.507"/>
</kw>
<status status="PASS" starttime="20240525 01:37:30.506" endtime="20240525 01:37:30.507"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:30.508" endtime="20240525 01:37:30.509"/>
</kw>
<status status="PASS" starttime="20240525 01:37:30.507" endtime="20240525 01:37:30.509"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:30.510" endtime="20240525 01:37:30.510"/>
</kw>
<status status="PASS" starttime="20240525 01:37:30.509" endtime="20240525 01:37:30.510"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240525 01:37:30.511" endtime="20240525 01:37:30.511"/>
</kw>
<msg timestamp="20240525 01:37:30.511" level="INFO">${bodyPostProd} = {'nome': 'nome', 'preco': 'preco', 'descricao': 'descricao'}</msg>
<status status="PASS" starttime="20240525 01:37:30.503" endtime="20240525 01:37:30.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:30.512" level="INFO">{'nome': 'nome', 'preco': 'preco', 'descricao': 'descricao'}</msg>
<status status="PASS" starttime="20240525 01:37:30.512" endtime="20240525 01:37:30.512"/>
</kw>
<kw name="HeadersAuth" library="services">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 01:37:30.514" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88X...</msg>
<status status="PASS" starttime="20240525 01:37:30.513" endtime="20240525 01:37:30.514"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:30.515" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88X...</msg>
<status status="PASS" starttime="20240525 01:37:30.514" endtime="20240525 01:37:30.515"/>
</kw>
<status status="PASS" starttime="20240525 01:37:30.512" endtime="20240525 01:37:30.515"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 01:37:31.531" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTgzNywiZXhwIjoxNzE2NjEyNDM3fQ.iZdeZ1Otxl8-tbCwc9b88XIuODRn1a8UmjcZ8bt-0Kg', 'Content-Length': '60', 'Content-Type': 'application/json'} 
 body=b'{"nome": "nome", "preco": "preco", "descricao": "descricao"}' 
 </msg>
<msg timestamp="20240525 01:37:31.531" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=400, reason=Bad Request 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '1950707eb1a87a5a6f72827db532359b', 'Date': 'Sat, 25 May 2024 04:37:31 GMT', 'Server': 'Google Frontend', 'Content-Length': '92'} 
 body={
    "preco": "preco deve ser um número",
    "quantidade": "quantidade é obrigatório"
} 
 </msg>
<msg timestamp="20240525 01:37:31.535" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:30.516" endtime="20240525 01:37:31.535"/>
</kw>
<msg timestamp="20240525 01:37:31.535" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:30.515" endtime="20240525 01:37:31.536"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:31.537" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:31.536" endtime="20240525 01:37:31.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:31.539" level="INFO">{'preco': 'preco deve ser um número', 'quantidade': 'quantidade é obrigatório'}</msg>
<status status="PASS" starttime="20240525 01:37:31.537" endtime="20240525 01:37:31.539"/>
</kw>
<status status="PASS" starttime="20240525 01:37:30.503" endtime="20240525 01:37:31.539"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>400</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 01:37:31.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 01:37:31.541" endtime="20240525 01:37:31.543"/>
</kw>
<status status="PASS" starttime="20240525 01:37:31.540" endtime="20240525 01:37:31.543"/>
</kw>
<kw name="E verificar a mensagem de validação do campo" library="post_produtos">
<arg>quantidade</arg>
<arg>quantidade é obrigatório</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[${campo}]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240525 01:37:31.545" endtime="20240525 01:37:31.546"/>
</kw>
<status status="PASS" starttime="20240525 01:37:31.544" endtime="20240525 01:37:31.547"/>
</kw>
<status status="PASS" starttime="20240525 01:37:30.502" endtime="20240525 01:37:31.548"/>
</test>
<doc>Documentacao do POST da API: ServeRest</doc>
<status status="PASS" starttime="20240525 01:37:15.874" endtime="20240525 01:37:31.552"/>
</suite>
<suite id="s1-s4" name="04 - Put Produtos" source="C:\ProjetosC\serveRest-robot\features\04 - put_produtos.robot">
<kw name="Token" library="services" type="SETUP">
<kw name="Conectar a API" library="services">
<arg>/login</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>apiServeRest</arg>
<arg>${base_url}</arg>
<arg>${headersLogin}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20240525 01:37:31.601" level="INFO">Creating Session using : alias=apiServeRest, url=https://serverest.dev, headers={'accept': 'application/json', 'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20240525 01:37:31.601" endtime="20240525 01:37:31.602"/>
</kw>
<status status="PASS" starttime="20240525 01:37:31.600" endtime="20240525 01:37:31.603"/>
</kw>
<kw name="Quando entrar com usuario e senha" library="login">
<kw name="Post in" library="services">
<var>${RESPOSTA}</var>
<arg>/login</arg>
<arg>${bodyLOGIN}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headersLogin}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 01:37:32.736" level="INFO">POST Request : url=https://serverest.dev/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "sandroteste@qa.com", "password": "testeQA"}' 
 </msg>
<msg timestamp="20240525 01:37:32.736" level="INFO">POST Response : url=https://serverest.dev/login 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '3218fb0c312a23976d1ecdfc246294ef', 'Date': 'Sat, 25 May 2024 04:37:33 GMT', 'Server': 'Google Frontend', 'Content-Length': '275'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTg1MywiZXhwIjoxNzE2NjEyNDUzfQ.TQPLfA8zixzwZqvpg3jYNGYwGL6JVbnO8JMbxfNDIGE"
} 
 </msg>
<msg timestamp="20240525 01:37:32.736" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:31.604" endtime="20240525 01:37:32.736"/>
</kw>
<msg timestamp="20240525 01:37:32.737" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:31.603" endtime="20240525 01:37:32.737"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${token}</var>
<arg>${RESPOSTA.json()}[authorization]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240525 01:37:32.739" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTg1MywiZXhwIjoxNzE2NjEyNDUzfQ.TQPLfA8zixzwZqvpg3jYNGYwGL6JVbnO8JMbxfNDI...</msg>
<status status="PASS" starttime="20240525 01:37:32.737" endtime="20240525 01:37:32.739"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${token}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240525 01:37:32.740" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTg1MywiZXhwIjoxNzE2NjEyNDUzfQ.TQPLfA8zixzwZqvpg3jYNGYwGL6JVbnO8JMbxfNDI...</msg>
<status status="PASS" starttime="20240525 01:37:32.739" endtime="20240525 01:37:32.740"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240525 01:37:32.741" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:32.741" endtime="20240525 01:37:32.741"/>
</kw>
<status status="PASS" starttime="20240525 01:37:31.603" endtime="20240525 01:37:32.742"/>
</kw>
<status status="PASS" starttime="20240525 01:37:31.599" endtime="20240525 01:37:32.742"/>
</kw>
<test id="s1-s4-t1" name="Atualizar um produto com sucesso" line="9">
<kw name="Fakers" library="Utils">
<kw name="Name" library="FakerLibrary">
<var>${FakeNome}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20240525 01:37:32.745" level="INFO">${FakeNome} = Hailey Craig</msg>
<status status="PASS" starttime="20240525 01:37:32.744" endtime="20240525 01:37:32.746"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeNome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:32.746" level="INFO">${FakeNome} = Hailey Craig</msg>
<status status="PASS" starttime="20240525 01:37:32.746" endtime="20240525 01:37:32.747"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${FakeEmail}</var>
<msg timestamp="20240525 01:37:32.748" level="INFO">${FakeEmail} = duffyzachary@example.com</msg>
<status status="PASS" starttime="20240525 01:37:32.747" endtime="20240525 01:37:32.748"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeEmail}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:32.749" level="INFO">${FakeEmail} = duffyzachary@example.com</msg>
<status status="PASS" starttime="20240525 01:37:32.749" endtime="20240525 01:37:32.749"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${compSenha}</var>
<arg>text=##</arg>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 01:37:32.750" level="INFO">${compSenha} = 98</msg>
<status status="PASS" starttime="20240525 01:37:32.750" endtime="20240525 01:37:32.750"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${FakeSenha}</var>
<arg>Seubarriga</arg>
<arg>${compSenha}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240525 01:37:32.751" level="INFO">${FakeSenha} = Seubarriga 98</msg>
<status status="PASS" starttime="20240525 01:37:32.751" endtime="20240525 01:37:32.751"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeSenha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:32.752" level="INFO">${FakeSenha} = Seubarriga 98</msg>
<status status="PASS" starttime="20240525 01:37:32.752" endtime="20240525 01:37:32.752"/>
</kw>
<kw name="Sentence" library="FakerLibrary">
<var>${FakerDescricao}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20240525 01:37:32.753" level="INFO">${FakerDescricao} = See black heavy.</msg>
<status status="PASS" starttime="20240525 01:37:32.753" endtime="20240525 01:37:32.753"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerDescricao}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:32.754" level="INFO">${FakerDescricao} = See black heavy.</msg>
<status status="PASS" starttime="20240525 01:37:32.753" endtime="20240525 01:37:32.754"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${FakerValor}</var>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 01:37:32.755" level="INFO">${FakerValor} = 220</msg>
<status status="PASS" starttime="20240525 01:37:32.754" endtime="20240525 01:37:32.755"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerValor}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:32.755" level="INFO">${FakerValor} = 220</msg>
<status status="PASS" starttime="20240525 01:37:32.755" endtime="20240525 01:37:32.757"/>
</kw>
<status status="PASS" starttime="20240525 01:37:32.743" endtime="20240525 01:37:32.757"/>
</kw>
<kw name="Dado que tenha uma massa configurada" library="delete_produtos">
<kw name="Cadastro produtos com sucesso" library="services">
<kw name="Fakers" library="Utils">
<kw name="Name" library="FakerLibrary">
<var>${FakeNome}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20240525 01:37:32.761" level="INFO">${FakeNome} = Christine Goodman</msg>
<status status="PASS" starttime="20240525 01:37:32.760" endtime="20240525 01:37:32.761"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeNome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:32.762" level="INFO">${FakeNome} = Christine Goodman</msg>
<status status="PASS" starttime="20240525 01:37:32.761" endtime="20240525 01:37:32.762"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${FakeEmail}</var>
<msg timestamp="20240525 01:37:32.763" level="INFO">${FakeEmail} = lauren75@example.net</msg>
<status status="PASS" starttime="20240525 01:37:32.762" endtime="20240525 01:37:32.763"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeEmail}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:32.764" level="INFO">${FakeEmail} = lauren75@example.net</msg>
<status status="PASS" starttime="20240525 01:37:32.763" endtime="20240525 01:37:32.764"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${compSenha}</var>
<arg>text=##</arg>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 01:37:32.765" level="INFO">${compSenha} = 67</msg>
<status status="PASS" starttime="20240525 01:37:32.764" endtime="20240525 01:37:32.765"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${FakeSenha}</var>
<arg>Seubarriga</arg>
<arg>${compSenha}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240525 01:37:32.766" level="INFO">${FakeSenha} = Seubarriga 67</msg>
<status status="PASS" starttime="20240525 01:37:32.765" endtime="20240525 01:37:32.766"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeSenha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:32.766" level="INFO">${FakeSenha} = Seubarriga 67</msg>
<status status="PASS" starttime="20240525 01:37:32.766" endtime="20240525 01:37:32.767"/>
</kw>
<kw name="Sentence" library="FakerLibrary">
<var>${FakerDescricao}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20240525 01:37:32.767" level="INFO">${FakerDescricao} = Face despite individual want enter eye pretty.</msg>
<status status="PASS" starttime="20240525 01:37:32.767" endtime="20240525 01:37:32.767"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerDescricao}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:32.768" level="INFO">${FakerDescricao} = Face despite individual want enter eye pretty.</msg>
<status status="PASS" starttime="20240525 01:37:32.768" endtime="20240525 01:37:32.768"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${FakerValor}</var>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 01:37:32.769" level="INFO">${FakerValor} = 012</msg>
<status status="PASS" starttime="20240525 01:37:32.769" endtime="20240525 01:37:32.769"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerValor}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:32.770" level="INFO">${FakerValor} = 012</msg>
<status status="PASS" starttime="20240525 01:37:32.769" endtime="20240525 01:37:32.770"/>
</kw>
<status status="PASS" starttime="20240525 01:37:32.759" endtime="20240525 01:37:32.770"/>
</kw>
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>${FakeNome}${FakerValor}</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>1049</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 01:37:32.773" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 01:37:32.772" endtime="20240525 01:37:32.773"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:32.774" endtime="20240525 01:37:32.774"/>
</kw>
<status status="PASS" starttime="20240525 01:37:32.773" endtime="20240525 01:37:32.774"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:32.775" endtime="20240525 01:37:32.776"/>
</kw>
<status status="PASS" starttime="20240525 01:37:32.775" endtime="20240525 01:37:32.776"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:32.777" endtime="20240525 01:37:32.778"/>
</kw>
<status status="PASS" starttime="20240525 01:37:32.776" endtime="20240525 01:37:32.778"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:32.779" endtime="20240525 01:37:32.779"/>
</kw>
<status status="PASS" starttime="20240525 01:37:32.778" endtime="20240525 01:37:32.779"/>
</kw>
<msg timestamp="20240525 01:37:32.780" level="INFO">${bodyPostProd} = {'nome': 'Christine Goodman012', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 01:37:32.771" endtime="20240525 01:37:32.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:32.780" level="INFO">{'nome': 'Christine Goodman012', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 01:37:32.780" endtime="20240525 01:37:32.781"/>
</kw>
<kw name="HeadersAuth" library="services">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 01:37:32.782" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTg1MywiZXhwIjoxNzE2NjEyNDUzfQ.TQPLfA8zixzwZqvpg3jYNG...</msg>
<status status="PASS" starttime="20240525 01:37:32.782" endtime="20240525 01:37:32.783"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:32.784" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTg1MywiZXhwIjoxNzE2NjEyNDUzfQ.TQPLfA8zixzwZqvpg3jYNG...</msg>
<status status="PASS" starttime="20240525 01:37:32.783" endtime="20240525 01:37:32.784"/>
</kw>
<status status="PASS" starttime="20240525 01:37:32.781" endtime="20240525 01:37:32.784"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 01:37:33.964" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTg1MywiZXhwIjoxNzE2NjEyNDUzfQ.TQPLfA8zixzwZqvpg3jYNGYwGL6JVbnO8JMbxfNDIGE', 'Content-Length': '104', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Christine Goodman012", "preco": "1010", "descricao": "Teste Automation", "quantidade": "1049"}' 
 </msg>
<msg timestamp="20240525 01:37:33.964" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'e5e8dbe7cd1aedfac56af1d0fb5ae4a7', 'Date': 'Sat, 25 May 2024 04:37:34 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "ghGXiGbMkuUB5KC5"
} 
 </msg>
<msg timestamp="20240525 01:37:33.964" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:32.785" endtime="20240525 01:37:33.964"/>
</kw>
<msg timestamp="20240525 01:37:33.964" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:32.784" endtime="20240525 01:37:33.964"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:33.965" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:33.964" endtime="20240525 01:37:33.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:33.965" level="INFO">{'message': 'Cadastro realizado com sucesso', '_id': 'ghGXiGbMkuUB5KC5'}</msg>
<status status="PASS" starttime="20240525 01:37:33.965" endtime="20240525 01:37:33.965"/>
</kw>
<status status="PASS" starttime="20240525 01:37:32.770" endtime="20240525 01:37:33.965"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<arg>${RESPOSTA.json()}[_id]</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:33.967" level="INFO">${id} = ghGXiGbMkuUB5KC5</msg>
<status status="PASS" starttime="20240525 01:37:33.966" endtime="20240525 01:37:33.967"/>
</kw>
<status status="PASS" starttime="20240525 01:37:32.759" endtime="20240525 01:37:33.967"/>
</kw>
<status status="PASS" starttime="20240525 01:37:32.757" endtime="20240525 01:37:33.967"/>
</kw>
<kw name="Quando enviar uma requisição Put" library="put_produtos">
<arg>${FakeNome}${FakerValor}</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>${FakerValor}</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 01:37:33.969" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 01:37:33.968" endtime="20240525 01:37:33.969"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:33.969" endtime="20240525 01:37:33.969"/>
</kw>
<status status="PASS" starttime="20240525 01:37:33.969" endtime="20240525 01:37:33.969"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:33.970" endtime="20240525 01:37:33.970"/>
</kw>
<status status="PASS" starttime="20240525 01:37:33.969" endtime="20240525 01:37:33.970"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:33.970" endtime="20240525 01:37:33.971"/>
</kw>
<status status="PASS" starttime="20240525 01:37:33.970" endtime="20240525 01:37:33.971"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:33.971" endtime="20240525 01:37:33.971"/>
</kw>
<status status="PASS" starttime="20240525 01:37:33.971" endtime="20240525 01:37:33.971"/>
</kw>
<msg timestamp="20240525 01:37:33.971" level="INFO">${bodyPostProd} = {'nome': 'Christine Goodman012', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '012'}</msg>
<status status="PASS" starttime="20240525 01:37:33.968" endtime="20240525 01:37:33.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:33.971" level="INFO">{'nome': 'Christine Goodman012', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '012'}</msg>
<status status="PASS" starttime="20240525 01:37:33.971" endtime="20240525 01:37:33.971"/>
</kw>
<kw name="HeadersAuth" library="services">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 01:37:33.972" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTg1MywiZXhwIjoxNzE2NjEyNDUzfQ.TQPLfA8zixzwZqvpg3jYNG...</msg>
<status status="PASS" starttime="20240525 01:37:33.972" endtime="20240525 01:37:33.972"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:33.972" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTg1MywiZXhwIjoxNzE2NjEyNDUzfQ.TQPLfA8zixzwZqvpg3jYNG...</msg>
<status status="PASS" starttime="20240525 01:37:33.972" endtime="20240525 01:37:33.972"/>
</kw>
<status status="PASS" starttime="20240525 01:37:33.971" endtime="20240525 01:37:33.972"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${nome}</var>
<arg>${bodyPostProd['nome']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240525 01:37:33.973" level="INFO">${nome} = Christine Goodman012</msg>
<status status="PASS" starttime="20240525 01:37:33.972" endtime="20240525 01:37:33.973"/>
</kw>
<kw name="Put in" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<arg>${id}</arg>
<kw name="PUT" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request.</doc>
<msg timestamp="20240525 01:37:34.991" level="INFO">PUT Request : url=https://serverest.dev/produtos/ghGXiGbMkuUB5KC5 
 path_url=/produtos/ghGXiGbMkuUB5KC5 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTg1MywiZXhwIjoxNzE2NjEyNDUzfQ.TQPLfA8zixzwZqvpg3jYNGYwGL6JVbnO8JMbxfNDIGE', 'Content-Length': '103', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Christine Goodman012", "preco": "1010", "descricao": "Teste Automation", "quantidade": "012"}' 
 </msg>
<msg timestamp="20240525 01:37:34.992" level="INFO">PUT Response : url=https://serverest.dev/produtos/ghGXiGbMkuUB5KC5 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '9ddba6c9aca2319d39b075f3c31f508e;o=1', 'Date': 'Sat, 25 May 2024 04:37:35 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20240525 01:37:34.994" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:33.974" endtime="20240525 01:37:34.994"/>
</kw>
<msg timestamp="20240525 01:37:34.995" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:33.973" endtime="20240525 01:37:34.995"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:34.997" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:34.996" endtime="20240525 01:37:34.997"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${nome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:34.998" level="INFO">${nome} = Christine Goodman012</msg>
<status status="PASS" starttime="20240525 01:37:34.998" endtime="20240525 01:37:34.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:35.001" level="INFO">{'message': 'Registro alterado com sucesso'}</msg>
<status status="PASS" starttime="20240525 01:37:34.999" endtime="20240525 01:37:35.001"/>
</kw>
<status status="PASS" starttime="20240525 01:37:33.967" endtime="20240525 01:37:35.001"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>200</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 01:37:35.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 01:37:35.005" endtime="20240525 01:37:35.006"/>
</kw>
<status status="PASS" starttime="20240525 01:37:35.003" endtime="20240525 01:37:35.007"/>
</kw>
<kw name="E verificar a mensagem de validação" library="post_produtos">
<arg>Registro alterado com sucesso</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[message]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240525 01:37:35.009" endtime="20240525 01:37:35.010"/>
</kw>
<status status="PASS" starttime="20240525 01:37:35.008" endtime="20240525 01:37:35.011"/>
</kw>
<kw name="Excluir produto por nome" library="services">
<arg>${nome}</arg>
<kw name="Get in" library="services">
<var>${getResposta}</var>
<arg>/produtos/?nome=${parametros}</arg>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>headers=${headersLogin}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240525 01:37:36.012" level="INFO">GET Request : url=https://serverest.dev/produtos/?nome=Christine%20Goodman012 
 path_url=/produtos/?nome=Christine%20Goodman012 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20240525 01:37:36.012" level="INFO">GET Response : url=https://serverest.dev/produtos/?nome=Christine%20Goodman012 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'e913f8c9803f717b29ad9228585c731c', 'Date': 'Sat, 25 May 2024 04:37:36 GMT', 'Server': 'Google Frontend', 'Content-Length': '252'} 
 body={
    "quantidade": 1,
    "produtos": [
        {
            "nome": "Christine Goodman012",
            "preco": 1010,
            "descricao": "Teste Automation",
            "quantidade": 12,
            "_id": "ghGXiGbMkuUB5KC5"
        }
    ]
} 
 </msg>
<msg timestamp="20240525 01:37:36.012" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:35.014" endtime="20240525 01:37:36.012"/>
</kw>
<msg timestamp="20240525 01:37:36.012" level="INFO">${getResposta} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:35.013" endtime="20240525 01:37:36.012"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${id}</var>
<arg>${getResposta.json()}[produtos][0][_id]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240525 01:37:36.013" level="INFO">${id} = ghGXiGbMkuUB5KC5</msg>
<status status="PASS" starttime="20240525 01:37:36.013" endtime="20240525 01:37:36.013"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:36.014" level="INFO">${id} = ghGXiGbMkuUB5KC5</msg>
<status status="PASS" starttime="20240525 01:37:36.013" endtime="20240525 01:37:36.014"/>
</kw>
<kw name="Delete in" library="services">
<var>${RESPOSTA_DEL}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${id}</arg>
<kw name="DELETE" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a DELETE request.</doc>
<msg timestamp="20240525 01:37:37.138" level="INFO">DELETE Request : url=https://serverest.dev/produtos/ghGXiGbMkuUB5KC5 
 path_url=/produtos/ghGXiGbMkuUB5KC5 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTg1MywiZXhwIjoxNzE2NjEyNDUzfQ.TQPLfA8zixzwZqvpg3jYNGYwGL6JVbnO8JMbxfNDIGE', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20240525 01:37:37.138" level="INFO">DELETE Response : url=https://serverest.dev/produtos/ghGXiGbMkuUB5KC5 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '9c58b615c3114fea72f38bea16d07844', 'Date': 'Sat, 25 May 2024 04:37:37 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20240525 01:37:37.139" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:36.014" endtime="20240525 01:37:37.139"/>
</kw>
<msg timestamp="20240525 01:37:37.139" level="INFO">${RESPOSTA_DEL} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:36.014" endtime="20240525 01:37:37.139"/>
</kw>
<status status="PASS" starttime="20240525 01:37:35.011" endtime="20240525 01:37:37.139"/>
</kw>
<status status="PASS" starttime="20240525 01:37:32.742" endtime="20240525 01:37:37.139"/>
</test>
<doc>Documentacao do POST da API: ServeRest</doc>
<status status="PASS" starttime="20240525 01:37:31.558" endtime="20240525 01:37:37.141"/>
</suite>
<suite id="s1-s5" name="05 - Delete Produtos" source="C:\ProjetosC\serveRest-robot\features\05 - delete_produtos.robot">
<kw name="Token" library="services" type="SETUP">
<kw name="Conectar a API" library="services">
<arg>/login</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>apiServeRest</arg>
<arg>${base_url}</arg>
<arg>${headersLogin}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20240525 01:37:37.161" level="INFO">Creating Session using : alias=apiServeRest, url=https://serverest.dev, headers={'accept': 'application/json', 'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20240525 01:37:37.161" endtime="20240525 01:37:37.161"/>
</kw>
<status status="PASS" starttime="20240525 01:37:37.160" endtime="20240525 01:37:37.161"/>
</kw>
<kw name="Quando entrar com usuario e senha" library="login">
<kw name="Post in" library="services">
<var>${RESPOSTA}</var>
<arg>/login</arg>
<arg>${bodyLOGIN}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headersLogin}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 01:37:38.164" level="INFO">POST Request : url=https://serverest.dev/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "sandroteste@qa.com", "password": "testeQA"}' 
 </msg>
<msg timestamp="20240525 01:37:38.164" level="INFO">POST Response : url=https://serverest.dev/login 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '479969d241cd4f4ac22887550a7c66b2', 'Date': 'Sat, 25 May 2024 04:37:38 GMT', 'Server': 'Google Frontend', 'Content-Length': '275'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTg1OCwiZXhwIjoxNzE2NjEyNDU4fQ.b6dmUskc27XpqYHHFjUXrnV0g5yfpfkjT_9I5Abaack"
} 
 </msg>
<msg timestamp="20240525 01:37:38.165" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:37.162" endtime="20240525 01:37:38.165"/>
</kw>
<msg timestamp="20240525 01:37:38.165" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:37.162" endtime="20240525 01:37:38.165"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${token}</var>
<arg>${RESPOSTA.json()}[authorization]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240525 01:37:38.167" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTg1OCwiZXhwIjoxNzE2NjEyNDU4fQ.b6dmUskc27XpqYHHFjUXrnV0g5yfpfkjT_9I5Abaa...</msg>
<status status="PASS" starttime="20240525 01:37:38.166" endtime="20240525 01:37:38.167"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${token}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240525 01:37:38.168" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTg1OCwiZXhwIjoxNzE2NjEyNDU4fQ.b6dmUskc27XpqYHHFjUXrnV0g5yfpfkjT_9I5Abaa...</msg>
<status status="PASS" starttime="20240525 01:37:38.167" endtime="20240525 01:37:38.168"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240525 01:37:38.169" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:38.168" endtime="20240525 01:37:38.169"/>
</kw>
<status status="PASS" starttime="20240525 01:37:37.162" endtime="20240525 01:37:38.169"/>
</kw>
<status status="PASS" starttime="20240525 01:37:37.160" endtime="20240525 01:37:38.169"/>
</kw>
<test id="s1-s5-t1" name="Deletar produto com sucesso" line="9">
<kw name="Dado que tenha uma massa configurada" library="delete_produtos">
<kw name="Cadastro produtos com sucesso" library="services">
<kw name="Fakers" library="Utils">
<kw name="Name" library="FakerLibrary">
<var>${FakeNome}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20240525 01:37:38.174" level="INFO">${FakeNome} = Robin Palmer</msg>
<status status="PASS" starttime="20240525 01:37:38.172" endtime="20240525 01:37:38.174"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeNome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:38.175" level="INFO">${FakeNome} = Robin Palmer</msg>
<status status="PASS" starttime="20240525 01:37:38.174" endtime="20240525 01:37:38.175"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${FakeEmail}</var>
<msg timestamp="20240525 01:37:38.176" level="INFO">${FakeEmail} = robert01@example.com</msg>
<status status="PASS" starttime="20240525 01:37:38.175" endtime="20240525 01:37:38.176"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeEmail}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:38.177" level="INFO">${FakeEmail} = robert01@example.com</msg>
<status status="PASS" starttime="20240525 01:37:38.176" endtime="20240525 01:37:38.177"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${compSenha}</var>
<arg>text=##</arg>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 01:37:38.178" level="INFO">${compSenha} = 04</msg>
<status status="PASS" starttime="20240525 01:37:38.177" endtime="20240525 01:37:38.178"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${FakeSenha}</var>
<arg>Seubarriga</arg>
<arg>${compSenha}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240525 01:37:38.179" level="INFO">${FakeSenha} = Seubarriga 04</msg>
<status status="PASS" starttime="20240525 01:37:38.178" endtime="20240525 01:37:38.179"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeSenha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:38.180" level="INFO">${FakeSenha} = Seubarriga 04</msg>
<status status="PASS" starttime="20240525 01:37:38.179" endtime="20240525 01:37:38.180"/>
</kw>
<kw name="Sentence" library="FakerLibrary">
<var>${FakerDescricao}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20240525 01:37:38.181" level="INFO">${FakerDescricao} = Maintain step from artist others.</msg>
<status status="PASS" starttime="20240525 01:37:38.180" endtime="20240525 01:37:38.181"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerDescricao}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:38.181" level="INFO">${FakerDescricao} = Maintain step from artist others.</msg>
<status status="PASS" starttime="20240525 01:37:38.181" endtime="20240525 01:37:38.181"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${FakerValor}</var>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 01:37:38.182" level="INFO">${FakerValor} = 140</msg>
<status status="PASS" starttime="20240525 01:37:38.182" endtime="20240525 01:37:38.182"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerValor}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:38.183" level="INFO">${FakerValor} = 140</msg>
<status status="PASS" starttime="20240525 01:37:38.183" endtime="20240525 01:37:38.183"/>
</kw>
<status status="PASS" starttime="20240525 01:37:38.172" endtime="20240525 01:37:38.183"/>
</kw>
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>${FakeNome}${FakerValor}</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>1049</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 01:37:38.187" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 01:37:38.186" endtime="20240525 01:37:38.187"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:38.188" endtime="20240525 01:37:38.188"/>
</kw>
<status status="PASS" starttime="20240525 01:37:38.187" endtime="20240525 01:37:38.188"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:38.189" endtime="20240525 01:37:38.190"/>
</kw>
<status status="PASS" starttime="20240525 01:37:38.189" endtime="20240525 01:37:38.190"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:38.191" endtime="20240525 01:37:38.191"/>
</kw>
<status status="PASS" starttime="20240525 01:37:38.190" endtime="20240525 01:37:38.191"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:38.192" endtime="20240525 01:37:38.193"/>
</kw>
<status status="PASS" starttime="20240525 01:37:38.192" endtime="20240525 01:37:38.193"/>
</kw>
<msg timestamp="20240525 01:37:38.193" level="INFO">${bodyPostProd} = {'nome': 'Robin Palmer140', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 01:37:38.185" endtime="20240525 01:37:38.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:38.194" level="INFO">{'nome': 'Robin Palmer140', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 01:37:38.194" endtime="20240525 01:37:38.194"/>
</kw>
<kw name="HeadersAuth" library="services">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 01:37:38.196" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTg1OCwiZXhwIjoxNzE2NjEyNDU4fQ.b6dmUskc27XpqYHHFjUXrn...</msg>
<status status="PASS" starttime="20240525 01:37:38.195" endtime="20240525 01:37:38.196"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:38.197" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTg1OCwiZXhwIjoxNzE2NjEyNDU4fQ.b6dmUskc27XpqYHHFjUXrn...</msg>
<status status="PASS" starttime="20240525 01:37:38.196" endtime="20240525 01:37:38.197"/>
</kw>
<status status="PASS" starttime="20240525 01:37:38.194" endtime="20240525 01:37:38.197"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 01:37:39.392" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTg1OCwiZXhwIjoxNzE2NjEyNDU4fQ.b6dmUskc27XpqYHHFjUXrnV0g5yfpfkjT_9I5Abaack', 'Content-Length': '99', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Robin Palmer140", "preco": "1010", "descricao": "Teste Automation", "quantidade": "1049"}' 
 </msg>
<msg timestamp="20240525 01:37:39.392" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '99b67f095c0e89c0a78f05e5f325ba05', 'Date': 'Sat, 25 May 2024 04:37:39 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "1Xq8UKuyF5tpwbLL"
} 
 </msg>
<msg timestamp="20240525 01:37:39.393" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:38.198" endtime="20240525 01:37:39.393"/>
</kw>
<msg timestamp="20240525 01:37:39.393" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:38.197" endtime="20240525 01:37:39.393"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:39.394" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:39.394" endtime="20240525 01:37:39.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:39.397" level="INFO">{'message': 'Cadastro realizado com sucesso', '_id': '1Xq8UKuyF5tpwbLL'}</msg>
<status status="PASS" starttime="20240525 01:37:39.395" endtime="20240525 01:37:39.397"/>
</kw>
<status status="PASS" starttime="20240525 01:37:38.184" endtime="20240525 01:37:39.397"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<arg>${RESPOSTA.json()}[_id]</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:39.400" level="INFO">${id} = 1Xq8UKuyF5tpwbLL</msg>
<status status="PASS" starttime="20240525 01:37:39.397" endtime="20240525 01:37:39.401"/>
</kw>
<status status="PASS" starttime="20240525 01:37:38.171" endtime="20240525 01:37:39.401"/>
</kw>
<status status="PASS" starttime="20240525 01:37:38.171" endtime="20240525 01:37:39.401"/>
</kw>
<kw name="Quando enviar uma requisição pra excluir um produto" library="delete_produtos">
<kw name="Delete in" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${id}</arg>
<kw name="DELETE" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a DELETE request.</doc>
<msg timestamp="20240525 01:37:40.417" level="INFO">DELETE Request : url=https://serverest.dev/produtos/1Xq8UKuyF5tpwbLL 
 path_url=/produtos/1Xq8UKuyF5tpwbLL 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTg1OCwiZXhwIjoxNzE2NjEyNDU4fQ.b6dmUskc27XpqYHHFjUXrnV0g5yfpfkjT_9I5Abaack', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20240525 01:37:40.417" level="INFO">DELETE Response : url=https://serverest.dev/produtos/1Xq8UKuyF5tpwbLL 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'fdce0c05dfbda64499cb68486b4244d9', 'Date': 'Sat, 25 May 2024 04:37:40 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20240525 01:37:40.418" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:39.404" endtime="20240525 01:37:40.418"/>
</kw>
<msg timestamp="20240525 01:37:40.418" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:39.403" endtime="20240525 01:37:40.418"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:40.419" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:40.419" endtime="20240525 01:37:40.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:40.422" level="INFO">{'message': 'Registro excluído com sucesso'}</msg>
<status status="PASS" starttime="20240525 01:37:40.420" endtime="20240525 01:37:40.422"/>
</kw>
<status status="PASS" starttime="20240525 01:37:39.402" endtime="20240525 01:37:40.422"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>200</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 01:37:40.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 01:37:40.424" endtime="20240525 01:37:40.426"/>
</kw>
<status status="PASS" starttime="20240525 01:37:40.423" endtime="20240525 01:37:40.426"/>
</kw>
<kw name="E verificar a mensagem de exclusão" library="delete_produtos">
<arg>Registro excluído com sucesso</arg>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${RESPOSTA.json()}[message]</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240525 01:37:40.428" endtime="20240525 01:37:40.430"/>
</kw>
<status status="PASS" starttime="20240525 01:37:40.427" endtime="20240525 01:37:40.430"/>
</kw>
<status status="PASS" starttime="20240525 01:37:38.169" endtime="20240525 01:37:40.432"/>
</test>
<test id="s1-s5-t2" name="Validar se o Produto foi excluido com sucesso" line="15">
<kw name="Cadastro produtos com sucesso" library="services">
<kw name="Fakers" library="Utils">
<kw name="Name" library="FakerLibrary">
<var>${FakeNome}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20240525 01:37:40.438" level="INFO">${FakeNome} = Randy Stone</msg>
<status status="PASS" starttime="20240525 01:37:40.437" endtime="20240525 01:37:40.438"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeNome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:40.439" level="INFO">${FakeNome} = Randy Stone</msg>
<status status="PASS" starttime="20240525 01:37:40.438" endtime="20240525 01:37:40.439"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${FakeEmail}</var>
<msg timestamp="20240525 01:37:40.441" level="INFO">${FakeEmail} = leachadam@example.com</msg>
<status status="PASS" starttime="20240525 01:37:40.439" endtime="20240525 01:37:40.441"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeEmail}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:40.442" level="INFO">${FakeEmail} = leachadam@example.com</msg>
<status status="PASS" starttime="20240525 01:37:40.441" endtime="20240525 01:37:40.442"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${compSenha}</var>
<arg>text=##</arg>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 01:37:40.443" level="INFO">${compSenha} = 62</msg>
<status status="PASS" starttime="20240525 01:37:40.442" endtime="20240525 01:37:40.443"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${FakeSenha}</var>
<arg>Seubarriga</arg>
<arg>${compSenha}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240525 01:37:40.443" level="INFO">${FakeSenha} = Seubarriga 62</msg>
<status status="PASS" starttime="20240525 01:37:40.443" endtime="20240525 01:37:40.443"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeSenha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:40.444" level="INFO">${FakeSenha} = Seubarriga 62</msg>
<status status="PASS" starttime="20240525 01:37:40.444" endtime="20240525 01:37:40.444"/>
</kw>
<kw name="Sentence" library="FakerLibrary">
<var>${FakerDescricao}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20240525 01:37:40.445" level="INFO">${FakerDescricao} = Song thus others resource response.</msg>
<status status="PASS" starttime="20240525 01:37:40.445" endtime="20240525 01:37:40.445"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerDescricao}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:40.446" level="INFO">${FakerDescricao} = Song thus others resource response.</msg>
<status status="PASS" starttime="20240525 01:37:40.446" endtime="20240525 01:37:40.446"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${FakerValor}</var>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 01:37:40.447" level="INFO">${FakerValor} = 417</msg>
<status status="PASS" starttime="20240525 01:37:40.447" endtime="20240525 01:37:40.447"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerValor}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:40.448" level="INFO">${FakerValor} = 417</msg>
<status status="PASS" starttime="20240525 01:37:40.447" endtime="20240525 01:37:40.448"/>
</kw>
<status status="PASS" starttime="20240525 01:37:40.436" endtime="20240525 01:37:40.448"/>
</kw>
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>${FakeNome}${FakerValor}</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>1049</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 01:37:40.452" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 01:37:40.451" endtime="20240525 01:37:40.452"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:40.453" endtime="20240525 01:37:40.454"/>
</kw>
<status status="PASS" starttime="20240525 01:37:40.453" endtime="20240525 01:37:40.454"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:40.455" endtime="20240525 01:37:40.456"/>
</kw>
<status status="PASS" starttime="20240525 01:37:40.454" endtime="20240525 01:37:40.456"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:40.457" endtime="20240525 01:37:40.457"/>
</kw>
<status status="PASS" starttime="20240525 01:37:40.456" endtime="20240525 01:37:40.457"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 01:37:40.459" endtime="20240525 01:37:40.459"/>
</kw>
<status status="PASS" starttime="20240525 01:37:40.458" endtime="20240525 01:37:40.459"/>
</kw>
<msg timestamp="20240525 01:37:40.460" level="INFO">${bodyPostProd} = {'nome': 'Randy Stone417', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 01:37:40.450" endtime="20240525 01:37:40.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:40.461" level="INFO">{'nome': 'Randy Stone417', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 01:37:40.460" endtime="20240525 01:37:40.461"/>
</kw>
<kw name="HeadersAuth" library="services">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 01:37:40.462" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTg1OCwiZXhwIjoxNzE2NjEyNDU4fQ.b6dmUskc27XpqYHHFjUXrn...</msg>
<status status="PASS" starttime="20240525 01:37:40.462" endtime="20240525 01:37:40.462"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:40.463" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTg1OCwiZXhwIjoxNzE2NjEyNDU4fQ.b6dmUskc27XpqYHHFjUXrn...</msg>
<status status="PASS" starttime="20240525 01:37:40.463" endtime="20240525 01:37:40.463"/>
</kw>
<status status="PASS" starttime="20240525 01:37:40.461" endtime="20240525 01:37:40.463"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 01:37:41.544" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTg1OCwiZXhwIjoxNzE2NjEyNDU4fQ.b6dmUskc27XpqYHHFjUXrnV0g5yfpfkjT_9I5Abaack', 'Content-Length': '98', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Randy Stone417", "preco": "1010", "descricao": "Teste Automation", "quantidade": "1049"}' 
 </msg>
<msg timestamp="20240525 01:37:41.544" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '1213999663f23697d9e927e26232d3e1', 'Date': 'Sat, 25 May 2024 04:37:41 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "61IUtdylwiZOcvVQ"
} 
 </msg>
<msg timestamp="20240525 01:37:41.545" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:40.465" endtime="20240525 01:37:41.545"/>
</kw>
<msg timestamp="20240525 01:37:41.545" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:40.464" endtime="20240525 01:37:41.545"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:41.547" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:41.546" endtime="20240525 01:37:41.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:41.549" level="INFO">{'message': 'Cadastro realizado com sucesso', '_id': '61IUtdylwiZOcvVQ'}</msg>
<status status="PASS" starttime="20240525 01:37:41.547" endtime="20240525 01:37:41.549"/>
</kw>
<status status="PASS" starttime="20240525 01:37:40.449" endtime="20240525 01:37:41.549"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<arg>${RESPOSTA.json()}[_id]</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:41.553" level="INFO">${id} = 61IUtdylwiZOcvVQ</msg>
<status status="PASS" starttime="20240525 01:37:41.549" endtime="20240525 01:37:41.553"/>
</kw>
<status status="PASS" starttime="20240525 01:37:40.436" endtime="20240525 01:37:41.553"/>
</kw>
<kw name="Excluir Produto" library="services">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<arg>${RESPOSTA.json()}[_id]</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:41.557" level="INFO">${id} = 61IUtdylwiZOcvVQ</msg>
<status status="PASS" starttime="20240525 01:37:41.555" endtime="20240525 01:37:41.557"/>
</kw>
<kw name="Quando enviar uma requisição pra excluir um produto" library="delete_produtos">
<kw name="Delete in" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${id}</arg>
<kw name="DELETE" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a DELETE request.</doc>
<msg timestamp="20240525 01:37:42.771" level="INFO">DELETE Request : url=https://serverest.dev/produtos/61IUtdylwiZOcvVQ 
 path_url=/produtos/61IUtdylwiZOcvVQ 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTg1OCwiZXhwIjoxNzE2NjEyNDU4fQ.b6dmUskc27XpqYHHFjUXrnV0g5yfpfkjT_9I5Abaack', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20240525 01:37:42.771" level="INFO">DELETE Response : url=https://serverest.dev/produtos/61IUtdylwiZOcvVQ 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '5b3a559410c6171779f4159eb476ea0e', 'Date': 'Sat, 25 May 2024 04:37:43 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20240525 01:37:42.771" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:41.560" endtime="20240525 01:37:42.771"/>
</kw>
<msg timestamp="20240525 01:37:42.772" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:41.558" endtime="20240525 01:37:42.772"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:42.773" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:42.772" endtime="20240525 01:37:42.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:42.775" level="INFO">{'message': 'Registro excluído com sucesso'}</msg>
<status status="PASS" starttime="20240525 01:37:42.773" endtime="20240525 01:37:42.775"/>
</kw>
<status status="PASS" starttime="20240525 01:37:41.557" endtime="20240525 01:37:42.775"/>
</kw>
<status status="PASS" starttime="20240525 01:37:41.554" endtime="20240525 01:37:42.775"/>
</kw>
<kw name="Quando enviar uma requisição pra excluir um produto" library="delete_produtos">
<kw name="Delete in" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${id}</arg>
<kw name="DELETE" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a DELETE request.</doc>
<msg timestamp="20240525 01:37:43.898" level="INFO">DELETE Request : url=https://serverest.dev/produtos/61IUtdylwiZOcvVQ 
 path_url=/produtos/61IUtdylwiZOcvVQ 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxMTg1OCwiZXhwIjoxNzE2NjEyNDU4fQ.b6dmUskc27XpqYHHFjUXrnV0g5yfpfkjT_9I5Abaack', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20240525 01:37:43.898" level="INFO">DELETE Response : url=https://serverest.dev/produtos/61IUtdylwiZOcvVQ 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '9158f2cd20c53bd05ff0fa4351f4dddd', 'Date': 'Sat, 25 May 2024 04:37:44 GMT', 'Server': 'Google Frontend', 'Content-Length': '46'} 
 body={
    "message": "Nenhum registro excluído"
} 
 </msg>
<msg timestamp="20240525 01:37:43.899" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:42.778" endtime="20240525 01:37:43.899"/>
</kw>
<msg timestamp="20240525 01:37:43.899" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:42.777" endtime="20240525 01:37:43.899"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 01:37:43.900" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 01:37:43.900" endtime="20240525 01:37:43.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 01:37:43.903" level="INFO">{'message': 'Nenhum registro excluído'}</msg>
<status status="PASS" starttime="20240525 01:37:43.901" endtime="20240525 01:37:43.903"/>
</kw>
<status status="PASS" starttime="20240525 01:37:42.777" endtime="20240525 01:37:43.903"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>200</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 01:37:43.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 01:37:43.905" endtime="20240525 01:37:43.907"/>
</kw>
<status status="PASS" starttime="20240525 01:37:43.904" endtime="20240525 01:37:43.907"/>
</kw>
<kw name="E verificar a mensagem de validação" library="post_produtos">
<arg>Nenhum registro excluído</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[message]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240525 01:37:43.910" endtime="20240525 01:37:43.911"/>
</kw>
<status status="PASS" starttime="20240525 01:37:43.909" endtime="20240525 01:37:43.912"/>
</kw>
<status status="PASS" starttime="20240525 01:37:40.435" endtime="20240525 01:37:43.913"/>
</test>
<doc>Documentacao do POST da API: ServeRest</doc>
<status status="PASS" starttime="20240525 01:37:37.144" endtime="20240525 01:37:43.917"/>
</suite>
<status status="PASS" starttime="20240525 01:37:11.647" endtime="20240525 01:37:43.924"/>
</suite>
<statistics>
<total>
<stat pass="16" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="16" fail="0" skip="0" id="s1" name="Features">Features</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="01 - Login">Features.01 - Login</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="02 - Get Produtos">Features.02 - Get Produtos</stat>
<stat pass="10" fail="0" skip="0" id="s1-s3" name="03 - Post Produtos">Features.03 - Post Produtos</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="04 - Put Produtos">Features.04 - Put Produtos</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5" name="05 - Delete Produtos">Features.05 - Delete Produtos</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
