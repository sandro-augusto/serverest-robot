<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.12.3 on win32)" generated="20240518 12:40:11.517" rpa="false" schemaversion="4">
<suite id="s1" name="Features" source="C:\ProjetosC\serveRest-robot\Features">
<suite id="s1-s1" name="Delete Produtos" source="C:\ProjetosC\serveRest-robot\Features\delete_produtos.robot">
<kw name="Token" library="services" type="SETUP">
<kw name="Conectar a API" library="services">
<arg>/login</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>apiServeRest</arg>
<arg>${base_url}</arg>
<arg>${headersLogin}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20240518 12:40:12.028" level="INFO">Creating Session using : alias=apiServeRest, url=http://localhost:3000, headers={'accept': 'application/json', 'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20240518 12:40:12.028" endtime="20240518 12:40:12.028"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.028" endtime="20240518 12:40:12.028"/>
</kw>
<kw name="Quando entrar com usuario e senha" library="login">
<kw name="Post in" library="services">
<var>${RESPOSTA}</var>
<arg>/login</arg>
<arg>${bodyLOGIN}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headersLogin}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240518 12:40:12.039" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '55'} 
 body=b'{"email": "Joseaugusto10@qa.com", "password": "051049"}' 
 </msg>
<msg timestamp="20240518 12:40:12.039" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'e6129723-8170-494c-bbbb-43c3b64ac0ad', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '276', 'Date': 'Sat, 18 May 2024 15:40:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPvnMrL9bH_2bqpOyTA8wvVlc"
} 
 </msg>
<msg timestamp="20240518 12:40:12.039" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.029" endtime="20240518 12:40:12.039"/>
</kw>
<msg timestamp="20240518 12:40:12.039" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.028" endtime="20240518 12:40:12.039"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${token}</var>
<arg>${RESPOSTA.json()}[authorization]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240518 12:40:12.040" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPvnMrL9bH_2bqpOyTA8wv...</msg>
<status status="PASS" starttime="20240518 12:40:12.040" endtime="20240518 12:40:12.040"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${token}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240518 12:40:12.042" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPvnMrL9bH_2bqpOyTA8wv...</msg>
<status status="PASS" starttime="20240518 12:40:12.041" endtime="20240518 12:40:12.042"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240518 12:40:12.042" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.042" endtime="20240518 12:40:12.042"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.028" endtime="20240518 12:40:12.042"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.027" endtime="20240518 12:40:12.042"/>
</kw>
<test id="s1-s1-t1" name="Deletar produto com sucesso" line="9">
<kw name="Dado que tenha uma massa configurada" library="delete_produtos">
<kw name="Cadastro produtos com sucesso" library="services">
<kw name="Fakers" library="Utils">
<kw name="Name" library="FakerLibrary">
<var>${FakeNome}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20240518 12:40:12.045" level="INFO">${FakeNome} = Amy Peterson</msg>
<status status="PASS" starttime="20240518 12:40:12.044" endtime="20240518 12:40:12.045"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeNome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.045" level="INFO">${FakeNome} = Amy Peterson</msg>
<status status="PASS" starttime="20240518 12:40:12.045" endtime="20240518 12:40:12.045"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${FakeEmail}</var>
<msg timestamp="20240518 12:40:12.045" level="INFO">${FakeEmail} = tylerfitzgerald@example.net</msg>
<status status="PASS" starttime="20240518 12:40:12.045" endtime="20240518 12:40:12.045"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeEmail}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.046" level="INFO">${FakeEmail} = tylerfitzgerald@example.net</msg>
<status status="PASS" starttime="20240518 12:40:12.045" endtime="20240518 12:40:12.046"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${compSenha}</var>
<arg>text=##</arg>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240518 12:40:12.046" level="INFO">${compSenha} = 48</msg>
<status status="PASS" starttime="20240518 12:40:12.046" endtime="20240518 12:40:12.046"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${FakeSenha}</var>
<arg>Seubarriga</arg>
<arg>${compSenha}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240518 12:40:12.046" level="INFO">${FakeSenha} = Seubarriga 48</msg>
<status status="PASS" starttime="20240518 12:40:12.046" endtime="20240518 12:40:12.046"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeSenha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.047" level="INFO">${FakeSenha} = Seubarriga 48</msg>
<status status="PASS" starttime="20240518 12:40:12.046" endtime="20240518 12:40:12.047"/>
</kw>
<kw name="Sentence" library="FakerLibrary">
<var>${FakerDescricao}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20240518 12:40:12.047" level="INFO">${FakerDescricao} = Pm build only mention.</msg>
<status status="PASS" starttime="20240518 12:40:12.047" endtime="20240518 12:40:12.047"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerDescricao}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.048" level="INFO">${FakerDescricao} = Pm build only mention.</msg>
<status status="PASS" starttime="20240518 12:40:12.047" endtime="20240518 12:40:12.048"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${FakerValor}</var>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240518 12:40:12.049" level="INFO">${FakerValor} = 499</msg>
<status status="PASS" starttime="20240518 12:40:12.048" endtime="20240518 12:40:12.049"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerValor}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.049" level="INFO">${FakerValor} = 499</msg>
<status status="PASS" starttime="20240518 12:40:12.049" endtime="20240518 12:40:12.049"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.044" endtime="20240518 12:40:12.049"/>
</kw>
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>${FakeNome}${FakerValor}</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>1049</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240518 12:40:12.050" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240518 12:40:12.050" endtime="20240518 12:40:12.050"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.050" endtime="20240518 12:40:12.051"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.050" endtime="20240518 12:40:12.051"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.051" endtime="20240518 12:40:12.052"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.051" endtime="20240518 12:40:12.052"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.052" endtime="20240518 12:40:12.052"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.052" endtime="20240518 12:40:12.052"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.053" endtime="20240518 12:40:12.053"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.052" endtime="20240518 12:40:12.053"/>
</kw>
<msg timestamp="20240518 12:40:12.053" level="INFO">${bodyPostProd} = {'nome': 'Amy Peterson499', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240518 12:40:12.050" endtime="20240518 12:40:12.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.053" level="INFO">{'nome': 'Amy Peterson499', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240518 12:40:12.053" endtime="20240518 12:40:12.053"/>
</kw>
<kw name="HeadersAuth" library="services">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240518 12:40:12.054" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPv...</msg>
<status status="PASS" starttime="20240518 12:40:12.054" endtime="20240518 12:40:12.054"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.054" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPv...</msg>
<status status="PASS" starttime="20240518 12:40:12.054" endtime="20240518 12:40:12.054"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.053" endtime="20240518 12:40:12.054"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240518 12:40:12.063" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPvnMrL9bH_2bqpOyTA8wvVlc', 'Content-Length': '99', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Amy Peterson499", "preco": "1010", "descricao": "Teste Automation", "quantidade": "1049"}' 
 </msg>
<msg timestamp="20240518 12:40:12.063" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'dce806c6-bc75-43d7-a906-414e8b76d3ca', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Sat, 18 May 2024 15:40:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "wbA9jeDQMmsJD5L4"
} 
 </msg>
<msg timestamp="20240518 12:40:12.063" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.055" endtime="20240518 12:40:12.063"/>
</kw>
<msg timestamp="20240518 12:40:12.064" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.054" endtime="20240518 12:40:12.064"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.065" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.064" endtime="20240518 12:40:12.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.066" level="INFO">{'message': 'Cadastro realizado com sucesso', '_id': 'wbA9jeDQMmsJD5L4'}</msg>
<status status="PASS" starttime="20240518 12:40:12.065" endtime="20240518 12:40:12.066"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.049" endtime="20240518 12:40:12.066"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<arg>${RESPOSTA.json()}[_id]</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.067" level="INFO">${id} = wbA9jeDQMmsJD5L4</msg>
<status status="PASS" starttime="20240518 12:40:12.066" endtime="20240518 12:40:12.067"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.044" endtime="20240518 12:40:12.067"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.043" endtime="20240518 12:40:12.067"/>
</kw>
<kw name="Quando enviar uma requisição pra excluir um produto" library="delete_produtos">
<kw name="Delete in" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${id}</arg>
<kw name="DELETE" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a DELETE request.</doc>
<msg timestamp="20240518 12:40:12.072" level="INFO">DELETE Request : url=http://localhost:3000/produtos/wbA9jeDQMmsJD5L4 
 path_url=/produtos/wbA9jeDQMmsJD5L4 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPvnMrL9bH_2bqpOyTA8wvVlc', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20240518 12:40:12.072" level="INFO">DELETE Response : url=http://localhost:3000/produtos/wbA9jeDQMmsJD5L4 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1f650741-a9e0-4b5b-9114-24dc75de083d', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '51', 'Date': 'Sat, 18 May 2024 15:40:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20240518 12:40:12.072" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.068" endtime="20240518 12:40:12.072"/>
</kw>
<msg timestamp="20240518 12:40:12.073" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.067" endtime="20240518 12:40:12.073"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.073" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.073" endtime="20240518 12:40:12.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.074" level="INFO">{'message': 'Registro excluído com sucesso'}</msg>
<status status="PASS" starttime="20240518 12:40:12.073" endtime="20240518 12:40:12.074"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.067" endtime="20240518 12:40:12.074"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>200</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240518 12:40:12.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.074" endtime="20240518 12:40:12.075"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.074" endtime="20240518 12:40:12.075"/>
</kw>
<kw name="E verificar a mensagem de exclusão" library="delete_produtos">
<arg>Registro excluído com sucesso</arg>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${RESPOSTA.json()}[message]</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240518 12:40:12.077" endtime="20240518 12:40:12.078"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.076" endtime="20240518 12:40:12.078"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.043" endtime="20240518 12:40:12.079"/>
</test>
<test id="s1-s1-t2" name="Validar se o Produto foi excluido com sucesso" line="15">
<kw name="Cadastro produtos com sucesso" library="services">
<kw name="Fakers" library="Utils">
<kw name="Name" library="FakerLibrary">
<var>${FakeNome}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20240518 12:40:12.081" level="INFO">${FakeNome} = Michelle Bailey</msg>
<status status="PASS" starttime="20240518 12:40:12.081" endtime="20240518 12:40:12.081"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeNome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.081" level="INFO">${FakeNome} = Michelle Bailey</msg>
<status status="PASS" starttime="20240518 12:40:12.081" endtime="20240518 12:40:12.081"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${FakeEmail}</var>
<msg timestamp="20240518 12:40:12.082" level="INFO">${FakeEmail} = johnstonjoseph@example.net</msg>
<status status="PASS" starttime="20240518 12:40:12.081" endtime="20240518 12:40:12.082"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeEmail}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.082" level="INFO">${FakeEmail} = johnstonjoseph@example.net</msg>
<status status="PASS" starttime="20240518 12:40:12.082" endtime="20240518 12:40:12.082"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${compSenha}</var>
<arg>text=##</arg>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240518 12:40:12.083" level="INFO">${compSenha} = 59</msg>
<status status="PASS" starttime="20240518 12:40:12.082" endtime="20240518 12:40:12.083"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${FakeSenha}</var>
<arg>Seubarriga</arg>
<arg>${compSenha}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240518 12:40:12.083" level="INFO">${FakeSenha} = Seubarriga 59</msg>
<status status="PASS" starttime="20240518 12:40:12.083" endtime="20240518 12:40:12.083"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeSenha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.083" level="INFO">${FakeSenha} = Seubarriga 59</msg>
<status status="PASS" starttime="20240518 12:40:12.083" endtime="20240518 12:40:12.083"/>
</kw>
<kw name="Sentence" library="FakerLibrary">
<var>${FakerDescricao}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20240518 12:40:12.084" level="INFO">${FakerDescricao} = Sit evening pull career degree.</msg>
<status status="PASS" starttime="20240518 12:40:12.084" endtime="20240518 12:40:12.084"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerDescricao}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.084" level="INFO">${FakerDescricao} = Sit evening pull career degree.</msg>
<status status="PASS" starttime="20240518 12:40:12.084" endtime="20240518 12:40:12.084"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${FakerValor}</var>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240518 12:40:12.085" level="INFO">${FakerValor} = 480</msg>
<status status="PASS" starttime="20240518 12:40:12.084" endtime="20240518 12:40:12.085"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerValor}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.085" level="INFO">${FakerValor} = 480</msg>
<status status="PASS" starttime="20240518 12:40:12.085" endtime="20240518 12:40:12.085"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.081" endtime="20240518 12:40:12.085"/>
</kw>
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>${FakeNome}${FakerValor}</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>1049</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240518 12:40:12.086" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240518 12:40:12.086" endtime="20240518 12:40:12.086"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.087" endtime="20240518 12:40:12.087"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.086" endtime="20240518 12:40:12.087"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.087" endtime="20240518 12:40:12.087"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.087" endtime="20240518 12:40:12.087"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.088" endtime="20240518 12:40:12.088"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.088" endtime="20240518 12:40:12.088"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.088" endtime="20240518 12:40:12.088"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.088" endtime="20240518 12:40:12.088"/>
</kw>
<msg timestamp="20240518 12:40:12.088" level="INFO">${bodyPostProd} = {'nome': 'Michelle Bailey480', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240518 12:40:12.085" endtime="20240518 12:40:12.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.089" level="INFO">{'nome': 'Michelle Bailey480', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240518 12:40:12.089" endtime="20240518 12:40:12.089"/>
</kw>
<kw name="HeadersAuth" library="services">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240518 12:40:12.089" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPv...</msg>
<status status="PASS" starttime="20240518 12:40:12.089" endtime="20240518 12:40:12.089"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.089" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPv...</msg>
<status status="PASS" starttime="20240518 12:40:12.089" endtime="20240518 12:40:12.089"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.089" endtime="20240518 12:40:12.090"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240518 12:40:12.097" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPvnMrL9bH_2bqpOyTA8wvVlc', 'Content-Length': '102', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Michelle Bailey480", "preco": "1010", "descricao": "Teste Automation", "quantidade": "1049"}' 
 </msg>
<msg timestamp="20240518 12:40:12.097" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'd0f43350-b43a-4a46-a451-34ef064c514e', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Sat, 18 May 2024 15:40:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "ZzIPYLBUigMkBtgM"
} 
 </msg>
<msg timestamp="20240518 12:40:12.098" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.090" endtime="20240518 12:40:12.098"/>
</kw>
<msg timestamp="20240518 12:40:12.098" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.090" endtime="20240518 12:40:12.098"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.098" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.098" endtime="20240518 12:40:12.098"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.099" level="INFO">{'message': 'Cadastro realizado com sucesso', '_id': 'ZzIPYLBUigMkBtgM'}</msg>
<status status="PASS" starttime="20240518 12:40:12.098" endtime="20240518 12:40:12.099"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.085" endtime="20240518 12:40:12.099"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<arg>${RESPOSTA.json()}[_id]</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.101" level="INFO">${id} = ZzIPYLBUigMkBtgM</msg>
<status status="PASS" starttime="20240518 12:40:12.100" endtime="20240518 12:40:12.101"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.080" endtime="20240518 12:40:12.101"/>
</kw>
<kw name="Excluir Produto" library="services">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<arg>${RESPOSTA.json()}[_id]</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.103" level="INFO">${id} = ZzIPYLBUigMkBtgM</msg>
<status status="PASS" starttime="20240518 12:40:12.102" endtime="20240518 12:40:12.103"/>
</kw>
<kw name="Quando enviar uma requisição pra excluir um produto" library="delete_produtos">
<kw name="Delete in" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${id}</arg>
<kw name="DELETE" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a DELETE request.</doc>
<msg timestamp="20240518 12:40:12.110" level="INFO">DELETE Request : url=http://localhost:3000/produtos/ZzIPYLBUigMkBtgM 
 path_url=/produtos/ZzIPYLBUigMkBtgM 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPvnMrL9bH_2bqpOyTA8wvVlc', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20240518 12:40:12.110" level="INFO">DELETE Response : url=http://localhost:3000/produtos/ZzIPYLBUigMkBtgM 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '0accdc6f-1101-4651-9124-5ec603b0823b', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '51', 'Date': 'Sat, 18 May 2024 15:40:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20240518 12:40:12.111" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.104" endtime="20240518 12:40:12.111"/>
</kw>
<msg timestamp="20240518 12:40:12.111" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.103" endtime="20240518 12:40:12.111"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.112" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.112" endtime="20240518 12:40:12.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.113" level="INFO">{'message': 'Registro excluído com sucesso'}</msg>
<status status="PASS" starttime="20240518 12:40:12.113" endtime="20240518 12:40:12.113"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.103" endtime="20240518 12:40:12.113"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.102" endtime="20240518 12:40:12.113"/>
</kw>
<kw name="Quando enviar uma requisição pra excluir um produto" library="delete_produtos">
<kw name="Delete in" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${id}</arg>
<kw name="DELETE" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a DELETE request.</doc>
<msg timestamp="20240518 12:40:12.119" level="INFO">DELETE Request : url=http://localhost:3000/produtos/ZzIPYLBUigMkBtgM 
 path_url=/produtos/ZzIPYLBUigMkBtgM 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPvnMrL9bH_2bqpOyTA8wvVlc', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20240518 12:40:12.119" level="INFO">DELETE Response : url=http://localhost:3000/produtos/ZzIPYLBUigMkBtgM 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '63183c69-c460-4915-af56-68df259def5a', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '46', 'Date': 'Sat, 18 May 2024 15:40:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Nenhum registro excluído"
} 
 </msg>
<msg timestamp="20240518 12:40:12.120" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.114" endtime="20240518 12:40:12.120"/>
</kw>
<msg timestamp="20240518 12:40:12.120" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.114" endtime="20240518 12:40:12.120"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.120" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.120" endtime="20240518 12:40:12.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.121" level="INFO">{'message': 'Nenhum registro excluído'}</msg>
<status status="PASS" starttime="20240518 12:40:12.121" endtime="20240518 12:40:12.121"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.114" endtime="20240518 12:40:12.122"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>200</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240518 12:40:12.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.122" endtime="20240518 12:40:12.123"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.122" endtime="20240518 12:40:12.123"/>
</kw>
<kw name="E verificar a mensagem de validação" library="post_produtos">
<arg>Nenhum registro excluído</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[message]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240518 12:40:12.123" endtime="20240518 12:40:12.124"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.123" endtime="20240518 12:40:12.124"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.080" endtime="20240518 12:40:12.124"/>
</test>
<doc>Documentacao do POST da API: ServeRest</doc>
<status status="PASS" starttime="20240518 12:40:11.547" endtime="20240518 12:40:12.127"/>
</suite>
<suite id="s1-s2" name="Get Produtos" source="C:\ProjetosC\serveRest-robot\Features\get_produtos.robot">
<kw name="Conectar a API" library="services" type="SETUP">
<arg>/login</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>apiServeRest</arg>
<arg>${base_url}</arg>
<arg>${headersLogin}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20240518 12:40:12.145" level="INFO">Creating Session using : alias=apiServeRest, url=http://localhost:3000, headers={'accept': 'application/json', 'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20240518 12:40:12.145" endtime="20240518 12:40:12.146"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.145" endtime="20240518 12:40:12.146"/>
</kw>
<test id="s1-s2-t1" name="Fazer um Get Produtos com sucesso" line="8">
<kw name="Quando verificar os produtos cadastrados" library="get_produtos">
<kw name="Get in" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>headers=${headersLogin}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240518 12:40:12.153" level="INFO">GET Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20240518 12:40:12.153" level="INFO">GET Response : url=http://localhost:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'c1e18f58-ed96-4f41-8624-dbba7c93ad66', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '67893', 'Date': 'Sat, 18 May 2024 15:40:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 347,
    "produtos": [
        {
            "nome": "Peter",
            "preco": 1049,
            "descricao": "Test Automation",
            "quantidade": 1010,
            "_id": "02ivoMyq3wtwmumb"
        },
        {
            "nome": "Teste Automation 11421",
            "preco": 470,
            "descricao": "RATO",
            "quantidade": 381,
            "_id": "0HVRZKVBR0u5Zx4R"
        },
        {
            "nome": "Suzanne",
            "preco": 44649,
            "descricao": "Lucie",
            "quantidade": 9820,
            "_id": "0Jo4CXmebfVRGdRD"
        },
        {
            "nome": "Dr. Richard Yu",
            "preco": 1049,
            "descricao": "Test Automation",
            "quantidade": 1010,
            "_id": "115B1dkSJpXVCVlZ"
        },
        {
            "nome": "Teste Automation 53015",
            "preco": 1010,
            "descricao": "Automation",
            "quantidade": 10,
            "_id": "1YH9TlJa1HF86cm6"
        },
        {
            "nome": "Mrs. Jennifer Berger69",
            "preco": 48,
            "descricao": "person",
            "quantidade": 81,
            "_id": "1Yda7K2nPaEisma1"
        },
        {
            "nome": "Bradley Bailey545",
            "preco": 1010,
            "descricao": "Teste Automation",
            "quantidade": 1049,
            "_id": "1tXnEgFs1MWpRYV6"
        },
        {
            "nome": "Teste Automation 98652",
            "preco": 470,
            "descricao": "RATO",
            "quantidade": 381,
            "_id": "2AB88DAalR8hZRr9"
        },
        {
            "nome": "Teste Automation 1049 7yasaq",
            "preco": 10,
            "descricao": "Automation Teste",
            "quantidade": 1010,
            "_id": "2c3v0g7aMA6Xs9mD"
        },
        {
            "nome": "Frank",
            "preco": 1049,
            "descricao": "TESTE QA",
            "quantidade": 1000,
            "_id": "2cFswZdgr523GdnI"
        },
        {
            "nome": "David Burns60",
            "preco": 57,
            "descricao": "argue",
            "quantidade": 69,
            "_id": "2gIw6d6gLMUGhjRY"
        },
        {
            "nome": "Teste Automation Teste 1234",
            "preco": 1010,
            "descricao": "Automation",
            "quantidade": 1049,
            "_id": "2gXlCoJvC9NTBZJV"
        },
        {
            "nome": "Teste Automation 5225",
            "preco": 1010,
            "descricao": "Automation",
            "quantidade": 10,
            "_id": "2mJjF5oCEa5sIq6e"
        },
        {
            "nome": "Carlos",
            "preco": 15719,
            "descricao": "Bertram",
            "quantidade": 5487,
            "_id": "2z2qzXV8QHosPVfS"
        },
        {
            "nome": "Walter Hamilton",
            "preco": 87,
            "descricao": "long",
            "quantidade": 51,
            "_id": "32XY1Mt5rQuJTztR"
        },
        {
            "nome": "faker.name() + str(faker.random_int(min=18, max=90))",
            "preco": 50,
            "descricao": "action",
            "quantidade": 35,
            "_id": "356IiRRZxLQrGw3b"
        },
        {
            "nome": "Teste Automation 13549",
            "preco": 1010,
            "descricao": "Automation",
            "quantidade": 10,
            "_id": "37pMEixKBDuBPHaf"
        },
        {
            "nome": "Justin Gilbert948",
            "preco": 1010,
            "descricao": "Teste Automation",
            "quantidade": 948,
            "_id": "3NAExL1HCGQiv5Wm"
        },
        {
            "nome": "Teste Automation 55392",
            "preco": 1010,
            "descricao": "Automation",
            "quantidade": 10,
            "_id": "3VPoxUFhT1ueth9P"
        },
        {
            "nome": "Hoyt",
            "preco": 1000,
            "descricao": "Lonie",
            "quantidade": 1050,
            "_id": "3bdpma8BL5aUv8U9"
        },
        {
            "nome": "Ian Hopkins199",
            "preco": 1010,
            "descricao": "Teste Automation",
            "quantidade": 199,
            "_id": "3heIn2VmRLDpawRD"
        },
        {
            "nome": "Lew",
            "preco": 1049,
            "descricao": "Candice Beier DDS",
            "quantidade": 1000,
            "_id": "3j05LxoVe6iweN6G"
        },
        {
            "nome": "Teste Automation 67418",
            "preco": 1010,
            "descricao": "Automation",
            "quantidade": 10,
            "_id": "4AKw0n7NAZjxefb0"
        },
        {
            "nome": "Teste Automation 46493",
            "preco": 1010,
            "descricao": "Automation",
            "quantidade": 10,
            "_id": "4G57Rq31HEU4J4cu"
        },
        {
            "nome": "Deborah Rodriguez",
            "preco": 1049,
            "descricao": "Test Automation",
            "quantidade": 1010,
            "_id": "4babe3ysRwC2h8kg"
        },
        {
            "nome": "Teste Qa.Coders 251469",
            "preco": 1500,
            "descricao": "QA",
            "quantidade": 150,
            "_id": "4z6vGnZr7uGNKBC0"
        },
        {
            "nome": "Mallory",
            "preco": 1049,
            "descricao": "Edward D'Amore Jr.",
            "quantidade": 1000,
            "_id": "5DnwFHTbuic3unGH"
        },
        {
            "nome": "Edward Hobbs302",
            "preco": 1010,
            "descricao": "Teste Automation",
            "quantidade": 1049,
            "_id": "5QBrh9TM4fDe0G4w"
        },
        {
            "nome": "Teste Automation 22946",
            "preco": 1010,
            "descricao": "Automation",
            "quantidade": 10,
            "_id": "5VJkvyUnNeqwgZQY"
        },
        {
            "nome": "Van",
            "preco": 1000,
            "descricao": "Zachery",
            "quantidade": 1050,
            "_id": "5cJWo7Al8d4gmDEK"
        },
        {
            "nome": "Miss Emily Johnson",
            "preco": 1049,
            "descricao": "Test Automation",
            "quantidade": 1010,
            "_id": "5tRuThS8fac7R6jf"
        },
        {
            "nome": "Joshua Ellison",
            "preco": 1049,
            "descricao": "Test Automation",
            "quantidade": 1010,
            "_id": "5u89pi8HonJRJ8VT"
        },
        {
            "nome": "Teste Automation 48050",
            "preco": 1010,
            "descricao": "Automation",
            "quantidade": 10,
            "_id": "68xevhJA8ekjHxp4"
        },
        {
            "nome": "Paul Smith",
            "preco": 1010,
            "descricao": "Teste Automation",
            "quantidade": 1049,
            "_id": "6NdjY2oFD7vRRBQb"
        },
        {
            "nome": "Teste Qa.Coders 404448",
            "preco": 1049,
            "descricao": "TESTE QA",
            "quantidade": 1000,
            "_id": "6iZsGlfgqGhjhaa0"
        },
        {
            "nome": "Teste Automation 69496",
            "preco": 470,
            "descricao": "RATO",
            "quantidade": 381,
            "_id": "6icE2GnaUxOXXfTo"
        },
        {
            "nome": "Sean Dixon668",
            "preco": 1010,
            "descricao": "Teste Automation",
            "quantidade": 668,
            "_id": "6qqkbRXA5y4mPb3b"
        },
        {
            "nome": "Teste Automation 40693",
            "preco": 1010,
            "descricao": "Automation",
            "quantidade": 10,
            "_id": "75i5HKU0NIO2ajB7"
        },
        {
            "nome": "Dena",
            "preco": 1049,
            "descricao": "Randy Mohr",
            "quantidade": 1000,
            "_id": "7MTYhBJiWTKlTb8y"
        },
        {
            "nome": "Orie",
            "preco": 1000,
            "descricao": "Ethyl",
            "quantidade": 1050,
            "_id": "7Zi9AoYJHC9TlpHJ"
        },
        {
            "nome": "!@$!@#%@#$@#$!@#!@",
            "preco": 48,
            "descricao": "cultural",
            "quantidade": 42,
            "_id": "7haWo51rTd6vAY0x"
        },
        {
            "nome": "Teste Automation 58303",
            "preco": 1010,
            "descricao": "Automation",
            "quantidade": 10,
            "_id": "7hhXzK3TGKVvsEBa"
        },
        {
            "nome": "Natalie Frank75",
            "preco": 78,
            "descricao": "chair",
            "quantidade": 68,
            "_id": "7pbmFNQcCwLXBVbv"
        },
        {
            "nome": "Elizabeth Moreno",
            "preco": 75,
            "descricao": "people",
            "quantidade": 46,
            "_id": "7uA9BHQPmOUDWHSK"
        },
        {
            "nome": "Teste Automation 26284",
            "preco": 1010,
            "descricao": "Automation",
            "quantidade": 10,
            "_id": "85D2qKCvgDJjLdUJ"
        },
        {
            "nome": "Teste Qa.Coders 613198",
            "preco": 1049,
            "descricao": "TESTE QA",
            "quantidade": 1000,
            "_id": "8BgOixh9ALvjSkFG"
        },
        {
            "nome": "Mae",
            "preco": 1000,
            "descricao": "Destiney",
            "quantidade": 1050,
            "_id": "8COdEDXLLGFq9Lg0"
        },
        {
            "nome": "Orlo",
            "preco": 25497,
            "descricao": "Oren",
            "quantidade": 8098,
            "_id": "8ETLkmkxIsa0Hw3e"
        },
        {
            "nome": "Mr. Jerry Brown MD",
            "preco": 48,
            "descricao": "cultural",
            "quantidade": 42,
            "_id": "8ktOQUn0zBbiSYgn"
        },
        {
            "nome": "Teste Automation 10270",
            "preco": 1010,
            "descricao": "Automation",
            "quantidade": 10,
            "_id": "9EKCeL9sHThV9Znl"
        },
        {
            "nome": "Teste Robot 1049",
            "preco": 1010,
            "descricao": "123456",
            "quantidade": 10489,
            "_i... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20240518 12:40:12.154" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.147" endtime="20240518 12:40:12.154"/>
</kw>
<msg timestamp="20240518 12:40:12.154" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.147" endtime="20240518 12:40:12.154"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240518 12:40:12.155" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.154" endtime="20240518 12:40:12.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.156" level="INFO">{'quantidade': 347, 'produtos': [{'nome': 'Peter', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': '02ivoMyq3wtwmumb'}, {'nome': 'Teste Automation 11421', 'preco': 470, 'descricao': 'RATO', 'quantidade': 381, '_id': '0HVRZKVBR0u5Zx4R'}, {'nome': 'Suzanne', 'preco': 44649, 'descricao': 'Lucie', 'quantidade': 9820, '_id': '0Jo4CXmebfVRGdRD'}, {'nome': 'Dr. Richard Yu', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': '115B1dkSJpXVCVlZ'}, {'nome': 'Teste Automation 53015', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': '1YH9TlJa1HF86cm6'}, {'nome': 'Mrs. Jennifer Berger69', 'preco': 48, 'descricao': 'person', 'quantidade': 81, '_id': '1Yda7K2nPaEisma1'}, {'nome': 'Bradley Bailey545', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': '1tXnEgFs1MWpRYV6'}, {'nome': 'Teste Automation 98652', 'preco': 470, 'descricao': 'RATO', 'quantidade': 381, '_id': '2AB88DAalR8hZRr9'}, {'nome': 'Teste Automation 1049 7yasaq', 'preco': 10, 'descricao': 'Automation Teste', 'quantidade': 1010, '_id': '2c3v0g7aMA6Xs9mD'}, {'nome': 'Frank', 'preco': 1049, 'descricao': 'TESTE QA', 'quantidade': 1000, '_id': '2cFswZdgr523GdnI'}, {'nome': 'David Burns60', 'preco': 57, 'descricao': 'argue', 'quantidade': 69, '_id': '2gIw6d6gLMUGhjRY'}, {'nome': 'Teste Automation Teste 1234', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 1049, '_id': '2gXlCoJvC9NTBZJV'}, {'nome': 'Teste Automation 5225', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': '2mJjF5oCEa5sIq6e'}, {'nome': 'Carlos', 'preco': 15719, 'descricao': 'Bertram', 'quantidade': 5487, '_id': '2z2qzXV8QHosPVfS'}, {'nome': 'Walter Hamilton', 'preco': 87, 'descricao': 'long', 'quantidade': 51, '_id': '32XY1Mt5rQuJTztR'}, {'nome': 'faker.name() + str(faker.random_int(min=18, max=90))', 'preco': 50, 'descricao': 'action', 'quantidade': 35, '_id': '356IiRRZxLQrGw3b'}, {'nome': 'Teste Automation 13549', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': '37pMEixKBDuBPHaf'}, {'nome': 'Justin Gilbert948', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 948, '_id': '3NAExL1HCGQiv5Wm'}, {'nome': 'Teste Automation 55392', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': '3VPoxUFhT1ueth9P'}, {'nome': 'Hoyt', 'preco': 1000, 'descricao': 'Lonie', 'quantidade': 1050, '_id': '3bdpma8BL5aUv8U9'}, {'nome': 'Ian Hopkins199', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 199, '_id': '3heIn2VmRLDpawRD'}, {'nome': 'Lew', 'preco': 1049, 'descricao': 'Candice Beier DDS', 'quantidade': 1000, '_id': '3j05LxoVe6iweN6G'}, {'nome': 'Teste Automation 67418', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': '4AKw0n7NAZjxefb0'}, {'nome': 'Teste Automation 46493', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': '4G57Rq31HEU4J4cu'}, {'nome': 'Deborah Rodriguez', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': '4babe3ysRwC2h8kg'}, {'nome': 'Teste Qa.Coders 251469', 'preco': 1500, 'descricao': 'QA', 'quantidade': 150, '_id': '4z6vGnZr7uGNKBC0'}, {'nome': 'Mallory', 'preco': 1049, 'descricao': "Edward D'Amore Jr.", 'quantidade': 1000, '_id': '5DnwFHTbuic3unGH'}, {'nome': 'Edward Hobbs302', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': '5QBrh9TM4fDe0G4w'}, {'nome': 'Teste Automation 22946', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': '5VJkvyUnNeqwgZQY'}, {'nome': 'Van', 'preco': 1000, 'descricao': 'Zachery', 'quantidade': 1050, '_id': '5cJWo7Al8d4gmDEK'}, {'nome': 'Miss Emily Johnson', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': '5tRuThS8fac7R6jf'}, {'nome': 'Joshua Ellison', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': '5u89pi8HonJRJ8VT'}, {'nome': 'Teste Automation 48050', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': '68xevhJA8ekjHxp4'}, {'nome': 'Paul Smith', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': '6NdjY2oFD7vRRBQb'}, {'nome': 'Teste Qa.Coders 404448', 'preco': 1049, 'descricao': 'TESTE QA', 'quantidade': 1000, '_id': '6iZsGlfgqGhjhaa0'}, {'nome': 'Teste Automation 69496', 'preco': 470, 'descricao': 'RATO', 'quantidade': 381, '_id': '6icE2GnaUxOXXfTo'}, {'nome': 'Sean Dixon668', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 668, '_id': '6qqkbRXA5y4mPb3b'}, {'nome': 'Teste Automation 40693', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': '75i5HKU0NIO2ajB7'}, {'nome': 'Dena', 'preco': 1049, 'descricao': 'Randy Mohr', 'quantidade': 1000, '_id': '7MTYhBJiWTKlTb8y'}, {'nome': 'Orie', 'preco': 1000, 'descricao': 'Ethyl', 'quantidade': 1050, '_id': '7Zi9AoYJHC9TlpHJ'}, {'nome': '!@$!@#%@#$@#$!@#!@', 'preco': 48, 'descricao': 'cultural', 'quantidade': 42, '_id': '7haWo51rTd6vAY0x'}, {'nome': 'Teste Automation 58303', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': '7hhXzK3TGKVvsEBa'}, {'nome': 'Natalie Frank75', 'preco': 78, 'descricao': 'chair', 'quantidade': 68, '_id': '7pbmFNQcCwLXBVbv'}, {'nome': 'Elizabeth Moreno', 'preco': 75, 'descricao': 'people', 'quantidade': 46, '_id': '7uA9BHQPmOUDWHSK'}, {'nome': 'Teste Automation 26284', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': '85D2qKCvgDJjLdUJ'}, {'nome': 'Teste Qa.Coders 613198', 'preco': 1049, 'descricao': 'TESTE QA', 'quantidade': 1000, '_id': '8BgOixh9ALvjSkFG'}, {'nome': 'Mae', 'preco': 1000, 'descricao': 'Destiney', 'quantidade': 1050, '_id': '8COdEDXLLGFq9Lg0'}, {'nome': 'Orlo', 'preco': 25497, 'descricao': 'Oren', 'quantidade': 8098, '_id': '8ETLkmkxIsa0Hw3e'}, {'nome': 'Mr. Jerry Brown MD', 'preco': 48, 'descricao': 'cultural', 'quantidade': 42, '_id': '8ktOQUn0zBbiSYgn'}, {'nome': 'Teste Automation 10270', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': '9EKCeL9sHThV9Znl'}, {'nome': 'Teste Robot 1049', 'preco': 1010, 'descricao': '123456', 'quantidade': 10489, '_id': '9mrGtOkHWGX5J2J1'}, {'nome': 'Devin Martinez260', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 260, '_id': 'A6ji5R3NIBcO48DM'}, {'nome': 'Teste Automation 5348', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'AKAp7dDj1cSNaGaN'}, {'nome': 'Julie Stout148', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'AMZoWWpyiGTSrAqK'}, {'nome': 'Teste Automation 1049', 'preco': 10, 'descricao': 'Automation Teste', 'quantidade': 1010, '_id': 'AODy6hGsd0YVEG9u'}, {'nome': 'Kristi', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'AT8XwWvlpaGqY0xC'}, {'nome': 'Loraine', 'preco': 56324, 'descricao': 'Zaria', 'quantidade': 3266, '_id': 'BEZ0qAMjAQTt2TqZ'}, {'nome': 'Linda Pierce541', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'BSPSX7xvzYpsqK4b'}, {'nome': 'Logitech MX Vertical', 'preco': 470, 'descricao': 'Mouse', 'quantidade': 382, '_id': 'BeeJh5lz3k6kSIzA'}, {'nome': 'Viviane', 'preco': 51894, 'descricao': 'Kaitlyn', 'quantidade': 2579, '_id': 'BjeG0zPFsIcvaFuN'}, {'nome': 'Teste Automation 37016', 'preco': 470, 'descricao': 'RATO', 'quantidade': 381, '_id': 'BzPOwZFke4UjfUkz'}, {'nome': 'Gia', 'preco': 26677, 'descricao': 'Rocky', 'quantidade': 4260, '_id': 'CJI0D4vKF9nNwvJw'}, {'nome': 'Caden', 'preco': 54638, 'descricao': 'Earlene', 'quantidade': 2197, '_id': 'CNwyWSxhgSQT2oZv'}, {'nome': 'Teste Automation 85632', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'CPwy2FfbBawLL6nE'}, {'nome': 'Teste Qa.Coders 107465', 'preco': 1500, 'descricao': 'QA', 'quantidade': 150, '_id': 'CZtDRjBfS3QJfJYO'}, {'nome': 'Scott Clark', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'Cl9ZQ0MdnAhXmqZF'}, {'nome': 'Thomas Johnson69', 'preco': 71, 'descricao': 'American', 'quantidade': 89, '_id': 'CnM79rptfjQJZdfE'}, {'nome': 'Kira', 'preco': 1049, 'descricao': 'Damon Lebsack', 'quantidade': 1000, '_id': 'CsvDmjRkSCZCkaZD'}, {'nome': 'Teste Automation 70416', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'D0ckK2ILE2mKqIAN'}, {'nome': 'David Ray974', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'DRAjNOGc3nVO4SWR'}, {'nome': 'Teste Qa.Coders 388211', 'preco': 1049, 'descricao': 'TESTE QA', 'quantidade': 1000, '_id': 'DW7nDYaHTOEkpm6j'}, {'nome': 'Mouse RA', 'preco': 470, 'descricao': 'RATO', 'quantidade': 381, '_id': 'DYETEwFWAgo3QXW5'}, {'nome': 'Alicia Nelson', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'DtDqKYOWW8z7VBKn'}, {'nome': 'Matthew Flores', 'preco': 38, 'descricao': 'challenge', 'quantidade': 49, '_id': 'ECLPJHlj5oma73JW'}, {'nome': 'Andrea Rodriguez', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'ESlZqN8qSEMEorje'}, {'nome': 'Anne Gonzalez', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'ElnuwUdBPDZINzTp'}, {'nome': 'Mouse ABCSAEFD', 'preco': 470, 'descricao': 'RATO', 'quantidade': 381, '_id': 'EqhtVz4gK5nrl6An'}, {'nome': 'Chloe Walker', 'preco': 77, 'descricao': 'bit', 'quantidade': 43, '_id': 'FISNsiLkljOY8cGp'}, {'nome': 'Nathaniel', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'FeXZa9GCly7hX9du'}, {'nome': 'Teste Qa.Coders 949264', 'preco': 1049, 'descricao': 'TESTE QA', 'quantidade': 1000, '_id': 'GDzE6EO53XGTthXU'}, {'nome': 'Lisa Anderson', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'GGx5lKjgOvajcqBK'}, {'nome': 'Teste Automation 69411', 'preco': 470, 'descricao': 'RATO', 'quantidade': 381, '_id': 'GVyp2UAjzkxS7Goc'}, {'nome': 'Eladio', 'preco': 1000, 'descricao': 'Mylene', 'quantidade': 1050, '_id': 'GdXWPjQiuVXymyxa'}, {'nome': 'Gretchen', 'preco': 13129, 'descricao': 'Carmel', 'quantidade': 4153, '_id': 'GoAqZpf5UNfvXqi8'}, {'nome': 'Robert Wilkinson', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'Gyyqc6GPBiJfvlq0'}, {'nome': 'Melissa Wilkerson376', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 376, '_id': 'GzlGKet3nCMrWoXc'}, {'nome': 'Logitech RATO', 'preco': 470, 'descricao': 'RATO', 'quantidade': 381, '_id': 'H6bLUXvmDSKdRUTb'}, {'nome': 'Teste Qa.Coders 965264', 'preco': 1049, 'descricao': 'TESTE QA', 'quantidade': 1000, '_id': 'HCEbBqofH5RR0SSi'}, {'nome': 'Patricia', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'HDWfOn3d1xMLWsLb'}, {'nome': 'Roberta', 'preco': 60038, 'descricao': 'Ella', 'quantidade': 40, '_id': 'HKAe8g5OkQU3LKVA'}, {'nome': 'Julius', 'preco': 82906, 'descricao': 'Betsy', 'quantidade': 3693, '_id': 'HMsrDkUdpPuKlETQ'}, {'nome': 'Michael Long801', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'HZApYPeXLSdGvhw6'}, {'nome': 'Russ', 'preco': 36953, 'descricao': 'Ethan', 'quantidade': 2098, '_id': 'HadsRyKZfn5cqvlX'}, {'nome': 'Thomas Walker051', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'HfBwmILtuZfH9O5M'}, {'nome': 'Cordelia', 'preco': 1049, 'descricao': 'Christopher Ledner', 'quantidade': 1000, '_id': 'HgGao1hFYhJanDry'}, {'nome': 'Teste Automation 3737', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'Hq8abXgL631vkfaL'}, {'nome': 'Teste Automation 93910', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'I1JWvWZp4DfVS3SW'}, {'nome': 'Teste', 'preco': 23, 'descricao': 'individual', 'quantidade': 33, '_id': 'ILqOXXLAW2LYP7wC'}, {'nome': 'Teste Automation 75838', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'IN4eNnoUWCdFvDkE'}, {'nome': 'Teste Automation 60504', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'IYN1aQzgEo0yMCBh'}, {'nome': 'Sheridan', 'preco': 1049, 'descricao': 'Antoinette Lowe', 'quantidade': 1000, '_id': 'IdbonOi0adLemV4T'}, {'nome': 'Mitchell', 'preco': 1049, 'descricao': 'Willis Sawayn Jr.', 'quantidade': 1000, '_id': 'IkWXFGAFn52Pypii'}, {'nome': 'Sharon', 'preco': 18412, 'descricao': 'Ethelyn', 'quantidade': 6188, '_id': 'J17scGDQywuQF1NZ'}, {'nome': 'Juwan', 'preco': 1049, 'descricao': 'Irma Kemmer', 'quantidade': 1000, '_id': 'J5d3Pe9BH0qnxnrs'}, {'nome': 'Annalise', 'preco': 1049, 'descricao': 'Luz Fahey', 'quantidade': 1000, '_id': 'JJPV7DKTw8DFWRBd'}, {'nome': 'Mrs. Jaime Baker', 'preco': 45, 'descricao': 'myself', 'quantidade': 66, '_id': 'JewzuKbImneShzH6'}, {'nome': 'Zella', 'preco': 96262, 'descricao': 'Colleen', 'quantidade': 9785, '_id': 'JscYbWAJ59wRGhYG'}, {'nome': 'Ali', 'preco': 1049, 'descricao': 'Gerald Parisian Jr.', 'quantidade': 1000, '_id': 'Jy4RhRpe38MJQuWR'}, {'nome': 'Teste Automation 43264', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'JzapnqV96dKIJKuq'}, {'nome': 'Samsung 60 polegadas', 'preco': 5240, 'descricao': 'TV', 'quantidade': 49977, '_id': 'K6leHdftCeOJj8BJ'}, {'nome': 'Lee Simpson326', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 326, '_id': 'KP8fpuld1m6pndyM'}, {'nome': 'Mr. Timothy Lucero', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'KTqdfljytTIIStNs'}, {'nome': 'Christopher Boyd', 'preco': 27, 'descricao': 'Summer share perform political also challenge.', 'quantidade': 66, '_id': 'KZkAvxUsGInkBUH3'}, {'nome': 'Tonya Tucker788', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 788, '_id': 'LMI9lkcS8grdzfBd'}, {'nome': 'Dolly', 'preco': 1049, 'descricao': 'Lillie Anderson', 'quantidade': 1000, '_id': 'LZdITM0YNkJ7jHJ4'}, {'nome': 'Teste Automation 75852', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'LylVUvJ1dJ62Q1JR'}, {'nome': 'Teste Automation 88116', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'MFwH5ZxpeloRocyD'}, {'nome': 'Rosella', 'preco': 9959, 'descricao': 'Kallie', 'quantidade': 8792, '_id': 'MHYlif6uVtBxewgO'}, {'nome': 'Maria', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'MUdCqzJRbfNto5ni'}, {'nome': 'Teste Automation 23912', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'MkD1KJAxcRChUFTM'}, {'nome': 'Teste Automation 17567', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'MsSHqi20KQb8leTo'}, {'nome': 'Teste Automation 65922', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'MuRN9JDgdLsUa9Sd'}, {'nome': 'Romaine', 'preco': 1049, 'descricao': 'Ella Gulgowski IV', 'quantidade': 1000, '_id': 'N6RzunVaq7mBHh3X'}, {'nome': 'Mouse RATO', 'preco': 470, 'descricao': 'RATO', 'quantidade': 381, '_id': 'NAGZoXwUiZWed3zd'}, {'nome': 'Tyler Ingram279', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 279, '_id': 'NCv8KFbtfkqW7xOv'}, {'nome': 'Christopher Wang', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'NH3NUStg8kzCvGzk'}, {'nome': 'Teste Automation 89371', 'preco': 470, 'descricao': 'RATO', 'quantidade': 381, '_id': 'NIlfq1cDkNxXZW2O'}, {'nome': 'Teste Automation 41449', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'NMqvKorP4JBeqa2d'}, {'nome': 'Kieran', 'preco': 1049, 'descricao': 'Oscar Lesch III', 'quantidade': 1000, '_id': 'NNBz56Bas4VTSJtu'}, {'nome': 'Amanda Rodriguez61', 'preco': 60, 'descricao': 'present', 'quantidade': 20, '_id': 'NRqnuoSLhuas8pHz'}, {'nome': 'Teste Qa.Coders NaN', 'preco': 1049, 'descricao': 'TESTE QA', 'quantidade': 1000, '_id': 'NithVKMmtEgczbFl'}, {'nome': 'Teste Automation 67723', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'Not7VIJ3fbnpZsyI'}, {'nome': 'Brittany Johnson', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'Nt5wKPoMZlIN7aIK'}, {'nome': 'Percival', 'preco': 1000, 'descricao': 'QA Teste', 'quantidade': 1050, '_id': 'O0Gr6BUMnPXQboAI'}, {'nome': 'Jessica Brown202', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 202, '_id': 'OBK2J3BhpPnwQTK8'}, {'nome': 'Josie', 'preco': 1049, 'descricao': 'Dr. Myron Smitham', 'quantidade': 1000, '_id': 'OFnlK2GuYYXpOzP2'}, {'nome': 'Teste Qa.Coders 506686', 'preco': 1049, 'descricao': 'TESTE QA', 'quantidade': 1000, '_id': 'OGAEHZDyVNmdCGKT'}, {'nome': 'Marcus Wong', 'preco': 81, 'descricao': 'resource', 'quantidade': 47, '_id': 'OO6fpKn5r85Oednx'}, {'nome': 'Holly', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'OS3cK9TpOEGYAHqa'}, {'nome': 'Teste Qa.Coders 15563', 'preco': 1049, 'descricao': 'TESTE QA', 'quantidade': 1000, '_id': 'OqvNepRfI1Qhc0tY'}, {'nome': 'Teste Automation 77687', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'OrZSaWandpc28830'}, {'nome': 'Mouse A', 'preco': 470, 'descricao': 'RATO', 'quantidade': 381, '_id': 'P16dpVZt3bPPhqsV'}, {'nome': 'Teste Automation 70002', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'PH87oS17hSIl3q9M'}, {'nome': 'Teste Automation 15329', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'PHdEGdb6ppmKOese'}, {'nome': 'Teste Automation 79157', 'preco': 470, 'descricao': 'RATO', 'quantidade': 381, '_id': 'PNSE1Z9NhsBhprYF'}, {'nome': 'Teste Automation 51782', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'PonwrDFRwQ0XNeR1'}, {'nome': 'Matthew Ingram', 'preco': 59, 'descricao': 'music', 'quantidade': 37, '_id': 'PvB0HwHQIrNcm5cx'}, {'nome': 'Donna', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'PzK3ONZqsCXvdjyZ'}, {'nome': 'Darren Mcpherson', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'QNtDXFVkJZk1McXS'}, {'nome': 'Kelton', 'preco': 1049, 'descricao': 'Marlon Durgan', 'quantidade': 1000, '_id': 'QVHnB5QVJu5gp4LN'}, {'nome': 'Teste Qa.Coders 84455', 'preco': 1049, 'descricao': 'TESTE QA', 'quantidade': 1000, '_id': 'QVNnrZ11FyRpcmsK'}, {'nome': 'Teste Automation 65071', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'QZRl3ajbcko9CWO1'}, {'nome': 'Teste Qa.Coders 720734', 'preco': 1049, 'descricao': 'TESTE QA', 'quantidade': 1000, '_id': 'QdfwMTabT5lMVZDp'}, {'nome': 'Teste Automation 82645', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'Qm2icvShPaOFQ9bP'}, {'nome': 'David Montgomery', 'preco': 18, 'descricao': 'skin', 'quantidade': 50, '_id': 'RgAguiPZmFvXOWgI'}, {'nome': 'Ashley Figueroa', 'preco': 65, 'descricao': 'concern', 'quantidade': 59, '_id': 'RmsLBtMcoke8EbB6'}, {'nome': 'Patrick Palmer33', 'preco': 50, 'descricao': 'pressure', 'quantidade': 70, '_id': 'RtiChUodNVC6HNpD'}, {'nome': 'Teste Automation 7477', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'SEOtrHr0j21naw9T'}, {'nome': 'Robert', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'SP9pV6yR2t9arFpi'}, {'nome': 'Teste Automation 82549', 'preco': 470, 'descricao': 'RATO', 'quantidade': 381, '_id': 'Sg71E7O1bVtRDhTi'}, {'nome': 'Teste Qa.Coders 40949', 'preco': 1049, 'descricao': 'TESTE QA', 'quantidade': 1000, '_id': 'SlUXowPllnCe4ydr'}, {'nome': 'Teste QA', 'preco': 1000, 'descricao': 'QA Teste', 'quantidade': 1050, '_id': 'Stl3Df7Rl9RwM4RG'}, {'nome': 'Reese', 'preco': 1049, 'descricao': 'Margaret Blanda', 'quantidade': 1000, '_id': 'Sz5MzoqTA1ixyWn5'}, {'nome': 'Ian Bradley223', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'T8oJctWSbmRFlIOV'}, {'nome': 'Teste Automation 12318', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'TL1afubS1u3y9A0r'}, {'nome': 'Katherine Barnett61', 'preco': 43, 'descricao': 'trip', 'quantidade': 80, '_id': 'TdpZwFJu9Xjfs7Cs'}, {'nome': "''", 'preco': 1010, 'descricao': 'Teste Robot', 'quantidade': 1049, '_id': 'TvNczO5gFswrKkpj'}, {'nome': 'Teste Qa.Coders 836646', 'preco': 1049, 'descricao': 'TESTE QA', 'quantidade': 1000, '_id': 'U0jCsuBucJKMVlH5'}, {'nome': 'Teste Automation 1049 7yq', 'preco': 10, 'descricao': 'Automation Teste', 'quantidade': 1010, '_id': 'U1CKbmQGV4BosfJL'}, {'nome': 'Teste Automation 774', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'U3xUPA7SlgtWUN7n'}, {'nome': 'Teste Qa.Coders 124607', 'preco': 1049, 'descricao': 'TESTE QA', 'quantidade': 1000, '_id': 'U5GZWeonKcz34Lut'}, {'nome': 'Estella', 'preco': 1049, 'descricao': 'Camille Carroll', 'quantidade': 1000, '_id': 'UOl04hab8upCbZQY'}, {'nome': 'Antonina', 'preco': 30897, 'descricao': 'Eliseo', 'quantidade': 5550, '_id': 'Uoh6rNEOUFPGCaXz'}, {'nome': 'Anastacio', 'preco': 75406, 'descricao': 'Camylle', 'quantidade': 3270, '_id': 'V5iPNpv4ag21QfCN'}, {'nome': 'Evan', 'preco': 1049, 'descricao': 'Genevieve Kilback', 'quantidade': 1000, '_id': 'V8Gtbg9EVS1JTeqK'}, {'nome': 'Laura Lynch517', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'VQg1dHYgH73r4QQR'}, {'nome': 'Orlando', 'preco': 1049, 'descricao': 'Mr. Roy Labadie DVM', 'quantidade': 1000, '_id': 'W6btcb2QERtPWfE4'}, {'nome': 'Lindsey Hopkins366', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'WQDX3RXcfXFwSCyd'}, {'nome': 'Teste Qa.Coders 521572', 'preco': 1049, 'descricao': 'TESTE QA', 'quantidade': 1000, '_id': 'WW8LCpBcRW6HMKWt'}, {'nome': 'Jessica Chandler311', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 311, '_id': 'Wc3RkJwIGsZ4JcgD'}, {'nome': 'Teste Automation 90949', 'preco': 470, 'descricao': 'RATO', 'quantidade': 381, '_id': 'WkqzvzSkGTixbLHA'}, {'nome': 'Lori Wells', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'Wt8gF6LJYxMoT1sR'}, {'nome': 'Jane', 'preco': 1049, 'descricao': 'Christine King', 'quantidade': 1000, '_id': 'WtdknNwUORRAuqqE'}, {'nome': 'Monica', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'XKbXfQCHwFomxnU6'}, {'nome': 'Amber Duncan', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'XcAB9k9eygDLheea'}, {'nome': 'Teste Automation 44579', 'preco': 470, 'descricao': 'RATO', 'quantidade': 381, '_id': 'XcJw8aDykKe0C4lk'}, {'nome': 'Cynthia Diaz21', 'preco': 18, 'descricao': 'break', 'quantidade': 31, '_id': 'XdmoKMZ7oMzxRuTX'}, {'nome': 'Teste Qa.Coders 216069', 'preco': 1049, 'descricao': 'TESTE QA', 'quantidade': 1000, '_id': 'Xgl7Qqvd0jPSHldq'}, {'nome': 'Teste Automation 38323', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'XiVNh8DLbccDwOKu'}, {'nome': 'Larry', 'preco': 62378, 'descricao': 'Mallie', 'quantidade': 1100, '_id': 'YJL3NZw4N7y3yrlx'}, {'nome': 'Teste Automation 16243', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'YLVhBLgQfVfl0sXK'}, {'nome': 'Teste Automation 35804', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'YLfeeA7WxF0wwNYW'}, {'nome': 'Teste Automation 62917', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'YVjHqGbgBmkHBoAE'}, {'nome': 'Teste Qa.Coders 975882', 'preco': 1049, 'descricao': 'TESTE QA', 'quantidade': 1000, '_id': 'Yp3BAcTHSQljpsxf'}, {'nome': 'Anthony Cruz592', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 592, '_id': 'ZEDjct0gX1ioLqa5'}, {'nome': 'Christina Calhoun DDS442', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 442, '_id': 'ZXt7C9L5H4l4Yalc'}, {'nome': 'Teste Automation 31004', 'preco': 470, 'descricao': 'RATO', 'quantidade': 381, '_id': 'Zh8vv3u3Wy4UjJ0D'}, {'nome': 'Mouse', 'preco': 470, 'descricao': 'RATO', 'quantidade': 381, '_id': 'ZrVQvxjIoU5n9az8'}, {'nome': 'Teste Automation 73459', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'a3JSUGvmFKr3OTKG'}, {'nome': 'Mavis', 'preco': 58917, 'descricao': 'Cecilia', 'quantidade': 891, '_id': 'aB5rIylNgW6DAMBi'}, {'nome': 'Teste Automation 96416', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'aTPYsnKU5og7SuXN'}, {'nome': 'Madison Evans414', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 414, '_id': 'agmN3GR56289NwZQ'}, {'nome': 'Teste Qa.Coders 215621', 'preco': 1049, 'descricao': 'TESTE QA', 'quantidade': 1000, '_id': 'b0VCAxl5rrE0oxjr'}, {'nome': 'Ryan', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'bMHsqP43wiUFVB7J'}, {'nome': 'Jim Sheppard', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'bgyh7zjxccf7GiT4'}, {'nome': 'Octavia', 'preco': 1000, 'descricao': 'Troy', 'quantidade': 1050, '_id': 'c3PbETkvs0qQ4WIN'}, {'nome': 'Teste Qa.Coders 535521', 'preco': 1049, 'descricao': 'TESTE QA', 'quantidade': 1000, '_id': 'c9SEqJ6RRzECXTsX'}, {'nome': 'Henry Lewis55', 'preco': 80, 'descricao': 'conference', 'quantidade': 62, '_id': 'cNM5ulsIBhzcuLrb'}, {'nome': 'Teste Automation 27111', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'cZMeoGBnkncYfHm1'}, {'nome': 'Tyler Winters', 'preco': 36, 'descricao': 'top', 'quantidade': 21, '_id': 'cqwKzpiJoCok20UZ'}, {'nome': 'Teste Automation 18566', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'cr0sO0JQKUIbFmAh'}, {'nome': 'Teste Automation 50463', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'cw0VyxXxk4iLDlZZ'}, {'nome': 'Luciano', 'preco': 90932, 'descricao': 'Cory', 'quantidade': 7437, '_id': 'cz7TGa8QWKivX7uH'}, {'nome': 'Teste Qa.Coders 695957', 'preco': 1049, 'descricao': 'TESTE QA', 'quantidade': 1000, '_id': 'dFJPJCgQyI32BJlY'}, {'nome': 'Teste Qa.Coders 480024', 'preco': 1049, 'descricao': 'TESTE QA', 'quantidade': 1000, '_id': 'dNzAk8LgWgdf9qML'}, {'nome': 'Luigi', 'preco': 1049, 'descricao': 'Mrs. Laurie Bergnaum', 'quantidade': 1000, '_id': 'dPcxlt9tQTYQd7eG'}, {'nome': 'Zachary', 'preco': 1049, 'descricao': 'Marshall Champlin', 'quantidade': 1000, '_id': 'dVo3H8QlLLeiHVrs'}, {'nome': 'Kathleen Ritter', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'dr7ulXg4sxkulmhB'}, {'nome': 'Teste Automation 81348', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'e0kBkLK8BEYBrSdx'}, {'nome': 'Matthew Johnston79', 'preco': 35, 'descricao': 'suffer', 'quantidade': 29, '_id': 'e5YLmL3WEEoLf1CO'}, {'nome': 'Teste Automation 94766', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'e66A390kM5nx80j8'}, {'nome': 'Sherry Williams931', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 931, '_id': 'eFLABrwzc88YTBCU'}, {'nome': 'Teste Automation 98371', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'ePIzR9Nvadq2rhIf'}, {'nome': 'Cathy', 'preco': 1049, 'descricao': 'Jenny Oberbrunner', 'quantidade': 1000, '_id': 'egy5bnKiGvZfUupV'}, {'nome': 'Dayana', 'preco': 1049, 'descricao': 'Ms. Patsy Romaguera', 'quantidade': 1000, '_id': 'eja6Brjk8OViaudz'}, {'nome': 'Ryan Johnson', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'ex3cvaJxQ2DALz93'}, {'nome': 'Teste Automation 52012', 'preco': 470, 'descricao': 'RATO', 'quantidade': 381, '_id': 'f4dRIjjZqGa9KiWG'}, {'nome': 'Waino', 'preco': 1049, 'descricao': 'Dr. Geneva Murphy', 'quantidade': 1000, '_id': 'f86qEm9RXCxuk3lC'}, {'nome': 'James Carter491', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 491, '_id': 'fYdQIDuC657Kix7w'}, {'nome': 'Quentin', 'preco': 1049, 'descricao': 'Evan Streich Sr.', 'quantidade': 1000, '_id': 'fbBf1lFmfVoRvdGW'}, {'nome': 'Davion', 'preco': 1000, 'descricao': 'Leta', 'quantidade': 1050, '_id': 'fwah37XTpLWhh1zT'}, {'nome': 'Rodney Beasley862', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 862, '_id': 'g17UY4jZB3pCplmT'}, {'nome': 'Mouse ABCSAEFDA', 'preco': 470, 'descricao': 'RATO', 'quantidade': 381, '_id': 'gIBxpwdlbx91a10y'}, {'nome': 'Donald', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'gNsnKCjevBnUzIgN'}, {'nome': 'Joe Walsh', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'gWUo8aoT7NPwNyjc'}, {'nome': 'Teste Automation 15821', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'gyQjOtm6ScToV6O7'}, {'nome': 'Teste Automation 65076', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'hKQ8AJWNOMkQVeez'}, {'nome': 'Teste Automation 20703', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'hg5TtCINNbecd8Rh'}, {'nome': 'Alfonzo', 'preco': 57133, 'descricao': 'Hallie', 'quantidade': 5292, '_id': 'hiilGmKqwbpSWeyX'}, {'nome': 'Teste Qa.Coders 775932', 'preco': 1049, 'descricao': 'TESTE QA', 'quantidade': 1000, '_id': 'hsy6e3R0W4eERcrj'}, {'nome': 'Null', 'preco': 77, 'descricao': 'picture', 'quantidade': 88, '_id': 'ia3OEaByF1GDuMt2'}, {'nome': 'Makenzie', 'preco': 1049, 'descricao': 'Nicholas Rath DVM', 'quantidade': 1000, '_id': 'ibt9PTxxNjChy0Bm'}, {'nome': 'Scott Hoover517', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'idZuEyB0UhM3Q8hE'}, {'nome': 'Newton', 'preco': 9977, 'descricao': 'Alvena', 'quantidade': 4649, '_id': 'igtfQlbaMLyD8iLg'}, {'nome': 'Mouse RAT', 'preco': 470, 'descricao': 'RATO', 'quantidade': 381, '_id': 'ikuu4Xqw4gCHRA30'}, {'nome': 'Rudolph', 'preco': 1049, 'descricao': 'Eloise Keebler', 'quantidade': 1000, '_id': 'iyHAfSIHIJSdbh60'}, {'nome': 'Teste Qa.Coders 120810', 'preco': 1049, 'descricao': 'TESTE QA', 'quantidade': 1000, '_id': 'jAWEn19nBkiIUq01'}, {'nome': 'Teste Automation 76451', 'preco': 470, 'descricao': 'RATO', 'quantidade': 381, '_id': 'jF10Ot7F1OPyq5pA'}, {'nome': 'Jeremy Bennett960', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 960, '_id': 'jHEvP7s3dxm1z8b5'}, {'nome': 'Emie', 'preco': 1049, 'descricao': 'James Murray', 'quantidade': 1000, '_id': 'jKKRZIeLAyKpCKiA'}, {'nome': 'Jessica Morris228', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'jXm9UtjLd0s4v6jG'}, {'nome': 'Teste Qa.Coders 267517', 'preco': 1049, 'descricao': 'TESTE QA', 'quantidade': 1000, '_id': 'jYOpOQeuu5925hT8'}, {'nome': 'Teste QaCoders 2', 'preco': 1049, 'descricao': 'QA', 'quantidade': 100, '_id': 'jhDwhjNQm7S62yPg'}, {'nome': 'Sara Franklin268', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'kDtRYGmMVHbQ0wBX'}, {'nome': 'Teste Automation 72685', 'preco': 470, 'descricao': 'RATO', 'quantidade': 381, '_id': 'knAPWpBD9ua2Ykuc'}, {'nome': 'Teste Qa.Coders 450059', 'preco': 1049, 'descricao': 'TESTE QA', 'quantidade': 1000, '_id': 'lDnx7vvNBMxLDz7e'}, {'nome': 'Teste Qa.Coders 923964', 'preco': 1049, 'descricao': 'TESTE QA', 'quantidade': 1000, '_id': 'lDviqdlrcJys9x3V'}, {'nome': 'Nicholas Griffin', 'preco': 1010, 'descricao': 'Teste Robot', 'quantidade': 1049, '_id': 'laiAprVcUqUFXQkZ'}, {'nome': 'Ms. Tara Barnes', 'preco': 47, 'descricao': 'board', 'quantidade': 27, '_id': 'lnRccrWQ6LxinTUQ'}, {'nome': 'Teste Qa.Coders 310427', 'preco': 1049, 'descricao': 'TESTE QA', 'quantidade': 1000, '_id': 'lx4GYtKPUclVhhto'}, {'nome': 'Joseph Alexander46', 'preco': 28, 'descricao': 'suffer', 'quantidade': 80, '_id': 'm731wu49lze5fQPb'}, {'nome': 'Teste QaCoders 1', 'preco': 1049, 'descricao': 'QA', 'quantidade': 100, '_id': 'm8GRBrz3OghRnakH'}, {'nome': 'Joaquin', 'preco': 1049, 'descricao': 'Joy Kulas Sr.', 'quantidade': 1000, '_id': 'mUbge71r5cYcB6Me'}, {'nome': 'Patricia Ayers', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'meHEEKpPG7hW3wXX'}, {'nome': 'Cindy', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'ms1s4yAv48BVD8g5'}, {'nome': 'Brady', 'preco': 1049, 'descricao': 'Raul Langosh', 'quantidade': 1000, '_id': 'mxO7fBBWnidY1cNh'}, {'nome': 'Teste Automation 45711', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'n0UiBaf4xrXRjrz8'}, {'nome': 'Linda Cohen', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'n2GdpzWaX79gb14C'}, {'nome': 'Glenda', 'preco': 5083, 'descricao': 'Vida', 'quantidade': 4064, '_id': 'n2Smth6hKAPiR799'}, {'nome': 'Kent Cross557', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'n4409hrxNcVGvcRs'}, {'nome': 'cnome', 'preco': 1010, 'descricao': 'Teste Robot', 'quantidade': 1049, '_id': 'n4H6CEXcL4QzACUi'}, {'nome': 'Lonny', 'preco': 1049, 'descricao': 'Ana Sawayn', 'quantidade': 1000, '_id': 'n4xOPP7QJKpY26ic'}, {'nome': 'Robert Campos', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'n5mIhAAyTITDmCYX'}, {'nome': 'Teste QaCoders', 'preco': 1049, 'descricao': 'QA', 'quantidade': 100, '_id': 'nZgbgMEy4dF6JcWQ'}, {'nome': 'Sunny', 'preco': 1049, 'descricao': 'Georgia Lynch', 'quantidade': 1000, '_id': 'ncIkXPIgdOElsLLP'}, {'nome': 'Allene', 'preco': 1049, 'descricao': 'Valerie McKenzie', 'quantidade': 1000, '_id': 'o0vNZMFDhHI1tjXB'}, {'nome': 'Teste Automation 67496', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'o2rUvkXdDZKMTIfJ'}, {'nome': 'Teste Qa.Coders 700817', 'preco': 1049, 'descricao': 'TESTE QA', 'quantidade': 1000, '_id': 'oJfMrfmBuDwsiwFG'}, {'nome': 'Teste Automation 89103', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'oVmNlyYRZERJBg5H'}, {'nome': 'Michael Gregory47', 'preco': 87, 'descricao': 'pull', 'quantidade': 63, '_id': 'oeAWf5mGfpVoWXi8'}, {'nome': 'Teste Qa.Coders 54185', 'preco': 1049, 'descricao': 'TESTE QA', 'quantidade': 1000, '_id': 'omg4fdLEEW2CK7E4'}, {'nome': 'Katherine Martin719', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'p37gI9rmkHd7kn4n'}, {'nome': 'Teste Automation 44930', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'pGB2QbaxOEz1dxyR'}, {'nome': 'Heather', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'pMUIVgxkNJXyiBSb'}, {'nome': 'Teste Automation 26000', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'pTy1T9RZ3YJSg07P'}, {'nome': 'Teste Qa.Coders 801370', 'preco': 1049, 'descricao': 'TESTE QA', 'quantidade': 1000, '_id': 'pU591DmzWpkE3NDz'}, {'nome': 'Micheal', 'preco': 1000, 'descricao': 'Geraldine', 'quantidade': 1050, '_id': 'pd2arBcLHRfJ0nLO'}, {'nome': 'Jaylon', 'preco': 1000, 'descricao': 'Nasir', 'quantidade': 1050, '_id': 'pzLcAs9VyUHoFjpz'}, {'nome': 'Teste Automation 93837', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'qFVYRTP9vFkwLCSn'}, {'nome': 'Clementina', 'preco': 1049, 'descricao': 'Randall Reilly', 'quantidade': 1000, '_id': 'qHPQO3JfRJf1hzOZ'}, {'nome': 'Austin', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'qkdYE6aYKgmmtzz8'}, {'nome': 'Teste Automation 98495', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'qrZKTR23y1QvbVb8'}, {'nome': 'Kathryn Sims', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'qw0KhTe22ih5d9ke'}, {'nome': 'Keith', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'r7nNmdqg55arSbyD'}, {'nome': 'Teste Qa.Coders 281822', 'preco': 1049, 'descricao': 'TESTE QA', 'quantidade': 1000, '_id': 'rhMU4sCESO0q7wJV'}, {'nome': 'Fernando Hill314', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'rhiq71beQi5Ac0Qo'}, {'nome': 'Mr. Jacob Turner880', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 's42rJrXvauCRT1gP'}, {'nome': 'Kelly Warner88', 'preco': 64, 'descricao': 'early', 'quantidade': 64, '_id': 's4VL1Hy888UxbZRV'}, {'nome': 'Marcelino', 'preco': 78607, 'descricao': 'Maci', 'quantidade': 2872, '_id': 'sQmEjx8FNnzRQh02'}, {'nome': 'Austin Carlson', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'sbWo6zoCgegwVGWV'}, {'nome': 'Teste Automation 9898', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'sgZsVgQEciJyL6Bk'}, {'nome': 'Dana Jackson', 'preco': 55, 'descricao': 'free', 'quantidade': 78, '_id': 'sgbtnY6DD1qAhiWF'}, {'nome': 'Heather Scott40', 'preco': 41, 'descricao': 'add', 'quantidade': 19, '_id': 'sgl59e8aNWQ6XVkf'}, {'nome': 'Tammy Estrada851', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 851, '_id': 'skl2CEFPL5FiMz00'}, {'nome': 'Jonathan', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'sn5CcFfEWT2HB9Q8'}, {'nome': 'John Garcia', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'ssOrPqg83l0bTlK1'}, {'nome': 'Jared Edwards653', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'suEUU50oixvbCUOS'}, {'nome': 'Cary', 'preco': 1049, 'descricao': 'Alice Emard', 'quantidade': 1000, '_id': 'szLTPRJCGwmupTeT'}, {'nome': 'Zachary Freeman60', 'preco': 57, 'descricao': 'paper', 'quantidade': 54, '_id': 't37RY7XNK8tNdhgL'}, {'nome': 'Teste Automation 25165', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'tMJFgKsrnpOeD1Cf'}, {'nome': 'Angelina', 'preco': 50886, 'descricao': 'Chloe', 'quantidade': 6662, '_id': 'tUPiW4boJU0Oktxs'}, {'nome': 'Kimberly Daniel', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'taUBcQz2lWVNpmEs'}, {'nome': 'Randy Davis680', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 680, '_id': 'tf0POXq8rohZDwgm'}, {'nome': 'Eli', 'preco': 24194, 'descricao': 'Donna', 'quantidade': 8254, '_id': 'ttbEoB1g1EFcdDXU'}, {'nome': 'Destiny Kane', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'twxfjoRLRCMd2VLW'}, {'nome': 'Teste Automation 64411', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'uJ0qE7o2nntu5tUI'}, {'nome': 'Coby', 'preco': 58581, 'descricao': 'Catharine', 'quantidade': 917, '_id': 'uL4ZfqYPHoX4KPvp'}, {'nome': '13246', 'preco': 1010, 'descricao': '12131324', 'quantidade': 10489, '_id': 'uYzvEnJT8m6T4cAN'}, {'nome': 'Teste Automation 72981', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'uZNTQvHtCWON4eMT'}, {'nome': 'Reilly', 'preco': 24667, 'descricao': 'Lexi', 'quantidade': 8028, '_id': 'ucXff3Ox78CZwQP6'}, {'nome': 'Ann Luna', 'preco': 39, 'descricao': 'Thus successful fast know.', 'quantidade': 21, '_id': 'ujCNLalblNeuCLFS'}, {'nome': 'Teste Automation 14520', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'vEac33E9EVDfSsxf'}, {'nome': 'Teste Automation 87083', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'vF27u2pIuj0fS30S'}, {'nome': 'Chelsea Cline754', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'vjXeuwWxvHmoqz8u'}, {'nome': 'Daniel Black377', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'vuz8fPWuEPY7jh2e'}, {'nome': 'Christopher Espinoza76', 'preco': 80, 'descricao': 'team', 'quantidade': 76, '_id': 'w7yxcfqy0JVGWAkW'}, {'nome': 'Enola', 'preco': 1049, 'descricao': 'Olga Brakus', 'quantidade': 1000, '_id': 'w95fEDPpqQLLwJnU'}, {'nome': 'Teste Qa.Coders 199993', 'preco': 1049, 'descricao': 'TESTE QA', 'quantidade': 1000, '_id': 'wPEfTK5JnANy1yiB'}, {'nome': 'Teste Automation 1049 7yy', 'preco': 10, 'descricao': 'Automation Teste', 'quantidade': 1010, '_id': 'x5s043LsjnnKA3Bh'}, {'nome': 'Sandro Augusto 1049', 'preco': 1049, 'descricao': 'Barcelona', 'quantidade': 1010, '_id': 'xMEl8kD2AhvziCr5'}, {'nome': 'Kimberly Myers', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'xMn3BJJKgVwiSZA5'}, {'nome': 'Michael', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'xNrLKGzW8z9d51Uj'}, {'nome': 'Teste Automation 22564', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'xjOiK795T1oWsLYd'}, {'nome': 'Jason Dudley643', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'xp9BJ2lsFQi7UCJB'}, {'nome': 'Teste Automation 46220', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'xr0zljRsIdJakQ6f'}, {'nome': '1231321', 'preco': 1010, 'descricao': '123456', 'quantidade': 10489, '_id': 'xwb1fPZFtA8ybQPB'}, {'nome': 'Sarah Robinson', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'yHoeLzUhWFk5PNUg'}, {'nome': 'James Williams', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'yV5KOease5Miztbt'}, {'nome': 'Teste Automation 17148', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'yc6ZyMFO4F6g0I1f'}, {'nome': 'Teste Qa.Coders 425867', 'preco': 1049, 'descricao': 'TESTE QA', 'quantidade': 1000, '_id': 'ypVygjeEe0NbP2p9'}, {'nome': 'Teste Automation 37097', 'preco': 1010, 'descricao': 'Automation', 'quantidade': 10, '_id': 'yuRbFaXyMidemmcO'}, {'nome': 'Amanda Brooks999', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 999, '_id': 'z5cvuivrRTDPW5cR'}, {'nome': 'Sophia Brown86', 'preco': 57, 'descricao': 'he', 'quantidade': 30, '_id': 'zalPSVe4OV1OkxLc'}, {'nome': 'Teresa Watson', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': 'zeEuZOKQGJBjCNlZ'}, {'nome': 'John Roberts', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'zesBeqU1kX1OQTQ3'}, {'nome': 'Teste Qa.Coders 675981', 'preco': 1500, 'descricao': 'QA', 'quantidade': 150, '_id': 'zxpnCNhuwJ6ExxiX'}, {'nome': '1131049', 'preco': 1010, 'descricao': "'Teste Automation'", 'quantidade': 10489, '_id': 'zz6XrtQHHltrJGLg'}]}</msg>
<status status="PASS" starttime="20240518 12:40:12.155" endtime="20240518 12:40:12.156"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.146" endtime="20240518 12:40:12.156"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>200</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240518 12:40:12.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.157" endtime="20240518 12:40:12.157"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.157" endtime="20240518 12:40:12.158"/>
</kw>
<kw name="E o body não pode está vazio" library="get_produtos">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20240518 12:40:12.162" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20240518 12:40:12.158" endtime="20240518 12:40:12.162"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.158" endtime="20240518 12:40:12.162"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.146" endtime="20240518 12:40:12.162"/>
</test>
<test id="s1-s2-t2" name="Fazer um Get Id Produtos" line="14">
<kw name="Quando verificar o id do produto" library="get_produtos">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<arg>${RESPOSTA.json()}[produtos][0][_id]</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.166" level="INFO">${id} = 02ivoMyq3wtwmumb</msg>
<status status="PASS" starttime="20240518 12:40:12.164" endtime="20240518 12:40:12.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${id}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.166" level="INFO">02ivoMyq3wtwmumb</msg>
<status status="PASS" starttime="20240518 12:40:12.166" endtime="20240518 12:40:12.166"/>
</kw>
<kw name="Get Id In" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${id}</arg>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>headers=${headersLogin}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240518 12:40:12.171" level="INFO">GET Request : url=http://localhost:3000/produtos/02ivoMyq3wtwmumb 
 path_url=/produtos/02ivoMyq3wtwmumb 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20240518 12:40:12.171" level="INFO">GET Response : url=http://localhost:3000/produtos/02ivoMyq3wtwmumb 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '1b6f5062-bc6d-472c-ace5-90390f61ea70', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '133', 'Date': 'Sat, 18 May 2024 15:40:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "nome": "Peter",
    "preco": 1049,
    "descricao": "Test Automation",
    "quantidade": 1010,
    "_id": "02ivoMyq3wtwmumb"
} 
 </msg>
<msg timestamp="20240518 12:40:12.171" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.166" endtime="20240518 12:40:12.171"/>
</kw>
<msg timestamp="20240518 12:40:12.171" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.166" endtime="20240518 12:40:12.171"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${nome}</var>
<arg>${RESPOSTA.json()}[nome]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240518 12:40:12.172" level="INFO">${nome} = Peter</msg>
<status status="PASS" starttime="20240518 12:40:12.171" endtime="20240518 12:40:12.172"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${nome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.172" level="INFO">${nome} = Peter</msg>
<status status="PASS" starttime="20240518 12:40:12.172" endtime="20240518 12:40:12.172"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.172" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.172" endtime="20240518 12:40:12.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.172" level="INFO">{'nome': 'Peter', 'preco': 1049, 'descricao': 'Test Automation', 'quantidade': 1010, '_id': '02ivoMyq3wtwmumb'}</msg>
<status status="PASS" starttime="20240518 12:40:12.172" endtime="20240518 12:40:12.172"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.164" endtime="20240518 12:40:12.172"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>200</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240518 12:40:12.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.174" endtime="20240518 12:40:12.174"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.174" endtime="20240518 12:40:12.174"/>
</kw>
<kw name="E verificar o campo nome no retorno" library="get_produtos">
<arg>Peter</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${nome}</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240518 12:40:12.175" endtime="20240518 12:40:12.176"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.175" endtime="20240518 12:40:12.176"/>
</kw>
<kw name="E o body não pode está vazio" library="get_produtos">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20240518 12:40:12.179" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20240518 12:40:12.178" endtime="20240518 12:40:12.180"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.177" endtime="20240518 12:40:12.180"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.163" endtime="20240518 12:40:12.180"/>
</test>
<doc>Documentacao da API: ServeRest</doc>
<status status="PASS" starttime="20240518 12:40:12.130" endtime="20240518 12:40:12.181"/>
</suite>
<suite id="s1-s3" name="Login" source="C:\ProjetosC\serveRest-robot\Features\login.robot">
<kw name="Conectar a API" library="services" type="SETUP">
<arg>/login</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>apiServeRest</arg>
<arg>${base_url}</arg>
<arg>${headersLogin}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20240518 12:40:12.197" level="INFO">Creating Session using : alias=apiServeRest, url=http://localhost:3000, headers={'accept': 'application/json', 'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20240518 12:40:12.197" endtime="20240518 12:40:12.197"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.196" endtime="20240518 12:40:12.197"/>
</kw>
<test id="s1-s3-t1" name="Login" line="10">
<kw name="Quando entrar com usuario e senha" library="login">
<kw name="Post in" library="services">
<var>${RESPOSTA}</var>
<arg>/login</arg>
<arg>${bodyLOGIN}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headersLogin}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240518 12:40:12.206" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '55'} 
 body=b'{"email": "Joseaugusto10@qa.com", "password": "051049"}' 
 </msg>
<msg timestamp="20240518 12:40:12.206" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '8b8db3da-50e6-46f9-a42e-55f72dbbb022', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '276', 'Date': 'Sat, 18 May 2024 15:40:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPvnMrL9bH_2bqpOyTA8wvVlc"
} 
 </msg>
<msg timestamp="20240518 12:40:12.206" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.199" endtime="20240518 12:40:12.206"/>
</kw>
<msg timestamp="20240518 12:40:12.206" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.198" endtime="20240518 12:40:12.207"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${token}</var>
<arg>${RESPOSTA.json()}[authorization]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240518 12:40:12.207" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPvnMrL9bH_2bqpOyTA8wv...</msg>
<status status="PASS" starttime="20240518 12:40:12.207" endtime="20240518 12:40:12.207"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${token}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240518 12:40:12.207" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPvnMrL9bH_2bqpOyTA8wv...</msg>
<status status="PASS" starttime="20240518 12:40:12.207" endtime="20240518 12:40:12.207"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240518 12:40:12.208" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.208" endtime="20240518 12:40:12.208"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.198" endtime="20240518 12:40:12.208"/>
</kw>
<kw name="Então o Status Code deverá ser" library="login">
<arg>200</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240518 12:40:12.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.209" endtime="20240518 12:40:12.210"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.208" endtime="20240518 12:40:12.210"/>
</kw>
<kw name="E verificar a mensagem" library="login">
<arg>Login realizado com sucesso</arg>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${RESPOSTA.json()}[message]</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240518 12:40:12.212" endtime="20240518 12:40:12.213"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.211" endtime="20240518 12:40:12.213"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.198" endtime="20240518 12:40:12.214"/>
</test>
<doc>Documentacao da API: ServeRest</doc>
<status status="PASS" starttime="20240518 12:40:12.182" endtime="20240518 12:40:12.214"/>
</suite>
<suite id="s1-s4" name="Post Produtos" source="C:\ProjetosC\serveRest-robot\Features\post_produtos.robot">
<kw name="Token" library="services" type="SETUP">
<kw name="Conectar a API" library="services">
<arg>/login</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>apiServeRest</arg>
<arg>${base_url}</arg>
<arg>${headersLogin}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20240518 12:40:12.228" level="INFO">Creating Session using : alias=apiServeRest, url=http://localhost:3000, headers={'accept': 'application/json', 'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20240518 12:40:12.227" endtime="20240518 12:40:12.229"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.227" endtime="20240518 12:40:12.229"/>
</kw>
<kw name="Quando entrar com usuario e senha" library="login">
<kw name="Post in" library="services">
<var>${RESPOSTA}</var>
<arg>/login</arg>
<arg>${bodyLOGIN}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headersLogin}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240518 12:40:12.234" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '55'} 
 body=b'{"email": "Joseaugusto10@qa.com", "password": "051049"}' 
 </msg>
<msg timestamp="20240518 12:40:12.234" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '66012d12-7593-431b-b5d4-babed00c939b', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '276', 'Date': 'Sat, 18 May 2024 15:40:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPvnMrL9bH_2bqpOyTA8wvVlc"
} 
 </msg>
<msg timestamp="20240518 12:40:12.234" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.230" endtime="20240518 12:40:12.234"/>
</kw>
<msg timestamp="20240518 12:40:12.234" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.229" endtime="20240518 12:40:12.234"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${token}</var>
<arg>${RESPOSTA.json()}[authorization]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240518 12:40:12.235" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPvnMrL9bH_2bqpOyTA8wv...</msg>
<status status="PASS" starttime="20240518 12:40:12.234" endtime="20240518 12:40:12.235"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${token}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240518 12:40:12.236" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPvnMrL9bH_2bqpOyTA8wv...</msg>
<status status="PASS" starttime="20240518 12:40:12.235" endtime="20240518 12:40:12.236"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240518 12:40:12.236" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.236" endtime="20240518 12:40:12.236"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.229" endtime="20240518 12:40:12.236"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.226" endtime="20240518 12:40:12.236"/>
</kw>
<test id="s1-s4-t1" name="Cadastrar Produto com sucesso" line="8">
<kw name="Fakers" library="Utils">
<kw name="Name" library="FakerLibrary">
<var>${FakeNome}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20240518 12:40:12.237" level="INFO">${FakeNome} = Mason Jackson</msg>
<status status="PASS" starttime="20240518 12:40:12.237" endtime="20240518 12:40:12.237"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeNome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.237" level="INFO">${FakeNome} = Mason Jackson</msg>
<status status="PASS" starttime="20240518 12:40:12.237" endtime="20240518 12:40:12.237"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${FakeEmail}</var>
<msg timestamp="20240518 12:40:12.238" level="INFO">${FakeEmail} = xcampbell@example.com</msg>
<status status="PASS" starttime="20240518 12:40:12.237" endtime="20240518 12:40:12.238"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeEmail}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.238" level="INFO">${FakeEmail} = xcampbell@example.com</msg>
<status status="PASS" starttime="20240518 12:40:12.238" endtime="20240518 12:40:12.238"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${compSenha}</var>
<arg>text=##</arg>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240518 12:40:12.238" level="INFO">${compSenha} = 62</msg>
<status status="PASS" starttime="20240518 12:40:12.238" endtime="20240518 12:40:12.238"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${FakeSenha}</var>
<arg>Seubarriga</arg>
<arg>${compSenha}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240518 12:40:12.238" level="INFO">${FakeSenha} = Seubarriga 62</msg>
<status status="PASS" starttime="20240518 12:40:12.238" endtime="20240518 12:40:12.238"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeSenha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.239" level="INFO">${FakeSenha} = Seubarriga 62</msg>
<status status="PASS" starttime="20240518 12:40:12.238" endtime="20240518 12:40:12.239"/>
</kw>
<kw name="Sentence" library="FakerLibrary">
<var>${FakerDescricao}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20240518 12:40:12.239" level="INFO">${FakerDescricao} = Country history collection accept message attack.</msg>
<status status="PASS" starttime="20240518 12:40:12.239" endtime="20240518 12:40:12.239"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerDescricao}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.239" level="INFO">${FakerDescricao} = Country history collection accept message attack.</msg>
<status status="PASS" starttime="20240518 12:40:12.239" endtime="20240518 12:40:12.239"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${FakerValor}</var>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240518 12:40:12.239" level="INFO">${FakerValor} = 420</msg>
<status status="PASS" starttime="20240518 12:40:12.239" endtime="20240518 12:40:12.239"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerValor}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.240" level="INFO">${FakerValor} = 420</msg>
<status status="PASS" starttime="20240518 12:40:12.239" endtime="20240518 12:40:12.240"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.236" endtime="20240518 12:40:12.240"/>
</kw>
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>${FakeNome}${FakerValor}</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>1049</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240518 12:40:12.241" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240518 12:40:12.241" endtime="20240518 12:40:12.241"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.241" endtime="20240518 12:40:12.241"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.241" endtime="20240518 12:40:12.241"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.242" endtime="20240518 12:40:12.243"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.242" endtime="20240518 12:40:12.243"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.245" endtime="20240518 12:40:12.246"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.244" endtime="20240518 12:40:12.246"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.246" endtime="20240518 12:40:12.247"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.246" endtime="20240518 12:40:12.247"/>
</kw>
<msg timestamp="20240518 12:40:12.247" level="INFO">${bodyPostProd} = {'nome': 'Mason Jackson420', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240518 12:40:12.240" endtime="20240518 12:40:12.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.247" level="INFO">{'nome': 'Mason Jackson420', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240518 12:40:12.247" endtime="20240518 12:40:12.247"/>
</kw>
<kw name="HeadersAuth" library="services">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240518 12:40:12.248" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPv...</msg>
<status status="PASS" starttime="20240518 12:40:12.247" endtime="20240518 12:40:12.248"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.248" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPv...</msg>
<status status="PASS" starttime="20240518 12:40:12.248" endtime="20240518 12:40:12.248"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.247" endtime="20240518 12:40:12.248"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240518 12:40:12.253" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPvnMrL9bH_2bqpOyTA8wvVlc', 'Content-Length': '100', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Mason Jackson420", "preco": "1010", "descricao": "Teste Automation", "quantidade": "1049"}' 
 </msg>
<msg timestamp="20240518 12:40:12.253" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '2dfaa5aa-946c-4a99-9da3-719feb6bf62a', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Sat, 18 May 2024 15:40:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "nFC88y7oLH0xv7o3"
} 
 </msg>
<msg timestamp="20240518 12:40:12.253" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.248" endtime="20240518 12:40:12.253"/>
</kw>
<msg timestamp="20240518 12:40:12.253" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.248" endtime="20240518 12:40:12.253"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.254" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.253" endtime="20240518 12:40:12.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.254" level="INFO">{'message': 'Cadastro realizado com sucesso', '_id': 'nFC88y7oLH0xv7o3'}</msg>
<status status="PASS" starttime="20240518 12:40:12.254" endtime="20240518 12:40:12.254"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.240" endtime="20240518 12:40:12.254"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>201</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240518 12:40:12.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.255" endtime="20240518 12:40:12.255"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.255" endtime="20240518 12:40:12.255"/>
</kw>
<kw name="E verificar a mensagem de validação" library="post_produtos">
<arg>Cadastro realizado com sucesso</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[message]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240518 12:40:12.256" endtime="20240518 12:40:12.257"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.256" endtime="20240518 12:40:12.257"/>
</kw>
<kw name="Excluir Produto" library="services">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<arg>${RESPOSTA.json()}[_id]</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.258" level="INFO">${id} = nFC88y7oLH0xv7o3</msg>
<status status="PASS" starttime="20240518 12:40:12.257" endtime="20240518 12:40:12.259"/>
</kw>
<kw name="Quando enviar uma requisição pra excluir um produto" library="delete_produtos">
<kw name="Delete in" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${id}</arg>
<kw name="DELETE" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a DELETE request.</doc>
<msg timestamp="20240518 12:40:12.266" level="INFO">DELETE Request : url=http://localhost:3000/produtos/nFC88y7oLH0xv7o3 
 path_url=/produtos/nFC88y7oLH0xv7o3 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPvnMrL9bH_2bqpOyTA8wvVlc', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20240518 12:40:12.266" level="INFO">DELETE Response : url=http://localhost:3000/produtos/nFC88y7oLH0xv7o3 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '2482b00a-71b7-48c3-81ea-80c9e86df19e', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '51', 'Date': 'Sat, 18 May 2024 15:40:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20240518 12:40:12.266" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.260" endtime="20240518 12:40:12.267"/>
</kw>
<msg timestamp="20240518 12:40:12.267" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.259" endtime="20240518 12:40:12.267"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.267" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.267" endtime="20240518 12:40:12.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.268" level="INFO">{'message': 'Registro excluído com sucesso'}</msg>
<status status="PASS" starttime="20240518 12:40:12.267" endtime="20240518 12:40:12.268"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.259" endtime="20240518 12:40:12.268"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.257" endtime="20240518 12:40:12.268"/>
</kw>
<kw name="E verificar a mensagem de exclusão" library="delete_produtos">
<arg>Registro excluído com sucesso</arg>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${RESPOSTA.json()}[message]</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240518 12:40:12.268" endtime="20240518 12:40:12.269"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.268" endtime="20240518 12:40:12.269"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.236" endtime="20240518 12:40:12.269"/>
</test>
<test id="s1-s4-t2" name="Validar Produto duplicado" line="16">
<kw name="Fakers" library="Utils">
<kw name="Name" library="FakerLibrary">
<var>${FakeNome}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20240518 12:40:12.271" level="INFO">${FakeNome} = Melissa Williams</msg>
<status status="PASS" starttime="20240518 12:40:12.271" endtime="20240518 12:40:12.271"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeNome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.271" level="INFO">${FakeNome} = Melissa Williams</msg>
<status status="PASS" starttime="20240518 12:40:12.271" endtime="20240518 12:40:12.271"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${FakeEmail}</var>
<msg timestamp="20240518 12:40:12.272" level="INFO">${FakeEmail} = ydavenport@example.com</msg>
<status status="PASS" starttime="20240518 12:40:12.272" endtime="20240518 12:40:12.272"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeEmail}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.272" level="INFO">${FakeEmail} = ydavenport@example.com</msg>
<status status="PASS" starttime="20240518 12:40:12.272" endtime="20240518 12:40:12.272"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${compSenha}</var>
<arg>text=##</arg>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240518 12:40:12.272" level="INFO">${compSenha} = 55</msg>
<status status="PASS" starttime="20240518 12:40:12.272" endtime="20240518 12:40:12.272"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${FakeSenha}</var>
<arg>Seubarriga</arg>
<arg>${compSenha}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240518 12:40:12.273" level="INFO">${FakeSenha} = Seubarriga 55</msg>
<status status="PASS" starttime="20240518 12:40:12.272" endtime="20240518 12:40:12.273"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeSenha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.273" level="INFO">${FakeSenha} = Seubarriga 55</msg>
<status status="PASS" starttime="20240518 12:40:12.273" endtime="20240518 12:40:12.273"/>
</kw>
<kw name="Sentence" library="FakerLibrary">
<var>${FakerDescricao}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20240518 12:40:12.273" level="INFO">${FakerDescricao} = Event Congress few that.</msg>
<status status="PASS" starttime="20240518 12:40:12.273" endtime="20240518 12:40:12.273"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerDescricao}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.273" level="INFO">${FakerDescricao} = Event Congress few that.</msg>
<status status="PASS" starttime="20240518 12:40:12.273" endtime="20240518 12:40:12.273"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${FakerValor}</var>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240518 12:40:12.274" level="INFO">${FakerValor} = 837</msg>
<status status="PASS" starttime="20240518 12:40:12.273" endtime="20240518 12:40:12.274"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerValor}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.274" level="INFO">${FakerValor} = 837</msg>
<status status="PASS" starttime="20240518 12:40:12.274" endtime="20240518 12:40:12.274"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.271" endtime="20240518 12:40:12.274"/>
</kw>
<kw name="Cadastro duplicado" library="services">
<arg>Testes Robot 10</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>1049</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240518 12:40:12.276" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240518 12:40:12.275" endtime="20240518 12:40:12.276"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.277" endtime="20240518 12:40:12.278"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.277" endtime="20240518 12:40:12.278"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.278" endtime="20240518 12:40:12.279"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.278" endtime="20240518 12:40:12.279"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.279" endtime="20240518 12:40:12.279"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.279" endtime="20240518 12:40:12.279"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.280" endtime="20240518 12:40:12.280"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.279" endtime="20240518 12:40:12.280"/>
</kw>
<msg timestamp="20240518 12:40:12.280" level="INFO">${bodyPostProd} = {'nome': 'Testes Robot 10', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240518 12:40:12.274" endtime="20240518 12:40:12.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.280" level="INFO">{'nome': 'Testes Robot 10', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240518 12:40:12.280" endtime="20240518 12:40:12.280"/>
</kw>
<kw name="HeadersAuth" library="services">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240518 12:40:12.281" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPv...</msg>
<status status="PASS" starttime="20240518 12:40:12.280" endtime="20240518 12:40:12.281"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.281" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPv...</msg>
<status status="PASS" starttime="20240518 12:40:12.281" endtime="20240518 12:40:12.281"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.280" endtime="20240518 12:40:12.281"/>
</kw>
<kw name="Post Cadastrar" library="services">
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240518 12:40:12.287" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPvnMrL9bH_2bqpOyTA8wvVlc', 'Content-Length': '99', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Testes Robot 10", "preco": "1010", "descricao": "Teste Automation", "quantidade": "1049"}' 
 </msg>
<msg timestamp="20240518 12:40:12.287" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '0d958a57-489b-4768-a011-47db98a6c486', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Sat, 18 May 2024 15:40:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "Owv9eXY6j1Dnycr1"
} 
 </msg>
<msg timestamp="20240518 12:40:12.288" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.281" endtime="20240518 12:40:12.288"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.281" endtime="20240518 12:40:12.288"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240518 12:40:12.297" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPvnMrL9bH_2bqpOyTA8wvVlc', 'Content-Length': '99', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Testes Robot 10", "preco": "1010", "descricao": "Teste Automation", "quantidade": "1049"}' 
 </msg>
<msg timestamp="20240518 12:40:12.297" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '3a64c8f3-d21c-48e1-8c4c-5683e8f695df', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '53', 'Date': 'Sat, 18 May 2024 15:40:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Já existe produto com esse nome"
} 
 </msg>
<msg timestamp="20240518 12:40:12.298" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.288" endtime="20240518 12:40:12.298"/>
</kw>
<msg timestamp="20240518 12:40:12.298" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.288" endtime="20240518 12:40:12.298"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.298" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.298" endtime="20240518 12:40:12.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.299" level="INFO">{'message': 'Já existe produto com esse nome'}</msg>
<status status="PASS" starttime="20240518 12:40:12.298" endtime="20240518 12:40:12.299"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.274" endtime="20240518 12:40:12.299"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>400</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240518 12:40:12.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.299" endtime="20240518 12:40:12.300"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.299" endtime="20240518 12:40:12.300"/>
</kw>
<kw name="E verificar a mensagem de validação" library="post_produtos">
<arg>Já existe produto com esse nome</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[message]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240518 12:40:12.301" endtime="20240518 12:40:12.301"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.300" endtime="20240518 12:40:12.302"/>
</kw>
<kw name="Excluir produto por nome" library="services">
<arg>Testes Robot 10</arg>
<kw name="Get in" library="services">
<var>${getResposta}</var>
<arg>/produtos/?nome=${parametros}</arg>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>headers=${headersLogin}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240518 12:40:12.308" level="INFO">GET Request : url=http://localhost:3000/produtos/?nome=Testes%20Robot%2010 
 path_url=/produtos/?nome=Testes%20Robot%2010 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20240518 12:40:12.308" level="INFO">GET Response : url=http://localhost:3000/produtos/?nome=Testes%20Robot%2010 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '6127e717-41af-4c53-b747-cbaab9ccaddd', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '249', 'Date': 'Sat, 18 May 2024 15:40:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 1,
    "produtos": [
        {
            "nome": "Testes Robot 10",
            "preco": 1010,
            "descricao": "Teste Automation",
            "quantidade": 1049,
            "_id": "Owv9eXY6j1Dnycr1"
        }
    ]
} 
 </msg>
<msg timestamp="20240518 12:40:12.308" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.303" endtime="20240518 12:40:12.308"/>
</kw>
<msg timestamp="20240518 12:40:12.309" level="INFO">${getResposta} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.303" endtime="20240518 12:40:12.309"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${id}</var>
<arg>${getResposta.json()}[produtos][0][_id]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240518 12:40:12.311" level="INFO">${id} = Owv9eXY6j1Dnycr1</msg>
<status status="PASS" starttime="20240518 12:40:12.309" endtime="20240518 12:40:12.311"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.312" level="INFO">${id} = Owv9eXY6j1Dnycr1</msg>
<status status="PASS" starttime="20240518 12:40:12.311" endtime="20240518 12:40:12.312"/>
</kw>
<kw name="Delete in" library="services">
<var>${RESPOSTA_DEL}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${id}</arg>
<kw name="DELETE" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a DELETE request.</doc>
<msg timestamp="20240518 12:40:12.317" level="INFO">DELETE Request : url=http://localhost:3000/produtos/Owv9eXY6j1Dnycr1 
 path_url=/produtos/Owv9eXY6j1Dnycr1 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPvnMrL9bH_2bqpOyTA8wvVlc', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20240518 12:40:12.317" level="INFO">DELETE Response : url=http://localhost:3000/produtos/Owv9eXY6j1Dnycr1 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '8cd88de7-be30-4173-93cd-4635d344d2db', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '51', 'Date': 'Sat, 18 May 2024 15:40:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20240518 12:40:12.318" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.312" endtime="20240518 12:40:12.318"/>
</kw>
<msg timestamp="20240518 12:40:12.318" level="INFO">${RESPOSTA_DEL} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.312" endtime="20240518 12:40:12.318"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.302" endtime="20240518 12:40:12.318"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.270" endtime="20240518 12:40:12.318"/>
</test>
<test id="s1-s4-t3" name="Validar o campo Nome em Branco" line="23">
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>${EMPTY}</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>1049</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240518 12:40:12.321" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240518 12:40:12.321" endtime="20240518 12:40:12.321"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.321" endtime="20240518 12:40:12.322"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.321" endtime="20240518 12:40:12.322"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.322" endtime="20240518 12:40:12.322"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.322" endtime="20240518 12:40:12.322"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.322" endtime="20240518 12:40:12.323"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.322" endtime="20240518 12:40:12.323"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.323" endtime="20240518 12:40:12.323"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.323" endtime="20240518 12:40:12.323"/>
</kw>
<msg timestamp="20240518 12:40:12.323" level="INFO">${bodyPostProd} = {'nome': '', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240518 12:40:12.320" endtime="20240518 12:40:12.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.323" level="INFO">{'nome': '', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240518 12:40:12.323" endtime="20240518 12:40:12.323"/>
</kw>
<kw name="HeadersAuth" library="services">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240518 12:40:12.324" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPv...</msg>
<status status="PASS" starttime="20240518 12:40:12.324" endtime="20240518 12:40:12.324"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.324" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPv...</msg>
<status status="PASS" starttime="20240518 12:40:12.324" endtime="20240518 12:40:12.324"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.324" endtime="20240518 12:40:12.325"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240518 12:40:12.350" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPvnMrL9bH_2bqpOyTA8wvVlc', 'Content-Length': '84', 'Content-Type': 'application/json'} 
 body=b'{"nome": "", "preco": "1010", "descricao": "Teste Automation", "quantidade": "1049"}' 
 </msg>
<msg timestamp="20240518 12:40:12.350" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '476458cc-bf77-491d-abfe-b0dd36cc8aa9', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '48', 'Date': 'Sat, 18 May 2024 15:40:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "nome": "nome não pode ficar em branco"
} 
 </msg>
<msg timestamp="20240518 12:40:12.350" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.326" endtime="20240518 12:40:12.350"/>
</kw>
<msg timestamp="20240518 12:40:12.351" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.325" endtime="20240518 12:40:12.351"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.352" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.351" endtime="20240518 12:40:12.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.352" level="INFO">{'nome': 'nome não pode ficar em branco'}</msg>
<status status="PASS" starttime="20240518 12:40:12.352" endtime="20240518 12:40:12.352"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.319" endtime="20240518 12:40:12.353"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>400</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240518 12:40:12.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.353" endtime="20240518 12:40:12.354"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.353" endtime="20240518 12:40:12.354"/>
</kw>
<kw name="E verificar a mensagem de validação do campo" library="post_produtos">
<arg>nome</arg>
<arg>nome não pode ficar em branco</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[${campo}]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240518 12:40:12.354" endtime="20240518 12:40:12.354"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.354" endtime="20240518 12:40:12.354"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.319" endtime="20240518 12:40:12.355"/>
</test>
<test id="s1-s4-t4" name="Validar o campo Nome Obrigatório" line="28">
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>None</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>1049</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240518 12:40:12.357" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240518 12:40:12.357" endtime="20240518 12:40:12.357"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240518 12:40:12.357" endtime="20240518 12:40:12.357"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.357" endtime="20240518 12:40:12.358"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.357" endtime="20240518 12:40:12.358"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.358" endtime="20240518 12:40:12.358"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.358" endtime="20240518 12:40:12.358"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.359" endtime="20240518 12:40:12.360"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.359" endtime="20240518 12:40:12.360"/>
</kw>
<msg timestamp="20240518 12:40:12.360" level="INFO">${bodyPostProd} = {'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240518 12:40:12.356" endtime="20240518 12:40:12.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.361" level="INFO">{'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240518 12:40:12.360" endtime="20240518 12:40:12.361"/>
</kw>
<kw name="HeadersAuth" library="services">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240518 12:40:12.362" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPv...</msg>
<status status="PASS" starttime="20240518 12:40:12.361" endtime="20240518 12:40:12.362"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.362" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPv...</msg>
<status status="PASS" starttime="20240518 12:40:12.362" endtime="20240518 12:40:12.362"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.361" endtime="20240518 12:40:12.362"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240518 12:40:12.366" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPvnMrL9bH_2bqpOyTA8wvVlc', 'Content-Length': '72', 'Content-Type': 'application/json'} 
 body=b'{"preco": "1010", "descricao": "Teste Automation", "quantidade": "1049"}' 
 </msg>
<msg timestamp="20240518 12:40:12.366" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'd685336d-5a88-416f-a030-16a28113ec60', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '38', 'Date': 'Sat, 18 May 2024 15:40:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "nome": "nome é obrigatório"
} 
 </msg>
<msg timestamp="20240518 12:40:12.366" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.362" endtime="20240518 12:40:12.366"/>
</kw>
<msg timestamp="20240518 12:40:12.366" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.362" endtime="20240518 12:40:12.366"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.366" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.366" endtime="20240518 12:40:12.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.367" level="INFO">{'nome': 'nome é obrigatório'}</msg>
<status status="PASS" starttime="20240518 12:40:12.366" endtime="20240518 12:40:12.367"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.356" endtime="20240518 12:40:12.367"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>400</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240518 12:40:12.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.368" endtime="20240518 12:40:12.368"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.368" endtime="20240518 12:40:12.368"/>
</kw>
<kw name="E verificar a mensagem de validação do campo" library="post_produtos">
<arg>nome</arg>
<arg>nome é obrigatório</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[${campo}]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240518 12:40:12.369" endtime="20240518 12:40:12.369"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.369" endtime="20240518 12:40:12.369"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.356" endtime="20240518 12:40:12.370"/>
</test>
<test id="s1-s4-t5" name="Validar o campo Preço em Branco" line="33">
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>nome</arg>
<arg>${EMPTY}</arg>
<arg>descricao</arg>
<arg>quantidade</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240518 12:40:12.372" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240518 12:40:12.372" endtime="20240518 12:40:12.372"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.372" endtime="20240518 12:40:12.372"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.372" endtime="20240518 12:40:12.372"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.372" endtime="20240518 12:40:12.372"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.372" endtime="20240518 12:40:12.372"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.374" endtime="20240518 12:40:12.374"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.372" endtime="20240518 12:40:12.374"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.374" endtime="20240518 12:40:12.374"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.374" endtime="20240518 12:40:12.374"/>
</kw>
<msg timestamp="20240518 12:40:12.374" level="INFO">${bodyPostProd} = {'nome': 'nome', 'preco': '', 'descricao': 'descricao', 'quantidade': 'quantidade'}</msg>
<status status="PASS" starttime="20240518 12:40:12.371" endtime="20240518 12:40:12.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.375" level="INFO">{'nome': 'nome', 'preco': '', 'descricao': 'descricao', 'quantidade': 'quantidade'}</msg>
<status status="PASS" starttime="20240518 12:40:12.374" endtime="20240518 12:40:12.375"/>
</kw>
<kw name="HeadersAuth" library="services">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240518 12:40:12.375" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPv...</msg>
<status status="PASS" starttime="20240518 12:40:12.375" endtime="20240518 12:40:12.375"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.376" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPv...</msg>
<status status="PASS" starttime="20240518 12:40:12.376" endtime="20240518 12:40:12.376"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.375" endtime="20240518 12:40:12.376"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240518 12:40:12.381" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPvnMrL9bH_2bqpOyTA8wvVlc', 'Content-Length': '83', 'Content-Type': 'application/json'} 
 body=b'{"nome": "nome", "preco": "", "descricao": "descricao", "quantidade": "quantidade"}' 
 </msg>
<msg timestamp="20240518 12:40:12.381" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'df04b085-5f62-4446-88e2-5576b3485a22', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '96', 'Date': 'Sat, 18 May 2024 15:40:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "preco": "preco deve ser um número",
    "quantidade": "quantidade deve ser um número"
} 
 </msg>
<msg timestamp="20240518 12:40:12.381" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.377" endtime="20240518 12:40:12.381"/>
</kw>
<msg timestamp="20240518 12:40:12.381" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.376" endtime="20240518 12:40:12.381"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.382" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.382" endtime="20240518 12:40:12.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.383" level="INFO">{'preco': 'preco deve ser um número', 'quantidade': 'quantidade deve ser um número'}</msg>
<status status="PASS" starttime="20240518 12:40:12.382" endtime="20240518 12:40:12.383"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.371" endtime="20240518 12:40:12.383"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>400</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240518 12:40:12.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.383" endtime="20240518 12:40:12.384"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.383" endtime="20240518 12:40:12.384"/>
</kw>
<kw name="E verificar a mensagem de validação do campo" library="post_produtos">
<arg>preco</arg>
<arg>preco deve ser um número</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[${campo}]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240518 12:40:12.385" endtime="20240518 12:40:12.385"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.385" endtime="20240518 12:40:12.385"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.370" endtime="20240518 12:40:12.386"/>
</test>
<test id="s1-s4-t6" name="Validar o campo Preço Obrigatório" line="38">
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>nome</arg>
<arg>None</arg>
<arg>descricao</arg>
<arg>quantidade</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240518 12:40:12.388" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240518 12:40:12.387" endtime="20240518 12:40:12.388"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.388" endtime="20240518 12:40:12.388"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.388" endtime="20240518 12:40:12.388"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240518 12:40:12.388" endtime="20240518 12:40:12.388"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.389" endtime="20240518 12:40:12.389"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.388" endtime="20240518 12:40:12.389"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.389" endtime="20240518 12:40:12.389"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.389" endtime="20240518 12:40:12.389"/>
</kw>
<msg timestamp="20240518 12:40:12.389" level="INFO">${bodyPostProd} = {'nome': 'nome', 'descricao': 'descricao', 'quantidade': 'quantidade'}</msg>
<status status="PASS" starttime="20240518 12:40:12.387" endtime="20240518 12:40:12.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.389" level="INFO">{'nome': 'nome', 'descricao': 'descricao', 'quantidade': 'quantidade'}</msg>
<status status="PASS" starttime="20240518 12:40:12.389" endtime="20240518 12:40:12.389"/>
</kw>
<kw name="HeadersAuth" library="services">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240518 12:40:12.390" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPv...</msg>
<status status="PASS" starttime="20240518 12:40:12.390" endtime="20240518 12:40:12.390"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.390" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPv...</msg>
<status status="PASS" starttime="20240518 12:40:12.390" endtime="20240518 12:40:12.390"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.390" endtime="20240518 12:40:12.390"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240518 12:40:12.398" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPvnMrL9bH_2bqpOyTA8wvVlc', 'Content-Length': '70', 'Content-Type': 'application/json'} 
 body=b'{"nome": "nome", "descricao": "descricao", "quantidade": "quantidade"}' 
 </msg>
<msg timestamp="20240518 12:40:12.398" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'd8a51438-b4cd-407b-b6ca-1311caf12403', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '92', 'Date': 'Sat, 18 May 2024 15:40:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "preco": "preco é obrigatório",
    "quantidade": "quantidade deve ser um número"
} 
 </msg>
<msg timestamp="20240518 12:40:12.398" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.390" endtime="20240518 12:40:12.398"/>
</kw>
<msg timestamp="20240518 12:40:12.398" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.390" endtime="20240518 12:40:12.398"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.398" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.398" endtime="20240518 12:40:12.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.399" level="INFO">{'preco': 'preco é obrigatório', 'quantidade': 'quantidade deve ser um número'}</msg>
<status status="PASS" starttime="20240518 12:40:12.398" endtime="20240518 12:40:12.399"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.387" endtime="20240518 12:40:12.399"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>400</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240518 12:40:12.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.400" endtime="20240518 12:40:12.401"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.400" endtime="20240518 12:40:12.401"/>
</kw>
<kw name="E verificar a mensagem de validação do campo" library="post_produtos">
<arg>preco</arg>
<arg>preco é obrigatório</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[${campo}]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240518 12:40:12.401" endtime="20240518 12:40:12.402"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.401" endtime="20240518 12:40:12.402"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.386" endtime="20240518 12:40:12.402"/>
</test>
<test id="s1-s4-t7" name="Validar o campo Descrição em Branco" line="43">
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>nome</arg>
<arg>preco</arg>
<arg>${EMPTY}</arg>
<arg>quantidade</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240518 12:40:12.404" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240518 12:40:12.404" endtime="20240518 12:40:12.404"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.404" endtime="20240518 12:40:12.405"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.404" endtime="20240518 12:40:12.405"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.405" endtime="20240518 12:40:12.405"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.405" endtime="20240518 12:40:12.405"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.405" endtime="20240518 12:40:12.405"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.405" endtime="20240518 12:40:12.405"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.406" endtime="20240518 12:40:12.406"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.406" endtime="20240518 12:40:12.406"/>
</kw>
<msg timestamp="20240518 12:40:12.406" level="INFO">${bodyPostProd} = {'nome': 'nome', 'preco': 'preco', 'descricao': '', 'quantidade': 'quantidade'}</msg>
<status status="PASS" starttime="20240518 12:40:12.403" endtime="20240518 12:40:12.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.406" level="INFO">{'nome': 'nome', 'preco': 'preco', 'descricao': '', 'quantidade': 'quantidade'}</msg>
<status status="PASS" starttime="20240518 12:40:12.406" endtime="20240518 12:40:12.406"/>
</kw>
<kw name="HeadersAuth" library="services">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240518 12:40:12.407" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPv...</msg>
<status status="PASS" starttime="20240518 12:40:12.406" endtime="20240518 12:40:12.407"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.407" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPv...</msg>
<status status="PASS" starttime="20240518 12:40:12.407" endtime="20240518 12:40:12.407"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.406" endtime="20240518 12:40:12.407"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240518 12:40:12.412" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPvnMrL9bH_2bqpOyTA8wvVlc', 'Content-Length': '79', 'Content-Type': 'application/json'} 
 body=b'{"nome": "nome", "preco": "preco", "descricao": "", "quantidade": "quantidade"}' 
 </msg>
<msg timestamp="20240518 12:40:12.412" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '896de754-b19a-40cb-ab0d-8b958ff546cd', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '152', 'Date': 'Sat, 18 May 2024 15:40:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "preco": "preco deve ser um número",
    "descricao": "descricao não pode ficar em branco",
    "quantidade": "quantidade deve ser um número"
} 
 </msg>
<msg timestamp="20240518 12:40:12.413" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.407" endtime="20240518 12:40:12.413"/>
</kw>
<msg timestamp="20240518 12:40:12.413" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.407" endtime="20240518 12:40:12.413"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.413" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.413" endtime="20240518 12:40:12.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.413" level="INFO">{'preco': 'preco deve ser um número', 'descricao': 'descricao não pode ficar em branco', 'quantidade': 'quantidade deve ser um número'}</msg>
<status status="PASS" starttime="20240518 12:40:12.413" endtime="20240518 12:40:12.414"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.403" endtime="20240518 12:40:12.414"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>400</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240518 12:40:12.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.414" endtime="20240518 12:40:12.414"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.414" endtime="20240518 12:40:12.414"/>
</kw>
<kw name="E verificar a mensagem de validação do campo" library="post_produtos">
<arg>descricao</arg>
<arg>descricao não pode ficar em branco</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[${campo}]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240518 12:40:12.415" endtime="20240518 12:40:12.416"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.415" endtime="20240518 12:40:12.416"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.403" endtime="20240518 12:40:12.416"/>
</test>
<test id="s1-s4-t8" name="Validar o campo Descrição Obrigatório" line="48">
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>nome</arg>
<arg>preco</arg>
<arg>None</arg>
<arg>quantidade</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240518 12:40:12.418" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240518 12:40:12.418" endtime="20240518 12:40:12.418"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.418" endtime="20240518 12:40:12.418"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.418" endtime="20240518 12:40:12.418"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.418" endtime="20240518 12:40:12.418"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.418" endtime="20240518 12:40:12.419"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240518 12:40:12.419" endtime="20240518 12:40:12.419"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.419" endtime="20240518 12:40:12.419"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.419" endtime="20240518 12:40:12.419"/>
</kw>
<msg timestamp="20240518 12:40:12.419" level="INFO">${bodyPostProd} = {'nome': 'nome', 'preco': 'preco', 'quantidade': 'quantidade'}</msg>
<status status="PASS" starttime="20240518 12:40:12.417" endtime="20240518 12:40:12.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.419" level="INFO">{'nome': 'nome', 'preco': 'preco', 'quantidade': 'quantidade'}</msg>
<status status="PASS" starttime="20240518 12:40:12.419" endtime="20240518 12:40:12.419"/>
</kw>
<kw name="HeadersAuth" library="services">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240518 12:40:12.420" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPv...</msg>
<status status="PASS" starttime="20240518 12:40:12.420" endtime="20240518 12:40:12.420"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.420" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPv...</msg>
<status status="PASS" starttime="20240518 12:40:12.420" endtime="20240518 12:40:12.420"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.419" endtime="20240518 12:40:12.420"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240518 12:40:12.423" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPvnMrL9bH_2bqpOyTA8wvVlc', 'Content-Length': '62', 'Content-Type': 'application/json'} 
 body=b'{"nome": "nome", "preco": "preco", "quantidade": "quantidade"}' 
 </msg>
<msg timestamp="20240518 12:40:12.423" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f45507c0-9601-4ef8-b6a7-03c76dbff353', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '142', 'Date': 'Sat, 18 May 2024 15:40:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "preco": "preco deve ser um número",
    "descricao": "descricao é obrigatório",
    "quantidade": "quantidade deve ser um número"
} 
 </msg>
<msg timestamp="20240518 12:40:12.424" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.420" endtime="20240518 12:40:12.424"/>
</kw>
<msg timestamp="20240518 12:40:12.424" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.420" endtime="20240518 12:40:12.424"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.424" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.424" endtime="20240518 12:40:12.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.424" level="INFO">{'preco': 'preco deve ser um número', 'descricao': 'descricao é obrigatório', 'quantidade': 'quantidade deve ser um número'}</msg>
<status status="PASS" starttime="20240518 12:40:12.424" endtime="20240518 12:40:12.424"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.417" endtime="20240518 12:40:12.424"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>400</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240518 12:40:12.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.425" endtime="20240518 12:40:12.426"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.425" endtime="20240518 12:40:12.426"/>
</kw>
<kw name="E verificar a mensagem de validação do campo" library="post_produtos">
<arg>descricao</arg>
<arg>descricao é obrigatório</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[${campo}]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240518 12:40:12.427" endtime="20240518 12:40:12.427"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.427" endtime="20240518 12:40:12.427"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.417" endtime="20240518 12:40:12.428"/>
</test>
<test id="s1-s4-t9" name="Validar o campo Quantidade em Branco" line="53">
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>nome</arg>
<arg>preco</arg>
<arg>descricao</arg>
<arg>${EMPTY}</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240518 12:40:12.430" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240518 12:40:12.430" endtime="20240518 12:40:12.430"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.430" endtime="20240518 12:40:12.430"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.430" endtime="20240518 12:40:12.430"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.431" endtime="20240518 12:40:12.431"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.430" endtime="20240518 12:40:12.431"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.431" endtime="20240518 12:40:12.431"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.431" endtime="20240518 12:40:12.431"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.431" endtime="20240518 12:40:12.432"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.431" endtime="20240518 12:40:12.432"/>
</kw>
<msg timestamp="20240518 12:40:12.432" level="INFO">${bodyPostProd} = {'nome': 'nome', 'preco': 'preco', 'descricao': 'descricao', 'quantidade': ''}</msg>
<status status="PASS" starttime="20240518 12:40:12.429" endtime="20240518 12:40:12.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.432" level="INFO">{'nome': 'nome', 'preco': 'preco', 'descricao': 'descricao', 'quantidade': ''}</msg>
<status status="PASS" starttime="20240518 12:40:12.432" endtime="20240518 12:40:12.432"/>
</kw>
<kw name="HeadersAuth" library="services">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240518 12:40:12.432" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPv...</msg>
<status status="PASS" starttime="20240518 12:40:12.432" endtime="20240518 12:40:12.432"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.432" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPv...</msg>
<status status="PASS" starttime="20240518 12:40:12.432" endtime="20240518 12:40:12.432"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.432" endtime="20240518 12:40:12.433"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240518 12:40:12.436" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPvnMrL9bH_2bqpOyTA8wvVlc', 'Content-Length': '78', 'Content-Type': 'application/json'} 
 body=b'{"nome": "nome", "preco": "preco", "descricao": "descricao", "quantidade": ""}' 
 </msg>
<msg timestamp="20240518 12:40:12.436" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '30b600a4-87e4-4a5d-92c6-967ec84e7725', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '96', 'Date': 'Sat, 18 May 2024 15:40:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "preco": "preco deve ser um número",
    "quantidade": "quantidade deve ser um número"
} 
 </msg>
<msg timestamp="20240518 12:40:12.436" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.433" endtime="20240518 12:40:12.436"/>
</kw>
<msg timestamp="20240518 12:40:12.436" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.433" endtime="20240518 12:40:12.436"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.437" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.436" endtime="20240518 12:40:12.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.437" level="INFO">{'preco': 'preco deve ser um número', 'quantidade': 'quantidade deve ser um número'}</msg>
<status status="PASS" starttime="20240518 12:40:12.437" endtime="20240518 12:40:12.437"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.429" endtime="20240518 12:40:12.437"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>400</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240518 12:40:12.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.438" endtime="20240518 12:40:12.439"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.438" endtime="20240518 12:40:12.439"/>
</kw>
<kw name="E verificar a mensagem de validação do campo" library="post_produtos">
<arg>quantidade</arg>
<arg>quantidade deve ser um número</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[${campo}]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240518 12:40:12.439" endtime="20240518 12:40:12.440"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.439" endtime="20240518 12:40:12.440"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.428" endtime="20240518 12:40:12.440"/>
</test>
<test id="s1-s4-t10" name="Validar o campo Quantidade Obrigatório" line="58">
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>nome</arg>
<arg>preco</arg>
<arg>descricao</arg>
<arg>None</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240518 12:40:12.443" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240518 12:40:12.443" endtime="20240518 12:40:12.443"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.444" endtime="20240518 12:40:12.444"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.443" endtime="20240518 12:40:12.444"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.445" endtime="20240518 12:40:12.446"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.445" endtime="20240518 12:40:12.446"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.446" endtime="20240518 12:40:12.446"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.446" endtime="20240518 12:40:12.446"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240518 12:40:12.446" endtime="20240518 12:40:12.447"/>
</kw>
<msg timestamp="20240518 12:40:12.447" level="INFO">${bodyPostProd} = {'nome': 'nome', 'preco': 'preco', 'descricao': 'descricao'}</msg>
<status status="PASS" starttime="20240518 12:40:12.442" endtime="20240518 12:40:12.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.447" level="INFO">{'nome': 'nome', 'preco': 'preco', 'descricao': 'descricao'}</msg>
<status status="PASS" starttime="20240518 12:40:12.447" endtime="20240518 12:40:12.447"/>
</kw>
<kw name="HeadersAuth" library="services">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240518 12:40:12.448" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPv...</msg>
<status status="PASS" starttime="20240518 12:40:12.448" endtime="20240518 12:40:12.448"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.448" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPv...</msg>
<status status="PASS" starttime="20240518 12:40:12.448" endtime="20240518 12:40:12.448"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.447" endtime="20240518 12:40:12.448"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240518 12:40:12.455" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPvnMrL9bH_2bqpOyTA8wvVlc', 'Content-Length': '60', 'Content-Type': 'application/json'} 
 body=b'{"nome": "nome", "preco": "preco", "descricao": "descricao"}' 
 </msg>
<msg timestamp="20240518 12:40:12.455" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'd6cc7ce2-b066-4198-b084-97bbc16e9624', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '92', 'Date': 'Sat, 18 May 2024 15:40:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "preco": "preco deve ser um número",
    "quantidade": "quantidade é obrigatório"
} 
 </msg>
<msg timestamp="20240518 12:40:12.455" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.449" endtime="20240518 12:40:12.455"/>
</kw>
<msg timestamp="20240518 12:40:12.455" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.448" endtime="20240518 12:40:12.455"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.456" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.455" endtime="20240518 12:40:12.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.456" level="INFO">{'preco': 'preco deve ser um número', 'quantidade': 'quantidade é obrigatório'}</msg>
<status status="PASS" starttime="20240518 12:40:12.456" endtime="20240518 12:40:12.456"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.442" endtime="20240518 12:40:12.456"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>400</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240518 12:40:12.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.461" endtime="20240518 12:40:12.462"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.460" endtime="20240518 12:40:12.462"/>
</kw>
<kw name="E verificar a mensagem de validação do campo" library="post_produtos">
<arg>quantidade</arg>
<arg>quantidade é obrigatório</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[${campo}]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240518 12:40:12.467" endtime="20240518 12:40:12.468"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.467" endtime="20240518 12:40:12.468"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.441" endtime="20240518 12:40:12.476"/>
</test>
<doc>Documentacao do POST da API: ServeRest</doc>
<status status="PASS" starttime="20240518 12:40:12.216" endtime="20240518 12:40:12.509"/>
</suite>
<suite id="s1-s5" name="Put Produtos" source="C:\ProjetosC\serveRest-robot\Features\put_produtos.robot">
<kw name="Token" library="services" type="SETUP">
<kw name="Conectar a API" library="services">
<arg>/login</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>apiServeRest</arg>
<arg>${base_url}</arg>
<arg>${headersLogin}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20240518 12:40:12.593" level="INFO">Creating Session using : alias=apiServeRest, url=http://localhost:3000, headers={'accept': 'application/json', 'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20240518 12:40:12.593" endtime="20240518 12:40:12.594"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.593" endtime="20240518 12:40:12.594"/>
</kw>
<kw name="Quando entrar com usuario e senha" library="login">
<kw name="Post in" library="services">
<var>${RESPOSTA}</var>
<arg>/login</arg>
<arg>${bodyLOGIN}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headersLogin}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240518 12:40:12.633" level="INFO">POST Request : url=http://localhost:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '55'} 
 body=b'{"email": "Joseaugusto10@qa.com", "password": "051049"}' 
 </msg>
<msg timestamp="20240518 12:40:12.633" level="INFO">POST Response : url=http://localhost:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'f9207e08-c0e2-401a-af9f-3d4cc6d87cd6', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '276', 'Date': 'Sat, 18 May 2024 15:40:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPvnMrL9bH_2bqpOyTA8wvVlc"
} 
 </msg>
<msg timestamp="20240518 12:40:12.634" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.594" endtime="20240518 12:40:12.634"/>
</kw>
<msg timestamp="20240518 12:40:12.634" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.594" endtime="20240518 12:40:12.634"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${token}</var>
<arg>${RESPOSTA.json()}[authorization]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240518 12:40:12.635" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPvnMrL9bH_2bqpOyTA8wv...</msg>
<status status="PASS" starttime="20240518 12:40:12.634" endtime="20240518 12:40:12.635"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${token}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240518 12:40:12.636" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPvnMrL9bH_2bqpOyTA8wv...</msg>
<status status="PASS" starttime="20240518 12:40:12.635" endtime="20240518 12:40:12.636"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240518 12:40:12.636" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.636" endtime="20240518 12:40:12.636"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.594" endtime="20240518 12:40:12.636"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.593" endtime="20240518 12:40:12.660"/>
</kw>
<test id="s1-s5-t1" name="Atualizar um produto com sucesso" line="9">
<kw name="Fakers" library="Utils">
<kw name="Name" library="FakerLibrary">
<var>${FakeNome}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20240518 12:40:12.662" level="INFO">${FakeNome} = Evelyn Hammond</msg>
<status status="PASS" starttime="20240518 12:40:12.662" endtime="20240518 12:40:12.662"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeNome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.663" level="INFO">${FakeNome} = Evelyn Hammond</msg>
<status status="PASS" starttime="20240518 12:40:12.663" endtime="20240518 12:40:12.663"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${FakeEmail}</var>
<msg timestamp="20240518 12:40:12.664" level="INFO">${FakeEmail} = andredennis@example.com</msg>
<status status="PASS" starttime="20240518 12:40:12.663" endtime="20240518 12:40:12.664"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeEmail}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.667" level="INFO">${FakeEmail} = andredennis@example.com</msg>
<status status="PASS" starttime="20240518 12:40:12.664" endtime="20240518 12:40:12.667"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${compSenha}</var>
<arg>text=##</arg>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240518 12:40:12.668" level="INFO">${compSenha} = 87</msg>
<status status="PASS" starttime="20240518 12:40:12.667" endtime="20240518 12:40:12.668"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${FakeSenha}</var>
<arg>Seubarriga</arg>
<arg>${compSenha}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240518 12:40:12.668" level="INFO">${FakeSenha} = Seubarriga 87</msg>
<status status="PASS" starttime="20240518 12:40:12.668" endtime="20240518 12:40:12.668"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeSenha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.669" level="INFO">${FakeSenha} = Seubarriga 87</msg>
<status status="PASS" starttime="20240518 12:40:12.669" endtime="20240518 12:40:12.669"/>
</kw>
<kw name="Sentence" library="FakerLibrary">
<var>${FakerDescricao}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20240518 12:40:12.669" level="INFO">${FakerDescricao} = Least parent late order cell.</msg>
<status status="PASS" starttime="20240518 12:40:12.669" endtime="20240518 12:40:12.669"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerDescricao}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.670" level="INFO">${FakerDescricao} = Least parent late order cell.</msg>
<status status="PASS" starttime="20240518 12:40:12.669" endtime="20240518 12:40:12.670"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${FakerValor}</var>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240518 12:40:12.671" level="INFO">${FakerValor} = 120</msg>
<status status="PASS" starttime="20240518 12:40:12.670" endtime="20240518 12:40:12.671"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerValor}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.671" level="INFO">${FakerValor} = 120</msg>
<status status="PASS" starttime="20240518 12:40:12.671" endtime="20240518 12:40:12.671"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.661" endtime="20240518 12:40:12.671"/>
</kw>
<kw name="Dado que tenha uma massa configurada" library="delete_produtos">
<kw name="Cadastro produtos com sucesso" library="services">
<kw name="Fakers" library="Utils">
<kw name="Name" library="FakerLibrary">
<var>${FakeNome}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20240518 12:40:12.672" level="INFO">${FakeNome} = Tonya Reyes DDS</msg>
<status status="PASS" starttime="20240518 12:40:12.672" endtime="20240518 12:40:12.672"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeNome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.673" level="INFO">${FakeNome} = Tonya Reyes DDS</msg>
<status status="PASS" starttime="20240518 12:40:12.673" endtime="20240518 12:40:12.673"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${FakeEmail}</var>
<msg timestamp="20240518 12:40:12.673" level="INFO">${FakeEmail} = kingmegan@example.org</msg>
<status status="PASS" starttime="20240518 12:40:12.673" endtime="20240518 12:40:12.673"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeEmail}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.673" level="INFO">${FakeEmail} = kingmegan@example.org</msg>
<status status="PASS" starttime="20240518 12:40:12.673" endtime="20240518 12:40:12.673"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${compSenha}</var>
<arg>text=##</arg>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240518 12:40:12.674" level="INFO">${compSenha} = 89</msg>
<status status="PASS" starttime="20240518 12:40:12.673" endtime="20240518 12:40:12.674"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${FakeSenha}</var>
<arg>Seubarriga</arg>
<arg>${compSenha}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240518 12:40:12.674" level="INFO">${FakeSenha} = Seubarriga 89</msg>
<status status="PASS" starttime="20240518 12:40:12.674" endtime="20240518 12:40:12.674"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeSenha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.674" level="INFO">${FakeSenha} = Seubarriga 89</msg>
<status status="PASS" starttime="20240518 12:40:12.674" endtime="20240518 12:40:12.674"/>
</kw>
<kw name="Sentence" library="FakerLibrary">
<var>${FakerDescricao}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20240518 12:40:12.674" level="INFO">${FakerDescricao} = East analysis put board consider southern.</msg>
<status status="PASS" starttime="20240518 12:40:12.674" endtime="20240518 12:40:12.674"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerDescricao}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.674" level="INFO">${FakerDescricao} = East analysis put board consider southern.</msg>
<status status="PASS" starttime="20240518 12:40:12.674" endtime="20240518 12:40:12.674"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${FakerValor}</var>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240518 12:40:12.675" level="INFO">${FakerValor} = 798</msg>
<status status="PASS" starttime="20240518 12:40:12.674" endtime="20240518 12:40:12.675"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerValor}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.675" level="INFO">${FakerValor} = 798</msg>
<status status="PASS" starttime="20240518 12:40:12.675" endtime="20240518 12:40:12.675"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.672" endtime="20240518 12:40:12.675"/>
</kw>
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>${FakeNome}${FakerValor}</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>1049</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240518 12:40:12.677" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240518 12:40:12.677" endtime="20240518 12:40:12.677"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.677" endtime="20240518 12:40:12.677"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.677" endtime="20240518 12:40:12.678"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.678" endtime="20240518 12:40:12.678"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.678" endtime="20240518 12:40:12.678"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.679" endtime="20240518 12:40:12.679"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.678" endtime="20240518 12:40:12.679"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.679" endtime="20240518 12:40:12.679"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.679" endtime="20240518 12:40:12.679"/>
</kw>
<msg timestamp="20240518 12:40:12.679" level="INFO">${bodyPostProd} = {'nome': 'Tonya Reyes DDS798', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240518 12:40:12.676" endtime="20240518 12:40:12.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.680" level="INFO">{'nome': 'Tonya Reyes DDS798', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240518 12:40:12.680" endtime="20240518 12:40:12.680"/>
</kw>
<kw name="HeadersAuth" library="services">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240518 12:40:12.680" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPv...</msg>
<status status="PASS" starttime="20240518 12:40:12.680" endtime="20240518 12:40:12.680"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.680" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPv...</msg>
<status status="PASS" starttime="20240518 12:40:12.680" endtime="20240518 12:40:12.681"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.680" endtime="20240518 12:40:12.681"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240518 12:40:12.688" level="INFO">POST Request : url=http://localhost:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPvnMrL9bH_2bqpOyTA8wvVlc', 'Content-Length': '102', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Tonya Reyes DDS798", "preco": "1010", "descricao": "Teste Automation", "quantidade": "1049"}' 
 </msg>
<msg timestamp="20240518 12:40:12.688" level="INFO">POST Response : url=http://localhost:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'cce0dec6-f886-4873-9e90-b28e5975d665', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Sat, 18 May 2024 15:40:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "N8u1MDzu17vzZOiO"
} 
 </msg>
<msg timestamp="20240518 12:40:12.688" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.681" endtime="20240518 12:40:12.688"/>
</kw>
<msg timestamp="20240518 12:40:12.688" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.681" endtime="20240518 12:40:12.688"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.689" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.688" endtime="20240518 12:40:12.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.690" level="INFO">{'message': 'Cadastro realizado com sucesso', '_id': 'N8u1MDzu17vzZOiO'}</msg>
<status status="PASS" starttime="20240518 12:40:12.689" endtime="20240518 12:40:12.690"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.675" endtime="20240518 12:40:12.690"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<arg>${RESPOSTA.json()}[_id]</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.692" level="INFO">${id} = N8u1MDzu17vzZOiO</msg>
<status status="PASS" starttime="20240518 12:40:12.690" endtime="20240518 12:40:12.692"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.672" endtime="20240518 12:40:12.692"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.671" endtime="20240518 12:40:12.692"/>
</kw>
<kw name="Quando enviar uma requisição Put" library="put_produtos">
<arg>${FakeNome}${FakerValor}</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>${FakerValor}</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240518 12:40:12.697" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240518 12:40:12.697" endtime="20240518 12:40:12.697"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.698" endtime="20240518 12:40:12.699"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.698" endtime="20240518 12:40:12.699"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.700" endtime="20240518 12:40:12.700"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.699" endtime="20240518 12:40:12.700"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.701" endtime="20240518 12:40:12.701"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.700" endtime="20240518 12:40:12.701"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240518 12:40:12.701" endtime="20240518 12:40:12.702"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.701" endtime="20240518 12:40:12.702"/>
</kw>
<msg timestamp="20240518 12:40:12.702" level="INFO">${bodyPostProd} = {'nome': 'Tonya Reyes DDS798', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '798'}</msg>
<status status="PASS" starttime="20240518 12:40:12.696" endtime="20240518 12:40:12.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.702" level="INFO">{'nome': 'Tonya Reyes DDS798', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '798'}</msg>
<status status="PASS" starttime="20240518 12:40:12.702" endtime="20240518 12:40:12.702"/>
</kw>
<kw name="HeadersAuth" library="services">
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240518 12:40:12.703" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPv...</msg>
<status status="PASS" starttime="20240518 12:40:12.703" endtime="20240518 12:40:12.703"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.703" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPv...</msg>
<status status="PASS" starttime="20240518 12:40:12.703" endtime="20240518 12:40:12.703"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.702" endtime="20240518 12:40:12.703"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${nome}</var>
<arg>${bodyPostProd['nome']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240518 12:40:12.704" level="INFO">${nome} = Tonya Reyes DDS798</msg>
<status status="PASS" starttime="20240518 12:40:12.704" endtime="20240518 12:40:12.704"/>
</kw>
<kw name="Put in" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<arg>${id}</arg>
<kw name="PUT" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request.</doc>
<msg timestamp="20240518 12:40:12.713" level="INFO">PUT Request : url=http://localhost:3000/produtos/N8u1MDzu17vzZOiO 
 path_url=/produtos/N8u1MDzu17vzZOiO 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPvnMrL9bH_2bqpOyTA8wvVlc', 'Content-Length': '101', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Tonya Reyes DDS798", "preco": "1010", "descricao": "Teste Automation", "quantidade": "798"}' 
 </msg>
<msg timestamp="20240518 12:40:12.714" level="INFO">PUT Response : url=http://localhost:3000/produtos/N8u1MDzu17vzZOiO 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'a3578775-5289-483e-809d-1ee07c7820d6', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '50', 'Date': 'Sat, 18 May 2024 15:40:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20240518 12:40:12.714" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.704" endtime="20240518 12:40:12.714"/>
</kw>
<msg timestamp="20240518 12:40:12.714" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.704" endtime="20240518 12:40:12.714"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.714" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.714" endtime="20240518 12:40:12.714"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${nome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.715" level="INFO">${nome} = Tonya Reyes DDS798</msg>
<status status="PASS" starttime="20240518 12:40:12.714" endtime="20240518 12:40:12.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240518 12:40:12.715" level="INFO">{'message': 'Registro alterado com sucesso'}</msg>
<status status="PASS" starttime="20240518 12:40:12.715" endtime="20240518 12:40:12.715"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.695" endtime="20240518 12:40:12.715"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>200</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240518 12:40:12.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.716" endtime="20240518 12:40:12.718"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.716" endtime="20240518 12:40:12.718"/>
</kw>
<kw name="E verificar a mensagem de validação" library="post_produtos">
<arg>Registro alterado com sucesso</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[message]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240518 12:40:12.719" endtime="20240518 12:40:12.719"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.719" endtime="20240518 12:40:12.719"/>
</kw>
<kw name="Excluir produto por nome" library="services">
<arg>${nome}</arg>
<kw name="Get in" library="services">
<var>${getResposta}</var>
<arg>/produtos/?nome=${parametros}</arg>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>headers=${headersLogin}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240518 12:40:12.727" level="INFO">GET Request : url=http://localhost:3000/produtos/?nome=Tonya%20Reyes%20DDS798 
 path_url=/produtos/?nome=Tonya%20Reyes%20DDS798 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20240518 12:40:12.728" level="INFO">GET Response : url=http://localhost:3000/produtos/?nome=Tonya%20Reyes%20DDS798 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '83e893fe-5b78-46dc-85b8-e8aa1df9dbaa', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '251', 'Date': 'Sat, 18 May 2024 15:40:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 1,
    "produtos": [
        {
            "nome": "Tonya Reyes DDS798",
            "preco": 1010,
            "descricao": "Teste Automation",
            "quantidade": 798,
            "_id": "N8u1MDzu17vzZOiO"
        }
    ]
} 
 </msg>
<msg timestamp="20240518 12:40:12.728" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.720" endtime="20240518 12:40:12.728"/>
</kw>
<msg timestamp="20240518 12:40:12.728" level="INFO">${getResposta} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.720" endtime="20240518 12:40:12.728"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${id}</var>
<arg>${getResposta.json()}[produtos][0][_id]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240518 12:40:12.729" level="INFO">${id} = N8u1MDzu17vzZOiO</msg>
<status status="PASS" starttime="20240518 12:40:12.728" endtime="20240518 12:40:12.729"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240518 12:40:12.730" level="INFO">${id} = N8u1MDzu17vzZOiO</msg>
<status status="PASS" starttime="20240518 12:40:12.730" endtime="20240518 12:40:12.730"/>
</kw>
<kw name="Delete in" library="services">
<var>${RESPOSTA_DEL}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${id}</arg>
<kw name="DELETE" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a DELETE request.</doc>
<msg timestamp="20240518 12:40:12.738" level="INFO">DELETE Request : url=http://localhost:3000/produtos/N8u1MDzu17vzZOiO 
 path_url=/produtos/N8u1MDzu17vzZOiO 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Ikpvc2VhdWd1c3RvMTBAcWEuY29tIiwicGFzc3dvcmQiOiIwNTEwNDkiLCJpYXQiOjE3MTYwNDY4MTIsImV4cCI6MTcxNjA0NzQxMn0.DT_8vN9g_YlwSLQtiiDPvnMrL9bH_2bqpOyTA8wvVlc', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20240518 12:40:12.738" level="INFO">DELETE Response : url=http://localhost:3000/produtos/N8u1MDzu17vzZOiO 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': '29b4756b-f38d-4f02-a846-d3729077c14b', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '51', 'Date': 'Sat, 18 May 2024 15:40:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20240518 12:40:12.738" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.731" endtime="20240518 12:40:12.738"/>
</kw>
<msg timestamp="20240518 12:40:12.738" level="INFO">${RESPOSTA_DEL} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240518 12:40:12.730" endtime="20240518 12:40:12.738"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.720" endtime="20240518 12:40:12.739"/>
</kw>
<status status="PASS" starttime="20240518 12:40:12.661" endtime="20240518 12:40:12.739"/>
</test>
<doc>Documentacao do POST da API: ServeRest</doc>
<status status="PASS" starttime="20240518 12:40:12.539" endtime="20240518 12:40:12.740"/>
</suite>
<status status="PASS" starttime="20240518 12:40:11.520" endtime="20240518 12:40:12.741"/>
</suite>
<statistics>
<total>
<stat pass="16" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="16" fail="0" skip="0" id="s1" name="Features">Features</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Delete Produtos">Features.Delete Produtos</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="Get Produtos">Features.Get Produtos</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Login">Features.Login</stat>
<stat pass="10" fail="0" skip="0" id="s1-s4" name="Post Produtos">Features.Post Produtos</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Put Produtos">Features.Put Produtos</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
