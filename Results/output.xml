<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.12.3 on win32)" generated="20240525 02:31:23.219" rpa="false" schemaversion="4">
<suite id="s1" name="Features" source="C:\ProjetosC\serveRest-robot\features">
<suite id="s1-s1" name="01 - Login" source="C:\ProjetosC\serveRest-robot\features\01 - login.robot">
<kw name="Conectar a API" library="services" type="SETUP">
<arg>/login</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>apiServeRest</arg>
<arg>${base_url}</arg>
<arg>${headersLogin}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20240525 02:31:23.988" level="INFO">Creating Session using : alias=apiServeRest, url=https://serverest.dev, headers={'accept': 'application/json', 'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20240525 02:31:23.986" endtime="20240525 02:31:23.988"/>
</kw>
<status status="PASS" starttime="20240525 02:31:23.986" endtime="20240525 02:31:23.988"/>
</kw>
<test id="s1-s1-t1" name="Login" line="10">
<kw name="Quando entrar com usuario e senha" library="login">
<kw name="Post in" library="services">
<var>${RESPOSTA}</var>
<arg>/login</arg>
<arg>${bodyLOGIN}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headersLogin}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 02:31:25.014" level="INFO">POST Request : url=https://serverest.dev/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "sandroteste@qa.com", "password": "testeQA"}' 
 </msg>
<msg timestamp="20240525 02:31:25.015" level="INFO">POST Response : url=https://serverest.dev/login 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '22dbd3da3c6fada1045c4e50472c9b0f;o=1', 'Date': 'Sat, 25 May 2024 05:31:25 GMT', 'Server': 'Google Frontend', 'Content-Length': '275'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4NSwiZXhwIjoxNzE2NjE1Njg1fQ.ys9qecuKVAu3sDrnql8EXdfra6BGpd_GMADEUtyq_ac"
} 
 </msg>
<msg timestamp="20240525 02:31:25.015" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:23.988" endtime="20240525 02:31:25.015"/>
</kw>
<msg timestamp="20240525 02:31:25.015" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:23.988" endtime="20240525 02:31:25.015"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${token}</var>
<arg>${RESPOSTA.json()}[authorization]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240525 02:31:25.017" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4NSwiZXhwIjoxNzE2NjE1Njg1fQ.ys9qecuKVAu3sDrnql8EXdfra6BGpd_GMADEUtyq_...</msg>
<status status="PASS" starttime="20240525 02:31:25.016" endtime="20240525 02:31:25.017"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${token}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240525 02:31:25.018" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4NSwiZXhwIjoxNzE2NjE1Njg1fQ.ys9qecuKVAu3sDrnql8EXdfra6BGpd_GMADEUtyq_...</msg>
<status status="PASS" starttime="20240525 02:31:25.017" endtime="20240525 02:31:25.018"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240525 02:31:25.019" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:25.018" endtime="20240525 02:31:25.019"/>
</kw>
<status status="PASS" starttime="20240525 02:31:23.988" endtime="20240525 02:31:25.019"/>
</kw>
<kw name="Então o Status Code deverá ser" library="login">
<arg>200</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 02:31:25.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 02:31:25.021" endtime="20240525 02:31:25.022"/>
</kw>
<status status="PASS" starttime="20240525 02:31:25.020" endtime="20240525 02:31:25.023"/>
</kw>
<kw name="E verificar a mensagem" library="login">
<arg>Login realizado com sucesso</arg>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${RESPOSTA.json()}[message]</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240525 02:31:25.024" endtime="20240525 02:31:25.026"/>
</kw>
<status status="PASS" starttime="20240525 02:31:25.024" endtime="20240525 02:31:25.026"/>
</kw>
<status status="PASS" starttime="20240525 02:31:23.988" endtime="20240525 02:31:25.027"/>
</test>
<doc>Documentacao da API: ServeRest</doc>
<status status="PASS" starttime="20240525 02:31:23.267" endtime="20240525 02:31:25.030"/>
</suite>
<suite id="s1-s2" name="02 - Get Produtos" source="C:\ProjetosC\serveRest-robot\features\02 - get_produtos.robot">
<kw name="Conectar a API" library="services" type="SETUP">
<arg>/login</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>apiServeRest</arg>
<arg>${base_url}</arg>
<arg>${headersLogin}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20240525 02:31:25.079" level="INFO">Creating Session using : alias=apiServeRest, url=https://serverest.dev, headers={'accept': 'application/json', 'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20240525 02:31:25.078" endtime="20240525 02:31:25.080"/>
</kw>
<status status="PASS" starttime="20240525 02:31:25.078" endtime="20240525 02:31:25.080"/>
</kw>
<test id="s1-s2-t1" name="Fazer um Get Produtos com sucesso" line="8">
<kw name="Quando verificar os produtos cadastrados" library="get_produtos">
<kw name="Get in" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>headers=${headersLogin}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240525 02:31:26.143" level="INFO">GET Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20240525 02:31:26.144" level="INFO">GET Response : url=https://serverest.dev/produtos 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'b439e29d26469ab50c29465d24eb25b5', 'Date': 'Sat, 25 May 2024 05:31:26 GMT', 'Server': 'Google Frontend', 'Content-Length': '7238'} 
 body={
    "quantidade": 35,
    "produtos": [
        {
            "nome": "Brooke Carpenter083",
            "preco": 1010,
            "descricao": "Teste Automation",
            "quantidade": 1049,
            "_id": "0oYuqIPVLk2Kppjm"
        },
        {
            "nome": "Gavin Hampton483",
            "preco": 1010,
            "descricao": "Teste Automation",
            "quantidade": 1049,
            "_id": "2JAmpkNccTphH84r"
        },
        {
            "nome": "Deborah Dennis957",
            "preco": 1010,
            "descricao": "Teste Automation",
            "quantidade": 1049,
            "_id": "4sIzAlHgF7Bp1Q28"
        },
        {
            "nome": "Melissa Boyer853",
            "preco": 1010,
            "descricao": "Teste Automation",
            "quantidade": 1049,
            "_id": "7P4AbLH3ytDtgoDA"
        },
        {
            "descricao": "Aperiam maiores distinctio tenetur. Voluptate nobis rem officiis non.\nIure quae est necessitatibus. Cupiditate nostrum ipsum dolore qui repellendus. Quas ratione sunt.",
            "nome": "Inventore eveniet.",
            "preco": 10,
            "quantidade": 10,
            "_id": "9Pvhm019a7i7lNCF"
        },
        {
            "nome": "as",
            "preco": 10,
            "descricao": "Produto Teste Robot Framework",
            "quantidade": 5,
            "_id": "AWa6AstPzGkep3px"
        },
        {
            "nome": "Logitech MX Vertical",
            "preco": 470,
            "descricao": "Mouse",
            "quantidade": 382,
            "_id": "BeeJh5lz3k6kSIzA"
        },
        {
            "nome": "loopin v3",
            "preco": 47,
            "descricao": "Capa celular",
            "quantidade": 501,
            "_id": "E8fegtfxImAWQPzW"
        },
        {
            "nome": "Jeffrey Russell000",
            "preco": 1010,
            "descricao": "Teste Automation",
            "quantidade": 1049,
            "_id": "GNAwtLxZJoPxnxMl"
        },
        {
            "nome": "speech",
            "preco": 10,
            "descricao": "Produto Teste Robot Framework",
            "quantidade": 5,
            "_id": "GW6NrEmibFnmPPRS"
        },
        {
            "nome": "outside",
            "preco": 10,
            "descricao": "Produto Teste Robot Framework",
            "quantidade": 5,
            "_id": "IpNdQbCMqJISLxpj"
        },
        {
            "nome": "give",
            "preco": 10,
            "descricao": "Produto Teste Robot Framework",
            "quantidade": 5,
            "_id": "Jn8f4jX0walpiumw"
        },
        {
            "nome": "Samsung 60 polegadas",
            "preco": 5240,
            "descricao": "TV",
            "quantidade": 49977,
            "_id": "K6leHdftCeOJj8BJ"
        },
        {
            "nome": "Luis Fuller247",
            "preco": 1010,
            "descricao": "Teste Automation",
            "quantidade": 1049,
            "_id": "OM6PNYhLe4Akepoi"
        },
        {
            "nome": "delectus",
            "preco": 46,
            "descricao": "Cum.",
            "quantidade": 90,
            "_id": "OMY7jCqodBbtC3Lm"
        },
        {
            "nome": "time",
            "preco": 10,
            "descricao": "Produto Teste Robot Framework",
            "quantidade": 5,
            "_id": "Oh6Bf638xcOBDx17"
        },
        {
            "nome": "Jessica Johnson165",
            "preco": 1010,
            "descricao": "Teste Automation",
            "quantidade": 1049,
            "_id": "Ombf9F6E06j2I66v"
        },
        {
            "nome": "Theresa Hines387",
            "preco": 1010,
            "descricao": "Teste Automation",
            "quantidade": 1049,
            "_id": "RGGBhiTjn7ORczHC"
        },
        {
            "nome": "Teresa Cohen764",
            "preco": 1010,
            "descricao": "Teste Automation",
            "quantidade": 1049,
            "_id": "RvFyAREMhO8uziCJ"
        },
        {
            "nome": "Thomas Young688",
            "preco": 1010,
            "descricao": "Teste Automation",
            "quantidade": 1049,
            "_id": "SEBeK4U21zPVYk1q"
        },
        {
            "nome": "Democrat",
            "preco": 10,
            "descricao": "Produto Teste Robot Framework",
            "quantidade": 5,
            "_id": "TDnujoA779osvBL3"
        },
        {
            "nome": "investment",
            "preco": 10,
            "descricao": "Produto Teste Robot Framework",
            "quantidade": 5,
            "_id": "UvQKs3U2UxOlZ6wi"
        },
        {
            "nome": "123",
            "preco": 123,
            "descricao": "123",
            "quantidade": 123,
            "_id": "VZlQ7BYLuoW5d6r6"
        },
        {
            "nome": "Heather Myers707",
            "preco": 1010,
            "descricao": "Teste Automation",
            "quantidade": 1049,
            "_id": "X12vBbISvZ0DnEj0"
        },
        {
            "nome": "Joseph Gross507",
            "preco": 1010,
            "descricao": "Teste Automation",
            "quantidade": 1049,
            "_id": "X2fz73y2IdYmv0UK"
        },
        {
            "nome": "Joanne Figueroa537",
            "preco": 1010,
            "descricao": "Teste Automation",
            "quantidade": 1049,
            "_id": "YGGeUHaIScbgmYTB"
        },
        {
            "nome": "Ryan Novak837",
            "preco": 1010,
            "descricao": "Teste Automation",
            "quantidade": 1049,
            "_id": "ZHNeQbIdgbB0BpFQ"
        },
        {
            "nome": "enjoy",
            "preco": 10,
            "descricao": "Produto Teste Robot Framework",
            "quantidade": 5,
            "_id": "b4woBKBiwY1mDyLw"
        },
        {
            "nome": "Sharon Hickman730",
            "preco": 1010,
            "descricao": "Teste Automation",
            "quantidade": 1049,
            "_id": "cec1w4Ryr2PcQFLK"
        },
        {
            "nome": "loopin v2",
            "preco": 47,
            "descricao": "Capa celular",
            "quantidade": 501,
            "_id": "fkFeS0oL4qQbDNif"
        },
        {
            "nome": "TESTE_Product",
            "preco": 400,
            "descricao": "teste api",
            "quantidade": 505,
            "_id": "jyyIFW9R9AAbnobJ"
        },
        {
            "descricao": "Voluptatibus maiores accusamus doloremque unde quod officiis. In nemo numquam est exercitationem facere.",
            "nome": "Quas voluptatibus.",
            "preco": 10,
            "quantidade": 10,
            "_id": "r4OKysaBOnsX13fD"
        },
        {
            "nome": "amet",
            "preco": 46,
            "descricao": "Odit.",
            "quantidade": 13,
            "_id": "uAAwzVgwE69OFQwL"
        },
        {
            "nome": "Patricia Simon214",
            "preco": 1010,
            "descricao": "Teste Automation",
            "quantidade": 1049,
            "_id": "yAHFYWm55vJ8UltY"
        },
        {
            "nome": "Ronald Miller092",
            "preco": 1010,
            "descricao": "Teste Automation",
            "quantidade": 1049,
            "_id": "zbaH9kfKgDRbttNP"
        }
    ]
} 
 </msg>
<msg timestamp="20240525 02:31:26.146" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:25.083" endtime="20240525 02:31:26.146"/>
</kw>
<msg timestamp="20240525 02:31:26.147" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:25.082" endtime="20240525 02:31:26.148"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240525 02:31:26.150" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:26.149" endtime="20240525 02:31:26.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:26.153" level="INFO">{'quantidade': 35, 'produtos': [{'nome': 'Brooke Carpenter083', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': '0oYuqIPVLk2Kppjm'}, {'nome': 'Gavin Hampton483', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': '2JAmpkNccTphH84r'}, {'nome': 'Deborah Dennis957', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': '4sIzAlHgF7Bp1Q28'}, {'nome': 'Melissa Boyer853', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': '7P4AbLH3ytDtgoDA'}, {'descricao': 'Aperiam maiores distinctio tenetur. Voluptate nobis rem officiis non.\nIure quae est necessitatibus. Cupiditate nostrum ipsum dolore qui repellendus. Quas ratione sunt.', 'nome': 'Inventore eveniet.', 'preco': 10, 'quantidade': 10, '_id': '9Pvhm019a7i7lNCF'}, {'nome': 'as', 'preco': 10, 'descricao': 'Produto Teste Robot Framework', 'quantidade': 5, '_id': 'AWa6AstPzGkep3px'}, {'nome': 'Logitech MX Vertical', 'preco': 470, 'descricao': 'Mouse', 'quantidade': 382, '_id': 'BeeJh5lz3k6kSIzA'}, {'nome': 'loopin v3', 'preco': 47, 'descricao': 'Capa celular', 'quantidade': 501, '_id': 'E8fegtfxImAWQPzW'}, {'nome': 'Jeffrey Russell000', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'GNAwtLxZJoPxnxMl'}, {'nome': 'speech', 'preco': 10, 'descricao': 'Produto Teste Robot Framework', 'quantidade': 5, '_id': 'GW6NrEmibFnmPPRS'}, {'nome': 'outside', 'preco': 10, 'descricao': 'Produto Teste Robot Framework', 'quantidade': 5, '_id': 'IpNdQbCMqJISLxpj'}, {'nome': 'give', 'preco': 10, 'descricao': 'Produto Teste Robot Framework', 'quantidade': 5, '_id': 'Jn8f4jX0walpiumw'}, {'nome': 'Samsung 60 polegadas', 'preco': 5240, 'descricao': 'TV', 'quantidade': 49977, '_id': 'K6leHdftCeOJj8BJ'}, {'nome': 'Luis Fuller247', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'OM6PNYhLe4Akepoi'}, {'nome': 'delectus', 'preco': 46, 'descricao': 'Cum.', 'quantidade': 90, '_id': 'OMY7jCqodBbtC3Lm'}, {'nome': 'time', 'preco': 10, 'descricao': 'Produto Teste Robot Framework', 'quantidade': 5, '_id': 'Oh6Bf638xcOBDx17'}, {'nome': 'Jessica Johnson165', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'Ombf9F6E06j2I66v'}, {'nome': 'Theresa Hines387', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'RGGBhiTjn7ORczHC'}, {'nome': 'Teresa Cohen764', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'RvFyAREMhO8uziCJ'}, {'nome': 'Thomas Young688', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'SEBeK4U21zPVYk1q'}, {'nome': 'Democrat', 'preco': 10, 'descricao': 'Produto Teste Robot Framework', 'quantidade': 5, '_id': 'TDnujoA779osvBL3'}, {'nome': 'investment', 'preco': 10, 'descricao': 'Produto Teste Robot Framework', 'quantidade': 5, '_id': 'UvQKs3U2UxOlZ6wi'}, {'nome': '123', 'preco': 123, 'descricao': '123', 'quantidade': 123, '_id': 'VZlQ7BYLuoW5d6r6'}, {'nome': 'Heather Myers707', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'X12vBbISvZ0DnEj0'}, {'nome': 'Joseph Gross507', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'X2fz73y2IdYmv0UK'}, {'nome': 'Joanne Figueroa537', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'YGGeUHaIScbgmYTB'}, {'nome': 'Ryan Novak837', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'ZHNeQbIdgbB0BpFQ'}, {'nome': 'enjoy', 'preco': 10, 'descricao': 'Produto Teste Robot Framework', 'quantidade': 5, '_id': 'b4woBKBiwY1mDyLw'}, {'nome': 'Sharon Hickman730', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'cec1w4Ryr2PcQFLK'}, {'nome': 'loopin v2', 'preco': 47, 'descricao': 'Capa celular', 'quantidade': 501, '_id': 'fkFeS0oL4qQbDNif'}, {'nome': 'TESTE_Product', 'preco': 400, 'descricao': 'teste api', 'quantidade': 505, '_id': 'jyyIFW9R9AAbnobJ'}, {'descricao': 'Voluptatibus maiores accusamus doloremque unde quod officiis. In nemo numquam est exercitationem facere.', 'nome': 'Quas voluptatibus.', 'preco': 10, 'quantidade': 10, '_id': 'r4OKysaBOnsX13fD'}, {'nome': 'amet', 'preco': 46, 'descricao': 'Odit.', 'quantidade': 13, '_id': 'uAAwzVgwE69OFQwL'}, {'nome': 'Patricia Simon214', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'yAHFYWm55vJ8UltY'}, {'nome': 'Ronald Miller092', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': 'zbaH9kfKgDRbttNP'}]}</msg>
<status status="PASS" starttime="20240525 02:31:26.150" endtime="20240525 02:31:26.153"/>
</kw>
<status status="PASS" starttime="20240525 02:31:25.082" endtime="20240525 02:31:26.153"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>200</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 02:31:26.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 02:31:26.156" endtime="20240525 02:31:26.158"/>
</kw>
<status status="PASS" starttime="20240525 02:31:26.155" endtime="20240525 02:31:26.158"/>
</kw>
<kw name="E o body não pode está vazio" library="get_produtos">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20240525 02:31:26.162" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20240525 02:31:26.160" endtime="20240525 02:31:26.162"/>
</kw>
<status status="PASS" starttime="20240525 02:31:26.159" endtime="20240525 02:31:26.162"/>
</kw>
<status status="PASS" starttime="20240525 02:31:25.080" endtime="20240525 02:31:26.163"/>
</test>
<test id="s1-s2-t2" name="Fazer um Get Id Produtos" line="13">
<kw name="Quando verificar o id do produto" library="get_produtos">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<arg>${RESPOSTA.json()}[produtos][0][_id]</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:26.173" level="INFO">${id} = 0oYuqIPVLk2Kppjm</msg>
<status status="PASS" starttime="20240525 02:31:26.170" endtime="20240525 02:31:26.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${id}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:26.173" level="INFO">0oYuqIPVLk2Kppjm</msg>
<status status="PASS" starttime="20240525 02:31:26.173" endtime="20240525 02:31:26.173"/>
</kw>
<kw name="Get Id In" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${id}</arg>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>headers=${headersLogin}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240525 02:31:27.164" level="INFO">GET Request : url=https://serverest.dev/produtos/0oYuqIPVLk2Kppjm 
 path_url=/produtos/0oYuqIPVLk2Kppjm 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20240525 02:31:27.164" level="INFO">GET Response : url=https://serverest.dev/produtos/0oYuqIPVLk2Kppjm 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '1340c078c8fca8319886063d03ec6086', 'Date': 'Sat, 25 May 2024 05:31:27 GMT', 'Server': 'Google Frontend', 'Content-Length': '148'} 
 body={
    "nome": "Brooke Carpenter083",
    "preco": 1010,
    "descricao": "Teste Automation",
    "quantidade": 1049,
    "_id": "0oYuqIPVLk2Kppjm"
} 
 </msg>
<msg timestamp="20240525 02:31:27.164" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:26.174" endtime="20240525 02:31:27.164"/>
</kw>
<msg timestamp="20240525 02:31:27.165" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:26.174" endtime="20240525 02:31:27.165"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${nome}</var>
<arg>${RESPOSTA.json()}[nome]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240525 02:31:27.167" level="INFO">${nome} = Brooke Carpenter083</msg>
<status status="PASS" starttime="20240525 02:31:27.165" endtime="20240525 02:31:27.167"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${nome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:27.168" level="INFO">${nome} = Brooke Carpenter083</msg>
<status status="PASS" starttime="20240525 02:31:27.167" endtime="20240525 02:31:27.168"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:27.168" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:27.168" endtime="20240525 02:31:27.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:27.170" level="INFO">{'nome': 'Brooke Carpenter083', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': '0oYuqIPVLk2Kppjm'}</msg>
<status status="PASS" starttime="20240525 02:31:27.169" endtime="20240525 02:31:27.170"/>
</kw>
<status status="PASS" starttime="20240525 02:31:26.169" endtime="20240525 02:31:27.170"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>200</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 02:31:27.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 02:31:27.172" endtime="20240525 02:31:27.173"/>
</kw>
<status status="PASS" starttime="20240525 02:31:27.171" endtime="20240525 02:31:27.173"/>
</kw>
<kw name="E validar os campos de retorno do body" library="get_produtos">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${campos}</arg>
<arg>${RESPOSTA.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:27.178" level="INFO">${campos} = {'nome': 'Brooke Carpenter083', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': '0oYuqIPVLk2Kppjm'}</msg>
<status status="PASS" starttime="20240525 02:31:27.175" endtime="20240525 02:31:27.178"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${campos}</arg>
<arg>descricao</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:27.179" endtime="20240525 02:31:27.179"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${campos}</arg>
<arg>nome</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:27.179" endtime="20240525 02:31:27.180"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${campos}</arg>
<arg>preco</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:27.180" endtime="20240525 02:31:27.180"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${campos}</arg>
<arg>quantidade</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:27.180" endtime="20240525 02:31:27.181"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${campos}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:27.181" endtime="20240525 02:31:27.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${campos}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:27.182" level="INFO">{'nome': 'Brooke Carpenter083', 'preco': 1010, 'descricao': 'Teste Automation', 'quantidade': 1049, '_id': '0oYuqIPVLk2Kppjm'}</msg>
<status status="PASS" starttime="20240525 02:31:27.182" endtime="20240525 02:31:27.182"/>
</kw>
<status status="PASS" starttime="20240525 02:31:27.174" endtime="20240525 02:31:27.182"/>
</kw>
<kw name="E o body não pode está vazio" library="get_produtos">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20240525 02:31:27.185" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20240525 02:31:27.184" endtime="20240525 02:31:27.185"/>
</kw>
<status status="PASS" starttime="20240525 02:31:27.183" endtime="20240525 02:31:27.185"/>
</kw>
<status status="PASS" starttime="20240525 02:31:26.168" endtime="20240525 02:31:27.186"/>
</test>
<doc>Documentacao da API: ServeRest</doc>
<status status="PASS" starttime="20240525 02:31:25.034" endtime="20240525 02:31:27.189"/>
</suite>
<suite id="s1-s3" name="03 - Post Produtos" source="C:\ProjetosC\serveRest-robot\features\03 - post_produtos.robot">
<kw name="Token" library="services" type="SETUP">
<kw name="Conectar a API" library="services">
<arg>/login</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>apiServeRest</arg>
<arg>${base_url}</arg>
<arg>${headersLogin}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20240525 02:31:27.237" level="INFO">Creating Session using : alias=apiServeRest, url=https://serverest.dev, headers={'accept': 'application/json', 'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20240525 02:31:27.236" endtime="20240525 02:31:27.237"/>
</kw>
<status status="PASS" starttime="20240525 02:31:27.235" endtime="20240525 02:31:27.237"/>
</kw>
<kw name="Quando entrar com usuario e senha" library="login">
<kw name="Post in" library="services">
<var>${RESPOSTA}</var>
<arg>/login</arg>
<arg>${bodyLOGIN}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headersLogin}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 02:31:28.391" level="INFO">POST Request : url=https://serverest.dev/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "sandroteste@qa.com", "password": "testeQA"}' 
 </msg>
<msg timestamp="20240525 02:31:28.392" level="INFO">POST Response : url=https://serverest.dev/login 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'b7df498b51ba19e5395120c8c4e84d7e', 'Date': 'Sat, 25 May 2024 05:31:28 GMT', 'Server': 'Google Frontend', 'Content-Length': '275'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN6w78Q9h8qKQu4YgS9F2F0"
} 
 </msg>
<msg timestamp="20240525 02:31:28.393" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:27.239" endtime="20240525 02:31:28.393"/>
</kw>
<msg timestamp="20240525 02:31:28.393" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:27.238" endtime="20240525 02:31:28.393"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${token}</var>
<arg>${RESPOSTA.json()}[authorization]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240525 02:31:28.394" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN6w78Q9h8qKQu4YgS9F2...</msg>
<status status="PASS" starttime="20240525 02:31:28.394" endtime="20240525 02:31:28.394"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${token}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240525 02:31:28.395" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN6w78Q9h8qKQu4YgS9F2...</msg>
<status status="PASS" starttime="20240525 02:31:28.394" endtime="20240525 02:31:28.395"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240525 02:31:28.395" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:28.395" endtime="20240525 02:31:28.395"/>
</kw>
<status status="PASS" starttime="20240525 02:31:27.238" endtime="20240525 02:31:28.395"/>
</kw>
<status status="PASS" starttime="20240525 02:31:27.235" endtime="20240525 02:31:28.395"/>
</kw>
<test id="s1-s3-t1" name="Cadastrar Produto com sucesso" line="8">
<kw name="Fakers" library="Utils">
<kw name="Name" library="FakerLibrary">
<var>${FakeNome}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20240525 02:31:28.397" level="INFO">${FakeNome} = Andrew Wolfe</msg>
<status status="PASS" starttime="20240525 02:31:28.396" endtime="20240525 02:31:28.397"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeNome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:28.397" level="INFO">${FakeNome} = Andrew Wolfe</msg>
<status status="PASS" starttime="20240525 02:31:28.397" endtime="20240525 02:31:28.397"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${FakeEmail}</var>
<msg timestamp="20240525 02:31:28.398" level="INFO">${FakeEmail} = mariosmith@example.org</msg>
<status status="PASS" starttime="20240525 02:31:28.397" endtime="20240525 02:31:28.398"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeEmail}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:28.398" level="INFO">${FakeEmail} = mariosmith@example.org</msg>
<status status="PASS" starttime="20240525 02:31:28.398" endtime="20240525 02:31:28.398"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${compSenha}</var>
<arg>text=##</arg>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:31:28.399" level="INFO">${compSenha} = 34</msg>
<status status="PASS" starttime="20240525 02:31:28.398" endtime="20240525 02:31:28.399"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${FakeSenha}</var>
<arg>Seubarriga</arg>
<arg>${compSenha}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240525 02:31:28.399" level="INFO">${FakeSenha} = Seubarriga 34</msg>
<status status="PASS" starttime="20240525 02:31:28.399" endtime="20240525 02:31:28.399"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeSenha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:28.399" level="INFO">${FakeSenha} = Seubarriga 34</msg>
<status status="PASS" starttime="20240525 02:31:28.399" endtime="20240525 02:31:28.399"/>
</kw>
<kw name="Sentence" library="FakerLibrary">
<var>${FakerDescricao}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20240525 02:31:28.400" level="INFO">${FakerDescricao} = Western community indicate example data.</msg>
<status status="PASS" starttime="20240525 02:31:28.400" endtime="20240525 02:31:28.400"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerDescricao}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:28.400" level="INFO">${FakerDescricao} = Western community indicate example data.</msg>
<status status="PASS" starttime="20240525 02:31:28.400" endtime="20240525 02:31:28.400"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${FakerValor}</var>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:31:28.400" level="INFO">${FakerValor} = 517</msg>
<status status="PASS" starttime="20240525 02:31:28.400" endtime="20240525 02:31:28.400"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerValor}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:28.401" level="INFO">${FakerValor} = 517</msg>
<status status="PASS" starttime="20240525 02:31:28.401" endtime="20240525 02:31:28.401"/>
</kw>
<status status="PASS" starttime="20240525 02:31:28.396" endtime="20240525 02:31:28.401"/>
</kw>
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>${token}</arg>
<arg>${FakeNome}${FakerValor}</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>1049</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:28.402" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 02:31:28.402" endtime="20240525 02:31:28.402"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:28.403" endtime="20240525 02:31:28.403"/>
</kw>
<status status="PASS" starttime="20240525 02:31:28.403" endtime="20240525 02:31:28.403"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:28.404" endtime="20240525 02:31:28.404"/>
</kw>
<status status="PASS" starttime="20240525 02:31:28.403" endtime="20240525 02:31:28.404"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:28.404" endtime="20240525 02:31:28.405"/>
</kw>
<status status="PASS" starttime="20240525 02:31:28.404" endtime="20240525 02:31:28.405"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:28.405" endtime="20240525 02:31:28.405"/>
</kw>
<status status="PASS" starttime="20240525 02:31:28.405" endtime="20240525 02:31:28.405"/>
</kw>
<msg timestamp="20240525 02:31:28.406" level="INFO">${bodyPostProd} = {'nome': 'Andrew Wolfe517', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 02:31:28.402" endtime="20240525 02:31:28.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:28.406" level="INFO">{'nome': 'Andrew Wolfe517', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 02:31:28.406" endtime="20240525 02:31:28.406"/>
</kw>
<kw name="HeadersAuth" library="services">
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:28.407" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN...</msg>
<status status="PASS" starttime="20240525 02:31:28.406" endtime="20240525 02:31:28.407"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:28.407" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN...</msg>
<status status="PASS" starttime="20240525 02:31:28.407" endtime="20240525 02:31:28.407"/>
</kw>
<status status="PASS" starttime="20240525 02:31:28.406" endtime="20240525 02:31:28.407"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 02:31:29.519" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN6w78Q9h8qKQu4YgS9F2F0', 'Content-Length': '99', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Andrew Wolfe517", "preco": "1010", "descricao": "Teste Automation", "quantidade": "1049"}' 
 </msg>
<msg timestamp="20240525 02:31:29.519" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '6110f89c12ed5083e61a2f2eb3aafd13', 'Date': 'Sat, 25 May 2024 05:31:29 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "6nx1Aue2BcYFfsju"
} 
 </msg>
<msg timestamp="20240525 02:31:29.519" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:28.408" endtime="20240525 02:31:29.519"/>
</kw>
<msg timestamp="20240525 02:31:29.520" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:28.407" endtime="20240525 02:31:29.520"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:29.520" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:29.520" endtime="20240525 02:31:29.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:29.522" level="INFO">{'message': 'Cadastro realizado com sucesso', '_id': '6nx1Aue2BcYFfsju'}</msg>
<status status="PASS" starttime="20240525 02:31:29.521" endtime="20240525 02:31:29.522"/>
</kw>
<status status="PASS" starttime="20240525 02:31:28.401" endtime="20240525 02:31:29.523"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>201</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 02:31:29.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 02:31:29.524" endtime="20240525 02:31:29.526"/>
</kw>
<status status="PASS" starttime="20240525 02:31:29.523" endtime="20240525 02:31:29.526"/>
</kw>
<kw name="E verificar a mensagem de validação" library="post_produtos">
<arg>Cadastro realizado com sucesso</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[message]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240525 02:31:29.527" endtime="20240525 02:31:29.529"/>
</kw>
<status status="PASS" starttime="20240525 02:31:29.527" endtime="20240525 02:31:29.529"/>
</kw>
<kw name="Excluir Produto" library="services">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<arg>${RESPOSTA.json()}[_id]</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:29.533" level="INFO">${id} = 6nx1Aue2BcYFfsju</msg>
<status status="PASS" starttime="20240525 02:31:29.531" endtime="20240525 02:31:29.533"/>
</kw>
<kw name="Quando enviar uma requisição pra excluir um produto" library="delete_produtos">
<arg>${token}</arg>
<kw name="HeadersAuth" library="services">
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:29.536" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN...</msg>
<status status="PASS" starttime="20240525 02:31:29.535" endtime="20240525 02:31:29.536"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:29.537" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN...</msg>
<status status="PASS" starttime="20240525 02:31:29.536" endtime="20240525 02:31:29.537"/>
</kw>
<status status="PASS" starttime="20240525 02:31:29.534" endtime="20240525 02:31:29.537"/>
</kw>
<kw name="Delete in" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${id}</arg>
<kw name="DELETE" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request.</doc>
<msg timestamp="20240525 02:31:30.855" level="INFO">DELETE Request : url=https://serverest.dev/produtos/6nx1Aue2BcYFfsju 
 path_url=/produtos/6nx1Aue2BcYFfsju 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN6w78Q9h8qKQu4YgS9F2F0', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20240525 02:31:30.856" level="INFO">DELETE Response : url=https://serverest.dev/produtos/6nx1Aue2BcYFfsju 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '50737cf1c896cdb8ba7f5aac17c6e529', 'Date': 'Sat, 25 May 2024 05:31:31 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20240525 02:31:30.856" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:29.538" endtime="20240525 02:31:30.856"/>
</kw>
<msg timestamp="20240525 02:31:30.856" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:29.537" endtime="20240525 02:31:30.856"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:30.857" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:30.857" endtime="20240525 02:31:30.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:30.860" level="INFO">{'message': 'Registro excluído com sucesso'}</msg>
<status status="PASS" starttime="20240525 02:31:30.858" endtime="20240525 02:31:30.860"/>
</kw>
<status status="PASS" starttime="20240525 02:31:29.534" endtime="20240525 02:31:30.860"/>
</kw>
<status status="PASS" starttime="20240525 02:31:29.530" endtime="20240525 02:31:30.860"/>
</kw>
<kw name="E verificar a mensagem de exclusão" library="delete_produtos">
<arg>Registro excluído com sucesso</arg>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${RESPOSTA.json()}[message]</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240525 02:31:30.862" endtime="20240525 02:31:30.864"/>
</kw>
<status status="PASS" starttime="20240525 02:31:30.861" endtime="20240525 02:31:30.864"/>
</kw>
<status status="PASS" starttime="20240525 02:31:28.395" endtime="20240525 02:31:30.865"/>
</test>
<test id="s1-s3-t2" name="Cadastrar Produto sem o Token" line="16">
<kw name="Fakers" library="Utils">
<kw name="Name" library="FakerLibrary">
<var>${FakeNome}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20240525 02:31:30.871" level="INFO">${FakeNome} = Cynthia Burch</msg>
<status status="PASS" starttime="20240525 02:31:30.870" endtime="20240525 02:31:30.872"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeNome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:30.873" level="INFO">${FakeNome} = Cynthia Burch</msg>
<status status="PASS" starttime="20240525 02:31:30.872" endtime="20240525 02:31:30.873"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${FakeEmail}</var>
<msg timestamp="20240525 02:31:30.875" level="INFO">${FakeEmail} = walkerjacob@example.com</msg>
<status status="PASS" starttime="20240525 02:31:30.873" endtime="20240525 02:31:30.875"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeEmail}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:30.876" level="INFO">${FakeEmail} = walkerjacob@example.com</msg>
<status status="PASS" starttime="20240525 02:31:30.875" endtime="20240525 02:31:30.876"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${compSenha}</var>
<arg>text=##</arg>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:31:30.877" level="INFO">${compSenha} = 91</msg>
<status status="PASS" starttime="20240525 02:31:30.876" endtime="20240525 02:31:30.877"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${FakeSenha}</var>
<arg>Seubarriga</arg>
<arg>${compSenha}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240525 02:31:30.877" level="INFO">${FakeSenha} = Seubarriga 91</msg>
<status status="PASS" starttime="20240525 02:31:30.877" endtime="20240525 02:31:30.878"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeSenha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:30.878" level="INFO">${FakeSenha} = Seubarriga 91</msg>
<status status="PASS" starttime="20240525 02:31:30.878" endtime="20240525 02:31:30.878"/>
</kw>
<kw name="Sentence" library="FakerLibrary">
<var>${FakerDescricao}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20240525 02:31:30.879" level="INFO">${FakerDescricao} = Whom front sense traditional son trouble meet.</msg>
<status status="PASS" starttime="20240525 02:31:30.879" endtime="20240525 02:31:30.879"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerDescricao}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:30.880" level="INFO">${FakerDescricao} = Whom front sense traditional son trouble meet.</msg>
<status status="PASS" starttime="20240525 02:31:30.879" endtime="20240525 02:31:30.880"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${FakerValor}</var>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:31:30.881" level="INFO">${FakerValor} = 750</msg>
<status status="PASS" starttime="20240525 02:31:30.880" endtime="20240525 02:31:30.881"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerValor}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:30.882" level="INFO">${FakerValor} = 750</msg>
<status status="PASS" starttime="20240525 02:31:30.881" endtime="20240525 02:31:30.882"/>
</kw>
<status status="PASS" starttime="20240525 02:31:30.870" endtime="20240525 02:31:30.883"/>
</kw>
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>${EMPTY}</arg>
<arg>${FakeNome}${FakerValor}</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>1049</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:30.889" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 02:31:30.888" endtime="20240525 02:31:30.890"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:30.891" endtime="20240525 02:31:30.891"/>
</kw>
<status status="PASS" starttime="20240525 02:31:30.890" endtime="20240525 02:31:30.891"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:30.892" endtime="20240525 02:31:30.893"/>
</kw>
<status status="PASS" starttime="20240525 02:31:30.892" endtime="20240525 02:31:30.893"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:30.894" endtime="20240525 02:31:30.895"/>
</kw>
<status status="PASS" starttime="20240525 02:31:30.893" endtime="20240525 02:31:30.896"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:30.898" endtime="20240525 02:31:30.898"/>
</kw>
<status status="PASS" starttime="20240525 02:31:30.896" endtime="20240525 02:31:30.899"/>
</kw>
<msg timestamp="20240525 02:31:30.899" level="INFO">${bodyPostProd} = {'nome': 'Cynthia Burch750', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 02:31:30.886" endtime="20240525 02:31:30.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:30.900" level="INFO">{'nome': 'Cynthia Burch750', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 02:31:30.900" endtime="20240525 02:31:30.901"/>
</kw>
<kw name="HeadersAuth" library="services">
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:30.904" level="INFO">${headersAuth} = {'Authorization': ''}</msg>
<status status="PASS" starttime="20240525 02:31:30.903" endtime="20240525 02:31:30.904"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:30.906" level="INFO">${headersAuth} = {'Authorization': ''}</msg>
<status status="PASS" starttime="20240525 02:31:30.905" endtime="20240525 02:31:30.906"/>
</kw>
<status status="PASS" starttime="20240525 02:31:30.901" endtime="20240525 02:31:30.906"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 02:31:31.932" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': '', 'Content-Length': '100', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Cynthia Burch750", "preco": "1010", "descricao": "Teste Automation", "quantidade": "1049"}' 
 </msg>
<msg timestamp="20240525 02:31:31.932" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=401, reason=Unauthorized 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'bd443c807b212ca0d442f4745208441c', 'Date': 'Sat, 25 May 2024 05:31:32 GMT', 'Server': 'Google Frontend', 'Content-Length': '103'} 
 body={
    "message": "Token de acesso ausente, inválido, expirado ou usuário do token não existe mais"
} 
 </msg>
<msg timestamp="20240525 02:31:31.933" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:30.908" endtime="20240525 02:31:31.933"/>
</kw>
<msg timestamp="20240525 02:31:31.933" level="INFO">${RESPOSTA} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:30.907" endtime="20240525 02:31:31.933"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:31.934" level="INFO">${RESPOSTA} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:31.934" endtime="20240525 02:31:31.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:31.937" level="INFO">{'message': 'Token de acesso ausente, inválido, expirado ou usuário do token não existe mais'}</msg>
<status status="PASS" starttime="20240525 02:31:31.935" endtime="20240525 02:31:31.937"/>
</kw>
<status status="PASS" starttime="20240525 02:31:30.884" endtime="20240525 02:31:31.937"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>401</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 02:31:31.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 02:31:31.939" endtime="20240525 02:31:31.941"/>
</kw>
<status status="PASS" starttime="20240525 02:31:31.938" endtime="20240525 02:31:31.941"/>
</kw>
<kw name="E verificar a mensagem de validação" library="post_produtos">
<arg>Token de acesso ausente, inválido, expirado ou usuário do token não existe mais</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[message]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240525 02:31:31.943" endtime="20240525 02:31:31.945"/>
</kw>
<status status="PASS" starttime="20240525 02:31:31.942" endtime="20240525 02:31:31.945"/>
</kw>
<status status="PASS" starttime="20240525 02:31:30.868" endtime="20240525 02:31:31.946"/>
</test>
<test id="s1-s3-t3" name="Cadastro Protudo com Token Invalido" line="22">
<kw name="Fakers" library="Utils">
<kw name="Name" library="FakerLibrary">
<var>${FakeNome}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20240525 02:31:31.952" level="INFO">${FakeNome} = Mr. Frank Santos MD</msg>
<status status="PASS" starttime="20240525 02:31:31.951" endtime="20240525 02:31:31.952"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeNome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:31.953" level="INFO">${FakeNome} = Mr. Frank Santos MD</msg>
<status status="PASS" starttime="20240525 02:31:31.952" endtime="20240525 02:31:31.953"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${FakeEmail}</var>
<msg timestamp="20240525 02:31:31.954" level="INFO">${FakeEmail} = erika41@example.com</msg>
<status status="PASS" starttime="20240525 02:31:31.953" endtime="20240525 02:31:31.954"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeEmail}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:31.955" level="INFO">${FakeEmail} = erika41@example.com</msg>
<status status="PASS" starttime="20240525 02:31:31.955" endtime="20240525 02:31:31.955"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${compSenha}</var>
<arg>text=##</arg>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:31:31.956" level="INFO">${compSenha} = 37</msg>
<status status="PASS" starttime="20240525 02:31:31.956" endtime="20240525 02:31:31.956"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${FakeSenha}</var>
<arg>Seubarriga</arg>
<arg>${compSenha}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240525 02:31:31.958" level="INFO">${FakeSenha} = Seubarriga 37</msg>
<status status="PASS" starttime="20240525 02:31:31.957" endtime="20240525 02:31:31.958"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeSenha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:31.959" level="INFO">${FakeSenha} = Seubarriga 37</msg>
<status status="PASS" starttime="20240525 02:31:31.958" endtime="20240525 02:31:31.959"/>
</kw>
<kw name="Sentence" library="FakerLibrary">
<var>${FakerDescricao}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20240525 02:31:31.960" level="INFO">${FakerDescricao} = Congress various campaign most audience suddenly.</msg>
<status status="PASS" starttime="20240525 02:31:31.959" endtime="20240525 02:31:31.960"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerDescricao}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:31.962" level="INFO">${FakerDescricao} = Congress various campaign most audience suddenly.</msg>
<status status="PASS" starttime="20240525 02:31:31.961" endtime="20240525 02:31:31.962"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${FakerValor}</var>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:31:31.963" level="INFO">${FakerValor} = 771</msg>
<status status="PASS" starttime="20240525 02:31:31.962" endtime="20240525 02:31:31.963"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerValor}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:31.964" level="INFO">${FakerValor} = 771</msg>
<status status="PASS" starttime="20240525 02:31:31.963" endtime="20240525 02:31:31.964"/>
</kw>
<status status="PASS" starttime="20240525 02:31:31.950" endtime="20240525 02:31:31.964"/>
</kw>
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>token_invalido</arg>
<arg>${FakeNome}${FakerValor}</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>1049</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:31.970" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 02:31:31.969" endtime="20240525 02:31:31.971"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:31.972" endtime="20240525 02:31:31.973"/>
</kw>
<status status="PASS" starttime="20240525 02:31:31.971" endtime="20240525 02:31:31.974"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:31.975" endtime="20240525 02:31:31.976"/>
</kw>
<status status="PASS" starttime="20240525 02:31:31.974" endtime="20240525 02:31:31.976"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:31.978" endtime="20240525 02:31:31.979"/>
</kw>
<status status="PASS" starttime="20240525 02:31:31.977" endtime="20240525 02:31:31.979"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:31.980" endtime="20240525 02:31:31.981"/>
</kw>
<status status="PASS" starttime="20240525 02:31:31.979" endtime="20240525 02:31:31.982"/>
</kw>
<msg timestamp="20240525 02:31:31.982" level="INFO">${bodyPostProd} = {'nome': 'Mr. Frank Santos MD771', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 02:31:31.967" endtime="20240525 02:31:31.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:31.984" level="INFO">{'nome': 'Mr. Frank Santos MD771', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 02:31:31.983" endtime="20240525 02:31:31.985"/>
</kw>
<kw name="HeadersAuth" library="services">
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:31.991" level="INFO">${headersAuth} = {'Authorization': 'token_invalido'}</msg>
<status status="PASS" starttime="20240525 02:31:31.989" endtime="20240525 02:31:31.991"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:31.993" level="INFO">${headersAuth} = {'Authorization': 'token_invalido'}</msg>
<status status="PASS" starttime="20240525 02:31:31.992" endtime="20240525 02:31:31.993"/>
</kw>
<status status="PASS" starttime="20240525 02:31:31.986" endtime="20240525 02:31:31.993"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 02:31:33.080" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'token_invalido', 'Content-Length': '106', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Mr. Frank Santos MD771", "preco": "1010", "descricao": "Teste Automation", "quantidade": "1049"}' 
 </msg>
<msg timestamp="20240525 02:31:33.080" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=401, reason=Unauthorized 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '4fab02a4cc824abecb20f2b97398741e', 'Date': 'Sat, 25 May 2024 05:31:33 GMT', 'Server': 'Google Frontend', 'Content-Length': '103'} 
 body={
    "message": "Token de acesso ausente, inválido, expirado ou usuário do token não existe mais"
} 
 </msg>
<msg timestamp="20240525 02:31:33.080" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:31.995" endtime="20240525 02:31:33.081"/>
</kw>
<msg timestamp="20240525 02:31:33.081" level="INFO">${RESPOSTA} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:31.993" endtime="20240525 02:31:33.081"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:33.082" level="INFO">${RESPOSTA} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:33.081" endtime="20240525 02:31:33.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:33.084" level="INFO">{'message': 'Token de acesso ausente, inválido, expirado ou usuário do token não existe mais'}</msg>
<status status="PASS" starttime="20240525 02:31:33.082" endtime="20240525 02:31:33.084"/>
</kw>
<status status="PASS" starttime="20240525 02:31:31.965" endtime="20240525 02:31:33.084"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>401</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 02:31:33.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 02:31:33.086" endtime="20240525 02:31:33.088"/>
</kw>
<status status="PASS" starttime="20240525 02:31:33.085" endtime="20240525 02:31:33.088"/>
</kw>
<kw name="E verificar a mensagem de validação" library="post_produtos">
<arg>Token de acesso ausente, inválido, expirado ou usuário do token não existe mais</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[message]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240525 02:31:33.090" endtime="20240525 02:31:33.091"/>
</kw>
<status status="PASS" starttime="20240525 02:31:33.089" endtime="20240525 02:31:33.092"/>
</kw>
<status status="PASS" starttime="20240525 02:31:31.948" endtime="20240525 02:31:33.093"/>
</test>
<test id="s1-s3-t4" name="Validar Produto duplicado" line="28">
<kw name="Fakers" library="Utils">
<kw name="Name" library="FakerLibrary">
<var>${FakeNome}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20240525 02:31:33.099" level="INFO">${FakeNome} = Catherine Stephenson</msg>
<status status="PASS" starttime="20240525 02:31:33.098" endtime="20240525 02:31:33.099"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeNome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:33.100" level="INFO">${FakeNome} = Catherine Stephenson</msg>
<status status="PASS" starttime="20240525 02:31:33.099" endtime="20240525 02:31:33.100"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${FakeEmail}</var>
<msg timestamp="20240525 02:31:33.101" level="INFO">${FakeEmail} = nathan96@example.net</msg>
<status status="PASS" starttime="20240525 02:31:33.100" endtime="20240525 02:31:33.101"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeEmail}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:33.102" level="INFO">${FakeEmail} = nathan96@example.net</msg>
<status status="PASS" starttime="20240525 02:31:33.101" endtime="20240525 02:31:33.102"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${compSenha}</var>
<arg>text=##</arg>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:31:33.103" level="INFO">${compSenha} = 39</msg>
<status status="PASS" starttime="20240525 02:31:33.102" endtime="20240525 02:31:33.103"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${FakeSenha}</var>
<arg>Seubarriga</arg>
<arg>${compSenha}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240525 02:31:33.104" level="INFO">${FakeSenha} = Seubarriga 39</msg>
<status status="PASS" starttime="20240525 02:31:33.103" endtime="20240525 02:31:33.104"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeSenha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:33.105" level="INFO">${FakeSenha} = Seubarriga 39</msg>
<status status="PASS" starttime="20240525 02:31:33.104" endtime="20240525 02:31:33.105"/>
</kw>
<kw name="Sentence" library="FakerLibrary">
<var>${FakerDescricao}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20240525 02:31:33.106" level="INFO">${FakerDescricao} = Remember market significant discuss perhaps increase indicate.</msg>
<status status="PASS" starttime="20240525 02:31:33.105" endtime="20240525 02:31:33.106"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerDescricao}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:33.107" level="INFO">${FakerDescricao} = Remember market significant discuss perhaps increase indicate.</msg>
<status status="PASS" starttime="20240525 02:31:33.106" endtime="20240525 02:31:33.107"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${FakerValor}</var>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:31:33.107" level="INFO">${FakerValor} = 128</msg>
<status status="PASS" starttime="20240525 02:31:33.107" endtime="20240525 02:31:33.108"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerValor}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:33.108" level="INFO">${FakerValor} = 128</msg>
<status status="PASS" starttime="20240525 02:31:33.108" endtime="20240525 02:31:33.109"/>
</kw>
<status status="PASS" starttime="20240525 02:31:33.097" endtime="20240525 02:31:33.109"/>
</kw>
<kw name="Cadastro duplicado" library="services">
<arg>${token}</arg>
<arg>Testes Robot 10</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>1049</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:33.113" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 02:31:33.113" endtime="20240525 02:31:33.113"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:33.114" endtime="20240525 02:31:33.115"/>
</kw>
<status status="PASS" starttime="20240525 02:31:33.113" endtime="20240525 02:31:33.115"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:33.116" endtime="20240525 02:31:33.117"/>
</kw>
<status status="PASS" starttime="20240525 02:31:33.115" endtime="20240525 02:31:33.117"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:33.118" endtime="20240525 02:31:33.118"/>
</kw>
<status status="PASS" starttime="20240525 02:31:33.117" endtime="20240525 02:31:33.118"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:33.119" endtime="20240525 02:31:33.120"/>
</kw>
<status status="PASS" starttime="20240525 02:31:33.118" endtime="20240525 02:31:33.120"/>
</kw>
<msg timestamp="20240525 02:31:33.121" level="INFO">${bodyPostProd} = {'nome': 'Testes Robot 10', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 02:31:33.111" endtime="20240525 02:31:33.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:33.122" level="INFO">{'nome': 'Testes Robot 10', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 02:31:33.121" endtime="20240525 02:31:33.122"/>
</kw>
<kw name="HeadersAuth" library="services">
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:33.123" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN...</msg>
<status status="PASS" starttime="20240525 02:31:33.123" endtime="20240525 02:31:33.124"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:33.125" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN...</msg>
<status status="PASS" starttime="20240525 02:31:33.124" endtime="20240525 02:31:33.125"/>
</kw>
<status status="PASS" starttime="20240525 02:31:33.122" endtime="20240525 02:31:33.125"/>
</kw>
<kw name="Post Cadastrar" library="services">
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 02:31:34.128" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN6w78Q9h8qKQu4YgS9F2F0', 'Content-Length': '99', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Testes Robot 10", "preco": "1010", "descricao": "Teste Automation", "quantidade": "1049"}' 
 </msg>
<msg timestamp="20240525 02:31:34.128" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '804fb1ff28706a79af52de9061cd0b7c', 'Date': 'Sat, 25 May 2024 05:31:34 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "GLjYA0TpKwKl3flb"
} 
 </msg>
<msg timestamp="20240525 02:31:34.128" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:33.128" endtime="20240525 02:31:34.129"/>
</kw>
<status status="PASS" starttime="20240525 02:31:33.125" endtime="20240525 02:31:34.129"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 02:31:35.257" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN6w78Q9h8qKQu4YgS9F2F0', 'Content-Length': '99', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Testes Robot 10", "preco": "1010", "descricao": "Teste Automation", "quantidade": "1049"}' 
 </msg>
<msg timestamp="20240525 02:31:35.257" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=400, reason=Bad Request 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'e10ea1089131c39ed8e5118f991bf879;o=1', 'Date': 'Sat, 25 May 2024 05:31:35 GMT', 'Server': 'Google Frontend', 'Content-Length': '53'} 
 body={
    "message": "Já existe produto com esse nome"
} 
 </msg>
<msg timestamp="20240525 02:31:35.261" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:34.131" endtime="20240525 02:31:35.261"/>
</kw>
<msg timestamp="20240525 02:31:35.262" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:34.129" endtime="20240525 02:31:35.262"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:35.263" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:35.262" endtime="20240525 02:31:35.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:35.265" level="INFO">{'message': 'Já existe produto com esse nome'}</msg>
<status status="PASS" starttime="20240525 02:31:35.263" endtime="20240525 02:31:35.265"/>
</kw>
<status status="PASS" starttime="20240525 02:31:33.110" endtime="20240525 02:31:35.265"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>400</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 02:31:35.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 02:31:35.267" endtime="20240525 02:31:35.269"/>
</kw>
<status status="PASS" starttime="20240525 02:31:35.266" endtime="20240525 02:31:35.269"/>
</kw>
<kw name="E verificar a mensagem de validação" library="post_produtos">
<arg>Já existe produto com esse nome</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[message]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240525 02:31:35.271" endtime="20240525 02:31:35.273"/>
</kw>
<status status="PASS" starttime="20240525 02:31:35.270" endtime="20240525 02:31:35.273"/>
</kw>
<kw name="Excluir produto por nome" library="services">
<arg>Testes Robot 10</arg>
<kw name="Get in" library="services">
<var>${getResposta}</var>
<arg>/produtos/?nome=${parametros}</arg>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>headers=${headersLogin}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240525 02:31:36.380" level="INFO">GET Request : url=https://serverest.dev/produtos/?nome=Testes%20Robot%2010 
 path_url=/produtos/?nome=Testes%20Robot%2010 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20240525 02:31:36.380" level="INFO">GET Response : url=https://serverest.dev/produtos/?nome=Testes%20Robot%2010 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '6942f62069782cdc4fa817f8377d5903', 'Date': 'Sat, 25 May 2024 05:31:36 GMT', 'Server': 'Google Frontend', 'Content-Length': '249'} 
 body={
    "quantidade": 1,
    "produtos": [
        {
            "nome": "Testes Robot 10",
            "preco": 1010,
            "descricao": "Teste Automation",
            "quantidade": 1049,
            "_id": "GLjYA0TpKwKl3flb"
        }
    ]
} 
 </msg>
<msg timestamp="20240525 02:31:36.380" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:35.276" endtime="20240525 02:31:36.380"/>
</kw>
<msg timestamp="20240525 02:31:36.381" level="INFO">${getResposta} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:35.275" endtime="20240525 02:31:36.381"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${id}</var>
<arg>${getResposta.json()}[produtos][0][_id]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240525 02:31:36.383" level="INFO">${id} = GLjYA0TpKwKl3flb</msg>
<status status="PASS" starttime="20240525 02:31:36.381" endtime="20240525 02:31:36.383"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:36.384" level="INFO">${id} = GLjYA0TpKwKl3flb</msg>
<status status="PASS" starttime="20240525 02:31:36.383" endtime="20240525 02:31:36.384"/>
</kw>
<kw name="Delete in" library="services">
<var>${RESPOSTA_DEL}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${id}</arg>
<kw name="DELETE" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request.</doc>
<msg timestamp="20240525 02:31:37.404" level="INFO">DELETE Request : url=https://serverest.dev/produtos/GLjYA0TpKwKl3flb 
 path_url=/produtos/GLjYA0TpKwKl3flb 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN6w78Q9h8qKQu4YgS9F2F0', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20240525 02:31:37.405" level="INFO">DELETE Response : url=https://serverest.dev/produtos/GLjYA0TpKwKl3flb 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '16fab170ebd172968ede736a74c0308e', 'Date': 'Sat, 25 May 2024 05:31:37 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20240525 02:31:37.405" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:36.385" endtime="20240525 02:31:37.405"/>
</kw>
<msg timestamp="20240525 02:31:37.406" level="INFO">${RESPOSTA_DEL} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:36.384" endtime="20240525 02:31:37.406"/>
</kw>
<status status="PASS" starttime="20240525 02:31:35.274" endtime="20240525 02:31:37.406"/>
</kw>
<status status="PASS" starttime="20240525 02:31:33.096" endtime="20240525 02:31:37.407"/>
</test>
<test id="s1-s3-t5" name="Validar o campo Nome em Branco" line="35">
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>${token}</arg>
<arg>${EMPTY}</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>1049</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:37.416" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 02:31:37.416" endtime="20240525 02:31:37.416"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:37.418" endtime="20240525 02:31:37.418"/>
</kw>
<status status="PASS" starttime="20240525 02:31:37.417" endtime="20240525 02:31:37.418"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:37.419" endtime="20240525 02:31:37.420"/>
</kw>
<status status="PASS" starttime="20240525 02:31:37.419" endtime="20240525 02:31:37.420"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:37.421" endtime="20240525 02:31:37.422"/>
</kw>
<status status="PASS" starttime="20240525 02:31:37.420" endtime="20240525 02:31:37.422"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:37.423" endtime="20240525 02:31:37.423"/>
</kw>
<status status="PASS" starttime="20240525 02:31:37.422" endtime="20240525 02:31:37.423"/>
</kw>
<msg timestamp="20240525 02:31:37.424" level="INFO">${bodyPostProd} = {'nome': '', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 02:31:37.414" endtime="20240525 02:31:37.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:37.425" level="INFO">{'nome': '', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 02:31:37.424" endtime="20240525 02:31:37.425"/>
</kw>
<kw name="HeadersAuth" library="services">
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:37.426" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN...</msg>
<status status="PASS" starttime="20240525 02:31:37.426" endtime="20240525 02:31:37.426"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:37.427" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN...</msg>
<status status="PASS" starttime="20240525 02:31:37.427" endtime="20240525 02:31:37.427"/>
</kw>
<status status="PASS" starttime="20240525 02:31:37.425" endtime="20240525 02:31:37.428"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 02:31:38.531" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN6w78Q9h8qKQu4YgS9F2F0', 'Content-Length': '84', 'Content-Type': 'application/json'} 
 body=b'{"nome": "", "preco": "1010", "descricao": "Teste Automation", "quantidade": "1049"}' 
 </msg>
<msg timestamp="20240525 02:31:38.532" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=400, reason=Bad Request 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'b63adfd36c7c27a0a1b535e800581cd9', 'Date': 'Sat, 25 May 2024 05:31:38 GMT', 'Server': 'Google Frontend', 'Content-Length': '48'} 
 body={
    "nome": "nome não pode ficar em branco"
} 
 </msg>
<msg timestamp="20240525 02:31:38.537" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:37.429" endtime="20240525 02:31:38.537"/>
</kw>
<msg timestamp="20240525 02:31:38.537" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:37.428" endtime="20240525 02:31:38.537"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:38.538" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:38.538" endtime="20240525 02:31:38.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:38.541" level="INFO">{'nome': 'nome não pode ficar em branco'}</msg>
<status status="PASS" starttime="20240525 02:31:38.539" endtime="20240525 02:31:38.541"/>
</kw>
<status status="PASS" starttime="20240525 02:31:37.412" endtime="20240525 02:31:38.541"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>400</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 02:31:38.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 02:31:38.543" endtime="20240525 02:31:38.545"/>
</kw>
<status status="PASS" starttime="20240525 02:31:38.542" endtime="20240525 02:31:38.545"/>
</kw>
<kw name="E verificar a mensagem de validação do campo" library="post_produtos">
<arg>nome</arg>
<arg>nome não pode ficar em branco</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[${campo}]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240525 02:31:38.547" endtime="20240525 02:31:38.549"/>
</kw>
<status status="PASS" starttime="20240525 02:31:38.546" endtime="20240525 02:31:38.549"/>
</kw>
<status status="PASS" starttime="20240525 02:31:37.410" endtime="20240525 02:31:38.550"/>
</test>
<test id="s1-s3-t6" name="Validar o campo Nome Obrigatório" line="40">
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>${token}</arg>
<arg>None</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>1049</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:38.558" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 02:31:38.557" endtime="20240525 02:31:38.558"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240525 02:31:38.558" endtime="20240525 02:31:38.559"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:38.560" endtime="20240525 02:31:38.560"/>
</kw>
<status status="PASS" starttime="20240525 02:31:38.559" endtime="20240525 02:31:38.561"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:38.562" endtime="20240525 02:31:38.562"/>
</kw>
<status status="PASS" starttime="20240525 02:31:38.561" endtime="20240525 02:31:38.562"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:38.563" endtime="20240525 02:31:38.564"/>
</kw>
<status status="PASS" starttime="20240525 02:31:38.562" endtime="20240525 02:31:38.564"/>
</kw>
<msg timestamp="20240525 02:31:38.564" level="INFO">${bodyPostProd} = {'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 02:31:38.556" endtime="20240525 02:31:38.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:38.565" level="INFO">{'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 02:31:38.564" endtime="20240525 02:31:38.565"/>
</kw>
<kw name="HeadersAuth" library="services">
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:38.566" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN...</msg>
<status status="PASS" starttime="20240525 02:31:38.566" endtime="20240525 02:31:38.567"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:38.567" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN...</msg>
<status status="PASS" starttime="20240525 02:31:38.567" endtime="20240525 02:31:38.568"/>
</kw>
<status status="PASS" starttime="20240525 02:31:38.565" endtime="20240525 02:31:38.568"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 02:31:39.608" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN6w78Q9h8qKQu4YgS9F2F0', 'Content-Length': '72', 'Content-Type': 'application/json'} 
 body=b'{"preco": "1010", "descricao": "Teste Automation", "quantidade": "1049"}' 
 </msg>
<msg timestamp="20240525 02:31:39.608" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=400, reason=Bad Request 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '0efc8b1e8e9b3f9843c94e9d03ab06b8', 'Date': 'Sat, 25 May 2024 05:31:39 GMT', 'Server': 'Google Frontend', 'Content-Length': '38'} 
 body={
    "nome": "nome é obrigatório"
} 
 </msg>
<msg timestamp="20240525 02:31:39.608" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:38.570" endtime="20240525 02:31:39.608"/>
</kw>
<msg timestamp="20240525 02:31:39.609" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:38.568" endtime="20240525 02:31:39.609"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:39.610" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:39.609" endtime="20240525 02:31:39.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:39.612" level="INFO">{'nome': 'nome é obrigatório'}</msg>
<status status="PASS" starttime="20240525 02:31:39.610" endtime="20240525 02:31:39.612"/>
</kw>
<status status="PASS" starttime="20240525 02:31:38.555" endtime="20240525 02:31:39.612"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>400</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 02:31:39.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 02:31:39.614" endtime="20240525 02:31:39.616"/>
</kw>
<status status="PASS" starttime="20240525 02:31:39.613" endtime="20240525 02:31:39.616"/>
</kw>
<kw name="E verificar a mensagem de validação do campo" library="post_produtos">
<arg>nome</arg>
<arg>nome é obrigatório</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[${campo}]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240525 02:31:39.618" endtime="20240525 02:31:39.620"/>
</kw>
<status status="PASS" starttime="20240525 02:31:39.617" endtime="20240525 02:31:39.620"/>
</kw>
<status status="PASS" starttime="20240525 02:31:38.554" endtime="20240525 02:31:39.621"/>
</test>
<test id="s1-s3-t7" name="Validar o campo Preço em Branco" line="45">
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>${token}</arg>
<arg>nome</arg>
<arg>${EMPTY}</arg>
<arg>descricao</arg>
<arg>quantidade</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:39.630" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 02:31:39.630" endtime="20240525 02:31:39.630"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:39.631" endtime="20240525 02:31:39.632"/>
</kw>
<status status="PASS" starttime="20240525 02:31:39.631" endtime="20240525 02:31:39.632"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:39.633" endtime="20240525 02:31:39.634"/>
</kw>
<status status="PASS" starttime="20240525 02:31:39.632" endtime="20240525 02:31:39.634"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:39.635" endtime="20240525 02:31:39.635"/>
</kw>
<status status="PASS" starttime="20240525 02:31:39.634" endtime="20240525 02:31:39.635"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:39.637" endtime="20240525 02:31:39.638"/>
</kw>
<status status="PASS" starttime="20240525 02:31:39.636" endtime="20240525 02:31:39.638"/>
</kw>
<msg timestamp="20240525 02:31:39.638" level="INFO">${bodyPostProd} = {'nome': 'nome', 'preco': '', 'descricao': 'descricao', 'quantidade': 'quantidade'}</msg>
<status status="PASS" starttime="20240525 02:31:39.628" endtime="20240525 02:31:39.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:39.639" level="INFO">{'nome': 'nome', 'preco': '', 'descricao': 'descricao', 'quantidade': 'quantidade'}</msg>
<status status="PASS" starttime="20240525 02:31:39.639" endtime="20240525 02:31:39.639"/>
</kw>
<kw name="HeadersAuth" library="services">
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:39.641" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN...</msg>
<status status="PASS" starttime="20240525 02:31:39.640" endtime="20240525 02:31:39.641"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:39.642" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN...</msg>
<status status="PASS" starttime="20240525 02:31:39.642" endtime="20240525 02:31:39.642"/>
</kw>
<status status="PASS" starttime="20240525 02:31:39.640" endtime="20240525 02:31:39.643"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 02:31:40.722" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN6w78Q9h8qKQu4YgS9F2F0', 'Content-Length': '83', 'Content-Type': 'application/json'} 
 body=b'{"nome": "nome", "preco": "", "descricao": "descricao", "quantidade": "quantidade"}' 
 </msg>
<msg timestamp="20240525 02:31:40.722" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=400, reason=Bad Request 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '7ec37f8b7325b17a5adad0ccf8835b16', 'Date': 'Sat, 25 May 2024 05:31:41 GMT', 'Server': 'Google Frontend', 'Content-Length': '96'} 
 body={
    "preco": "preco deve ser um número",
    "quantidade": "quantidade deve ser um número"
} 
 </msg>
<msg timestamp="20240525 02:31:40.726" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:39.644" endtime="20240525 02:31:40.726"/>
</kw>
<msg timestamp="20240525 02:31:40.727" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:39.643" endtime="20240525 02:31:40.727"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:40.728" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:40.727" endtime="20240525 02:31:40.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:40.730" level="INFO">{'preco': 'preco deve ser um número', 'quantidade': 'quantidade deve ser um número'}</msg>
<status status="PASS" starttime="20240525 02:31:40.728" endtime="20240525 02:31:40.730"/>
</kw>
<status status="PASS" starttime="20240525 02:31:39.626" endtime="20240525 02:31:40.730"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>400</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 02:31:40.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 02:31:40.733" endtime="20240525 02:31:40.735"/>
</kw>
<status status="PASS" starttime="20240525 02:31:40.733" endtime="20240525 02:31:40.735"/>
</kw>
<kw name="E verificar a mensagem de validação do campo" library="post_produtos">
<arg>preco</arg>
<arg>preco deve ser um número</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[${campo}]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240525 02:31:40.736" endtime="20240525 02:31:40.738"/>
</kw>
<status status="PASS" starttime="20240525 02:31:40.736" endtime="20240525 02:31:40.739"/>
</kw>
<status status="PASS" starttime="20240525 02:31:39.625" endtime="20240525 02:31:40.741"/>
</test>
<test id="s1-s3-t8" name="Validar o campo Preço Obrigatório" line="50">
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>${token}</arg>
<arg>nome</arg>
<arg>None</arg>
<arg>descricao</arg>
<arg>quantidade</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:40.748" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 02:31:40.747" endtime="20240525 02:31:40.748"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:40.749" endtime="20240525 02:31:40.750"/>
</kw>
<status status="PASS" starttime="20240525 02:31:40.748" endtime="20240525 02:31:40.750"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240525 02:31:40.750" endtime="20240525 02:31:40.750"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:40.752" endtime="20240525 02:31:40.752"/>
</kw>
<status status="PASS" starttime="20240525 02:31:40.751" endtime="20240525 02:31:40.753"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:40.754" endtime="20240525 02:31:40.755"/>
</kw>
<status status="PASS" starttime="20240525 02:31:40.753" endtime="20240525 02:31:40.755"/>
</kw>
<msg timestamp="20240525 02:31:40.756" level="INFO">${bodyPostProd} = {'nome': 'nome', 'descricao': 'descricao', 'quantidade': 'quantidade'}</msg>
<status status="PASS" starttime="20240525 02:31:40.746" endtime="20240525 02:31:40.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:40.756" level="INFO">{'nome': 'nome', 'descricao': 'descricao', 'quantidade': 'quantidade'}</msg>
<status status="PASS" starttime="20240525 02:31:40.756" endtime="20240525 02:31:40.756"/>
</kw>
<kw name="HeadersAuth" library="services">
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:40.757" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN...</msg>
<status status="PASS" starttime="20240525 02:31:40.757" endtime="20240525 02:31:40.758"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:40.758" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN...</msg>
<status status="PASS" starttime="20240525 02:31:40.758" endtime="20240525 02:31:40.759"/>
</kw>
<status status="PASS" starttime="20240525 02:31:40.757" endtime="20240525 02:31:40.759"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 02:31:41.912" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN6w78Q9h8qKQu4YgS9F2F0', 'Content-Length': '70', 'Content-Type': 'application/json'} 
 body=b'{"nome": "nome", "descricao": "descricao", "quantidade": "quantidade"}' 
 </msg>
<msg timestamp="20240525 02:31:41.913" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=400, reason=Bad Request 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '67bd25533a476f81a81d20bc44d69356', 'Date': 'Sat, 25 May 2024 05:31:42 GMT', 'Server': 'Google Frontend', 'Content-Length': '92'} 
 body={
    "preco": "preco é obrigatório",
    "quantidade": "quantidade deve ser um número"
} 
 </msg>
<msg timestamp="20240525 02:31:41.914" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:40.760" endtime="20240525 02:31:41.914"/>
</kw>
<msg timestamp="20240525 02:31:41.916" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:40.759" endtime="20240525 02:31:41.916"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:41.918" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:41.917" endtime="20240525 02:31:41.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:41.923" level="INFO">{'preco': 'preco é obrigatório', 'quantidade': 'quantidade deve ser um número'}</msg>
<status status="PASS" starttime="20240525 02:31:41.919" endtime="20240525 02:31:41.923"/>
</kw>
<status status="PASS" starttime="20240525 02:31:40.745" endtime="20240525 02:31:41.923"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>400</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 02:31:41.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 02:31:41.926" endtime="20240525 02:31:41.928"/>
</kw>
<status status="PASS" starttime="20240525 02:31:41.925" endtime="20240525 02:31:41.928"/>
</kw>
<kw name="E verificar a mensagem de validação do campo" library="post_produtos">
<arg>preco</arg>
<arg>preco é obrigatório</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[${campo}]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240525 02:31:41.930" endtime="20240525 02:31:41.932"/>
</kw>
<status status="PASS" starttime="20240525 02:31:41.929" endtime="20240525 02:31:41.932"/>
</kw>
<status status="PASS" starttime="20240525 02:31:40.744" endtime="20240525 02:31:41.933"/>
</test>
<test id="s1-s3-t9" name="Validar o campo Descrição em Branco" line="55">
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>${token}</arg>
<arg>nome</arg>
<arg>preco</arg>
<arg>${EMPTY}</arg>
<arg>quantidade</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:41.945" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 02:31:41.944" endtime="20240525 02:31:41.946"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:41.947" endtime="20240525 02:31:41.948"/>
</kw>
<status status="PASS" starttime="20240525 02:31:41.946" endtime="20240525 02:31:41.948"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:41.949" endtime="20240525 02:31:41.950"/>
</kw>
<status status="PASS" starttime="20240525 02:31:41.948" endtime="20240525 02:31:41.950"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:41.952" endtime="20240525 02:31:41.952"/>
</kw>
<status status="PASS" starttime="20240525 02:31:41.951" endtime="20240525 02:31:41.953"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:41.954" endtime="20240525 02:31:41.955"/>
</kw>
<status status="PASS" starttime="20240525 02:31:41.953" endtime="20240525 02:31:41.955"/>
</kw>
<msg timestamp="20240525 02:31:41.956" level="INFO">${bodyPostProd} = {'nome': 'nome', 'preco': 'preco', 'descricao': '', 'quantidade': 'quantidade'}</msg>
<status status="PASS" starttime="20240525 02:31:41.942" endtime="20240525 02:31:41.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:41.956" level="INFO">{'nome': 'nome', 'preco': 'preco', 'descricao': '', 'quantidade': 'quantidade'}</msg>
<status status="PASS" starttime="20240525 02:31:41.956" endtime="20240525 02:31:41.956"/>
</kw>
<kw name="HeadersAuth" library="services">
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:41.959" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN...</msg>
<status status="PASS" starttime="20240525 02:31:41.958" endtime="20240525 02:31:41.959"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:41.960" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN...</msg>
<status status="PASS" starttime="20240525 02:31:41.959" endtime="20240525 02:31:41.960"/>
</kw>
<status status="PASS" starttime="20240525 02:31:41.956" endtime="20240525 02:31:41.960"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 02:31:43.137" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN6w78Q9h8qKQu4YgS9F2F0', 'Content-Length': '79', 'Content-Type': 'application/json'} 
 body=b'{"nome": "nome", "preco": "preco", "descricao": "", "quantidade": "quantidade"}' 
 </msg>
<msg timestamp="20240525 02:31:43.137" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=400, reason=Bad Request 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'e5125ad168a7f6497a3a3a9136de4907', 'Date': 'Sat, 25 May 2024 05:31:43 GMT', 'Server': 'Google Frontend', 'Content-Length': '152'} 
 body={
    "preco": "preco deve ser um número",
    "descricao": "descricao não pode ficar em branco",
    "quantidade": "quantidade deve ser um número"
} 
 </msg>
<msg timestamp="20240525 02:31:43.140" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:41.961" endtime="20240525 02:31:43.140"/>
</kw>
<msg timestamp="20240525 02:31:43.140" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:41.960" endtime="20240525 02:31:43.140"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:43.140" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:43.140" endtime="20240525 02:31:43.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:43.141" level="INFO">{'preco': 'preco deve ser um número', 'descricao': 'descricao não pode ficar em branco', 'quantidade': 'quantidade deve ser um número'}</msg>
<status status="PASS" starttime="20240525 02:31:43.140" endtime="20240525 02:31:43.141"/>
</kw>
<status status="PASS" starttime="20240525 02:31:41.940" endtime="20240525 02:31:43.141"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>400</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 02:31:43.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 02:31:43.142" endtime="20240525 02:31:43.142"/>
</kw>
<status status="PASS" starttime="20240525 02:31:43.141" endtime="20240525 02:31:43.143"/>
</kw>
<kw name="E verificar a mensagem de validação do campo" library="post_produtos">
<arg>descricao</arg>
<arg>descricao não pode ficar em branco</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[${campo}]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240525 02:31:43.143" endtime="20240525 02:31:43.144"/>
</kw>
<status status="PASS" starttime="20240525 02:31:43.143" endtime="20240525 02:31:43.144"/>
</kw>
<status status="PASS" starttime="20240525 02:31:41.938" endtime="20240525 02:31:43.144"/>
</test>
<test id="s1-s3-t10" name="Validar o campo Descrição Obrigatório" line="60">
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>${token}</arg>
<arg>nome</arg>
<arg>preco</arg>
<arg>None</arg>
<arg>quantidade</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:43.147" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 02:31:43.147" endtime="20240525 02:31:43.147"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:43.148" endtime="20240525 02:31:43.148"/>
</kw>
<status status="PASS" starttime="20240525 02:31:43.147" endtime="20240525 02:31:43.148"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:43.148" endtime="20240525 02:31:43.149"/>
</kw>
<status status="PASS" starttime="20240525 02:31:43.148" endtime="20240525 02:31:43.149"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240525 02:31:43.149" endtime="20240525 02:31:43.149"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:43.149" endtime="20240525 02:31:43.150"/>
</kw>
<status status="PASS" starttime="20240525 02:31:43.149" endtime="20240525 02:31:43.150"/>
</kw>
<msg timestamp="20240525 02:31:43.150" level="INFO">${bodyPostProd} = {'nome': 'nome', 'preco': 'preco', 'quantidade': 'quantidade'}</msg>
<status status="PASS" starttime="20240525 02:31:43.146" endtime="20240525 02:31:43.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:43.150" level="INFO">{'nome': 'nome', 'preco': 'preco', 'quantidade': 'quantidade'}</msg>
<status status="PASS" starttime="20240525 02:31:43.150" endtime="20240525 02:31:43.150"/>
</kw>
<kw name="HeadersAuth" library="services">
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:43.151" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN...</msg>
<status status="PASS" starttime="20240525 02:31:43.150" endtime="20240525 02:31:43.151"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:43.151" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN...</msg>
<status status="PASS" starttime="20240525 02:31:43.151" endtime="20240525 02:31:43.151"/>
</kw>
<status status="PASS" starttime="20240525 02:31:43.150" endtime="20240525 02:31:43.151"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 02:31:44.163" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN6w78Q9h8qKQu4YgS9F2F0', 'Content-Length': '62', 'Content-Type': 'application/json'} 
 body=b'{"nome": "nome", "preco": "preco", "quantidade": "quantidade"}' 
 </msg>
<msg timestamp="20240525 02:31:44.163" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=400, reason=Bad Request 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '27f9594374667fafa73f8052a8e7961e', 'Date': 'Sat, 25 May 2024 05:31:44 GMT', 'Server': 'Google Frontend', 'Content-Length': '142'} 
 body={
    "preco": "preco deve ser um número",
    "descricao": "descricao é obrigatório",
    "quantidade": "quantidade deve ser um número"
} 
 </msg>
<msg timestamp="20240525 02:31:44.163" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:43.152" endtime="20240525 02:31:44.163"/>
</kw>
<msg timestamp="20240525 02:31:44.164" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:43.151" endtime="20240525 02:31:44.164"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:44.165" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:44.164" endtime="20240525 02:31:44.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:44.167" level="INFO">{'preco': 'preco deve ser um número', 'descricao': 'descricao é obrigatório', 'quantidade': 'quantidade deve ser um número'}</msg>
<status status="PASS" starttime="20240525 02:31:44.165" endtime="20240525 02:31:44.167"/>
</kw>
<status status="PASS" starttime="20240525 02:31:43.146" endtime="20240525 02:31:44.167"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>400</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 02:31:44.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 02:31:44.169" endtime="20240525 02:31:44.170"/>
</kw>
<status status="PASS" starttime="20240525 02:31:44.168" endtime="20240525 02:31:44.170"/>
</kw>
<kw name="E verificar a mensagem de validação do campo" library="post_produtos">
<arg>descricao</arg>
<arg>descricao é obrigatório</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[${campo}]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240525 02:31:44.172" endtime="20240525 02:31:44.174"/>
</kw>
<status status="PASS" starttime="20240525 02:31:44.171" endtime="20240525 02:31:44.174"/>
</kw>
<status status="PASS" starttime="20240525 02:31:43.146" endtime="20240525 02:31:44.175"/>
</test>
<test id="s1-s3-t11" name="Validar o campo Quantidade em Branco" line="65">
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>${token}</arg>
<arg>nome</arg>
<arg>preco</arg>
<arg>descricao</arg>
<arg>${EMPTY}</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:44.184" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 02:31:44.184" endtime="20240525 02:31:44.184"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:44.185" endtime="20240525 02:31:44.186"/>
</kw>
<status status="PASS" starttime="20240525 02:31:44.184" endtime="20240525 02:31:44.186"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:44.187" endtime="20240525 02:31:44.187"/>
</kw>
<status status="PASS" starttime="20240525 02:31:44.186" endtime="20240525 02:31:44.187"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:44.188" endtime="20240525 02:31:44.189"/>
</kw>
<status status="PASS" starttime="20240525 02:31:44.188" endtime="20240525 02:31:44.189"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:44.190" endtime="20240525 02:31:44.191"/>
</kw>
<status status="PASS" starttime="20240525 02:31:44.189" endtime="20240525 02:31:44.191"/>
</kw>
<msg timestamp="20240525 02:31:44.192" level="INFO">${bodyPostProd} = {'nome': 'nome', 'preco': 'preco', 'descricao': 'descricao', 'quantidade': ''}</msg>
<status status="PASS" starttime="20240525 02:31:44.182" endtime="20240525 02:31:44.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:44.193" level="INFO">{'nome': 'nome', 'preco': 'preco', 'descricao': 'descricao', 'quantidade': ''}</msg>
<status status="PASS" starttime="20240525 02:31:44.192" endtime="20240525 02:31:44.193"/>
</kw>
<kw name="HeadersAuth" library="services">
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:44.195" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN...</msg>
<status status="PASS" starttime="20240525 02:31:44.194" endtime="20240525 02:31:44.195"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:44.196" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN...</msg>
<status status="PASS" starttime="20240525 02:31:44.195" endtime="20240525 02:31:44.196"/>
</kw>
<status status="PASS" starttime="20240525 02:31:44.193" endtime="20240525 02:31:44.196"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 02:31:45.186" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN6w78Q9h8qKQu4YgS9F2F0', 'Content-Length': '78', 'Content-Type': 'application/json'} 
 body=b'{"nome": "nome", "preco": "preco", "descricao": "descricao", "quantidade": ""}' 
 </msg>
<msg timestamp="20240525 02:31:45.186" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=400, reason=Bad Request 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '0799a5dd6b391c5b96445efa11f2d8fd', 'Date': 'Sat, 25 May 2024 05:31:45 GMT', 'Server': 'Google Frontend', 'Content-Length': '96'} 
 body={
    "preco": "preco deve ser um número",
    "quantidade": "quantidade deve ser um número"
} 
 </msg>
<msg timestamp="20240525 02:31:45.187" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:44.197" endtime="20240525 02:31:45.187"/>
</kw>
<msg timestamp="20240525 02:31:45.188" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:44.196" endtime="20240525 02:31:45.188"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:45.188" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:45.188" endtime="20240525 02:31:45.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:45.189" level="INFO">{'preco': 'preco deve ser um número', 'quantidade': 'quantidade deve ser um número'}</msg>
<status status="PASS" starttime="20240525 02:31:45.188" endtime="20240525 02:31:45.189"/>
</kw>
<status status="PASS" starttime="20240525 02:31:44.180" endtime="20240525 02:31:45.189"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>400</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 02:31:45.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 02:31:45.190" endtime="20240525 02:31:45.190"/>
</kw>
<status status="PASS" starttime="20240525 02:31:45.189" endtime="20240525 02:31:45.190"/>
</kw>
<kw name="E verificar a mensagem de validação do campo" library="post_produtos">
<arg>quantidade</arg>
<arg>quantidade deve ser um número</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[${campo}]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240525 02:31:45.191" endtime="20240525 02:31:45.192"/>
</kw>
<status status="PASS" starttime="20240525 02:31:45.191" endtime="20240525 02:31:45.192"/>
</kw>
<status status="PASS" starttime="20240525 02:31:44.178" endtime="20240525 02:31:45.192"/>
</test>
<test id="s1-s3-t12" name="Validar o campo Quantidade Obrigatório" line="70">
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>${token}</arg>
<arg>nome</arg>
<arg>preco</arg>
<arg>descricao</arg>
<arg>None</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:45.196" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 02:31:45.195" endtime="20240525 02:31:45.196"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:45.196" endtime="20240525 02:31:45.196"/>
</kw>
<status status="PASS" starttime="20240525 02:31:45.196" endtime="20240525 02:31:45.196"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:45.197" endtime="20240525 02:31:45.197"/>
</kw>
<status status="PASS" starttime="20240525 02:31:45.196" endtime="20240525 02:31:45.197"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:45.197" endtime="20240525 02:31:45.198"/>
</kw>
<status status="PASS" starttime="20240525 02:31:45.197" endtime="20240525 02:31:45.198"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240525 02:31:45.198" endtime="20240525 02:31:45.198"/>
</kw>
<msg timestamp="20240525 02:31:45.198" level="INFO">${bodyPostProd} = {'nome': 'nome', 'preco': 'preco', 'descricao': 'descricao'}</msg>
<status status="PASS" starttime="20240525 02:31:45.195" endtime="20240525 02:31:45.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:45.198" level="INFO">{'nome': 'nome', 'preco': 'preco', 'descricao': 'descricao'}</msg>
<status status="PASS" starttime="20240525 02:31:45.198" endtime="20240525 02:31:45.198"/>
</kw>
<kw name="HeadersAuth" library="services">
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:45.199" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN...</msg>
<status status="PASS" starttime="20240525 02:31:45.199" endtime="20240525 02:31:45.199"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:45.199" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN...</msg>
<status status="PASS" starttime="20240525 02:31:45.199" endtime="20240525 02:31:45.199"/>
</kw>
<status status="PASS" starttime="20240525 02:31:45.198" endtime="20240525 02:31:45.200"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 02:31:46.108" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTA4OCwiZXhwIjoxNzE2NjE1Njg4fQ.RFrgXkoxesr1iYC3QqYqdN6w78Q9h8qKQu4YgS9F2F0', 'Content-Length': '60', 'Content-Type': 'application/json'} 
 body=b'{"nome": "nome", "preco": "preco", "descricao": "descricao"}' 
 </msg>
<msg timestamp="20240525 02:31:46.108" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=400, reason=Bad Request 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '04be381f75fcf7218f750bcf199b35d7;o=1', 'Date': 'Sat, 25 May 2024 05:31:46 GMT', 'Server': 'Google Frontend', 'Content-Length': '92'} 
 body={
    "preco": "preco deve ser um número",
    "quantidade": "quantidade é obrigatório"
} 
 </msg>
<msg timestamp="20240525 02:31:46.109" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:45.200" endtime="20240525 02:31:46.109"/>
</kw>
<msg timestamp="20240525 02:31:46.109" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:45.200" endtime="20240525 02:31:46.109"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:46.110" level="INFO">${RESPOSTA} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:46.109" endtime="20240525 02:31:46.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:46.111" level="INFO">{'preco': 'preco deve ser um número', 'quantidade': 'quantidade é obrigatório'}</msg>
<status status="PASS" starttime="20240525 02:31:46.110" endtime="20240525 02:31:46.112"/>
</kw>
<status status="PASS" starttime="20240525 02:31:45.194" endtime="20240525 02:31:46.112"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>400</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 02:31:46.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 02:31:46.113" endtime="20240525 02:31:46.115"/>
</kw>
<status status="PASS" starttime="20240525 02:31:46.112" endtime="20240525 02:31:46.115"/>
</kw>
<kw name="E verificar a mensagem de validação do campo" library="post_produtos">
<arg>quantidade</arg>
<arg>quantidade é obrigatório</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[${campo}]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240525 02:31:46.116" endtime="20240525 02:31:46.117"/>
</kw>
<status status="PASS" starttime="20240525 02:31:46.115" endtime="20240525 02:31:46.117"/>
</kw>
<status status="PASS" starttime="20240525 02:31:45.194" endtime="20240525 02:31:46.118"/>
</test>
<doc>Documentacao do POST da API: ServeRest</doc>
<status status="PASS" starttime="20240525 02:31:27.194" endtime="20240525 02:31:46.120"/>
</suite>
<suite id="s1-s4" name="04 - Put Produtos" source="C:\ProjetosC\serveRest-robot\features\04 - put_produtos.robot">
<kw name="Token" library="services" type="SETUP">
<kw name="Conectar a API" library="services">
<arg>/login</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>apiServeRest</arg>
<arg>${base_url}</arg>
<arg>${headersLogin}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20240525 02:31:46.162" level="INFO">Creating Session using : alias=apiServeRest, url=https://serverest.dev, headers={'accept': 'application/json', 'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20240525 02:31:46.161" endtime="20240525 02:31:46.162"/>
</kw>
<status status="PASS" starttime="20240525 02:31:46.161" endtime="20240525 02:31:46.162"/>
</kw>
<kw name="Quando entrar com usuario e senha" library="login">
<kw name="Post in" library="services">
<var>${RESPOSTA}</var>
<arg>/login</arg>
<arg>${bodyLOGIN}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headersLogin}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 02:31:47.131" level="INFO">POST Request : url=https://serverest.dev/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "sandroteste@qa.com", "password": "testeQA"}' 
 </msg>
<msg timestamp="20240525 02:31:47.131" level="INFO">POST Response : url=https://serverest.dev/login 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '9db74a51a958eef06f3986ed23f876b3', 'Date': 'Sat, 25 May 2024 05:31:47 GMT', 'Server': 'Google Frontend', 'Content-Length': '275'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTEwNywiZXhwIjoxNzE2NjE1NzA3fQ.C5xkdn8C8bOur4QLOnK0m8YdpfDCaZz-NWfJNLZ8gZc"
} 
 </msg>
<msg timestamp="20240525 02:31:47.133" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:46.163" endtime="20240525 02:31:47.133"/>
</kw>
<msg timestamp="20240525 02:31:47.133" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:46.163" endtime="20240525 02:31:47.133"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${token}</var>
<arg>${RESPOSTA.json()}[authorization]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240525 02:31:47.134" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTEwNywiZXhwIjoxNzE2NjE1NzA3fQ.C5xkdn8C8bOur4QLOnK0m8YdpfDCaZz-NWfJNLZ8g...</msg>
<status status="PASS" starttime="20240525 02:31:47.133" endtime="20240525 02:31:47.134"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${token}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240525 02:31:47.135" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTEwNywiZXhwIjoxNzE2NjE1NzA3fQ.C5xkdn8C8bOur4QLOnK0m8YdpfDCaZz-NWfJNLZ8g...</msg>
<status status="PASS" starttime="20240525 02:31:47.134" endtime="20240525 02:31:47.135"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240525 02:31:47.135" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:47.135" endtime="20240525 02:31:47.135"/>
</kw>
<status status="PASS" starttime="20240525 02:31:46.163" endtime="20240525 02:31:47.135"/>
</kw>
<status status="PASS" starttime="20240525 02:31:46.160" endtime="20240525 02:31:47.135"/>
</kw>
<test id="s1-s4-t1" name="Atualizar um produto com sucesso" line="9">
<kw name="Fakers" library="Utils">
<kw name="Name" library="FakerLibrary">
<var>${FakeNome}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20240525 02:31:47.137" level="INFO">${FakeNome} = Andrew Roberson</msg>
<status status="PASS" starttime="20240525 02:31:47.136" endtime="20240525 02:31:47.137"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeNome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:47.137" level="INFO">${FakeNome} = Andrew Roberson</msg>
<status status="PASS" starttime="20240525 02:31:47.137" endtime="20240525 02:31:47.137"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${FakeEmail}</var>
<msg timestamp="20240525 02:31:47.138" level="INFO">${FakeEmail} = velasquezrobert@example.com</msg>
<status status="PASS" starttime="20240525 02:31:47.137" endtime="20240525 02:31:47.138"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeEmail}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:47.138" level="INFO">${FakeEmail} = velasquezrobert@example.com</msg>
<status status="PASS" starttime="20240525 02:31:47.138" endtime="20240525 02:31:47.138"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${compSenha}</var>
<arg>text=##</arg>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:31:47.139" level="INFO">${compSenha} = 07</msg>
<status status="PASS" starttime="20240525 02:31:47.138" endtime="20240525 02:31:47.139"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${FakeSenha}</var>
<arg>Seubarriga</arg>
<arg>${compSenha}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240525 02:31:47.139" level="INFO">${FakeSenha} = Seubarriga 07</msg>
<status status="PASS" starttime="20240525 02:31:47.139" endtime="20240525 02:31:47.139"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeSenha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:47.139" level="INFO">${FakeSenha} = Seubarriga 07</msg>
<status status="PASS" starttime="20240525 02:31:47.139" endtime="20240525 02:31:47.139"/>
</kw>
<kw name="Sentence" library="FakerLibrary">
<var>${FakerDescricao}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20240525 02:31:47.140" level="INFO">${FakerDescricao} = Wall lose green both able.</msg>
<status status="PASS" starttime="20240525 02:31:47.139" endtime="20240525 02:31:47.140"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerDescricao}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:47.140" level="INFO">${FakerDescricao} = Wall lose green both able.</msg>
<status status="PASS" starttime="20240525 02:31:47.140" endtime="20240525 02:31:47.140"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${FakerValor}</var>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:31:47.140" level="INFO">${FakerValor} = 590</msg>
<status status="PASS" starttime="20240525 02:31:47.140" endtime="20240525 02:31:47.141"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerValor}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:47.141" level="INFO">${FakerValor} = 590</msg>
<status status="PASS" starttime="20240525 02:31:47.141" endtime="20240525 02:31:47.141"/>
</kw>
<status status="PASS" starttime="20240525 02:31:47.136" endtime="20240525 02:31:47.141"/>
</kw>
<kw name="Dado que tenha uma massa configurada" library="delete_produtos">
<kw name="Cadastro produtos com sucesso" library="services">
<kw name="Fakers" library="Utils">
<kw name="Name" library="FakerLibrary">
<var>${FakeNome}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20240525 02:31:47.142" level="INFO">${FakeNome} = Daniel Lynch</msg>
<status status="PASS" starttime="20240525 02:31:47.142" endtime="20240525 02:31:47.142"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeNome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:47.143" level="INFO">${FakeNome} = Daniel Lynch</msg>
<status status="PASS" starttime="20240525 02:31:47.143" endtime="20240525 02:31:47.143"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${FakeEmail}</var>
<msg timestamp="20240525 02:31:47.143" level="INFO">${FakeEmail} = joshua79@example.com</msg>
<status status="PASS" starttime="20240525 02:31:47.143" endtime="20240525 02:31:47.143"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeEmail}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:47.144" level="INFO">${FakeEmail} = joshua79@example.com</msg>
<status status="PASS" starttime="20240525 02:31:47.143" endtime="20240525 02:31:47.144"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${compSenha}</var>
<arg>text=##</arg>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:31:47.144" level="INFO">${compSenha} = 57</msg>
<status status="PASS" starttime="20240525 02:31:47.144" endtime="20240525 02:31:47.144"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${FakeSenha}</var>
<arg>Seubarriga</arg>
<arg>${compSenha}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240525 02:31:47.144" level="INFO">${FakeSenha} = Seubarriga 57</msg>
<status status="PASS" starttime="20240525 02:31:47.144" endtime="20240525 02:31:47.144"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeSenha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:47.145" level="INFO">${FakeSenha} = Seubarriga 57</msg>
<status status="PASS" starttime="20240525 02:31:47.144" endtime="20240525 02:31:47.145"/>
</kw>
<kw name="Sentence" library="FakerLibrary">
<var>${FakerDescricao}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20240525 02:31:47.145" level="INFO">${FakerDescricao} = Special exactly coach year side pretty.</msg>
<status status="PASS" starttime="20240525 02:31:47.145" endtime="20240525 02:31:47.145"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerDescricao}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:47.145" level="INFO">${FakerDescricao} = Special exactly coach year side pretty.</msg>
<status status="PASS" starttime="20240525 02:31:47.145" endtime="20240525 02:31:47.145"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${FakerValor}</var>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:31:47.146" level="INFO">${FakerValor} = 217</msg>
<status status="PASS" starttime="20240525 02:31:47.145" endtime="20240525 02:31:47.146"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerValor}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:47.146" level="INFO">${FakerValor} = 217</msg>
<status status="PASS" starttime="20240525 02:31:47.146" endtime="20240525 02:31:47.146"/>
</kw>
<status status="PASS" starttime="20240525 02:31:47.141" endtime="20240525 02:31:47.146"/>
</kw>
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>${token}</arg>
<arg>${FakeNome}${FakerValor}</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>1049</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:47.147" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 02:31:47.147" endtime="20240525 02:31:47.147"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:47.148" endtime="20240525 02:31:47.148"/>
</kw>
<status status="PASS" starttime="20240525 02:31:47.148" endtime="20240525 02:31:47.148"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:47.148" endtime="20240525 02:31:47.149"/>
</kw>
<status status="PASS" starttime="20240525 02:31:47.148" endtime="20240525 02:31:47.149"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:47.149" endtime="20240525 02:31:47.149"/>
</kw>
<status status="PASS" starttime="20240525 02:31:47.149" endtime="20240525 02:31:47.149"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:47.150" endtime="20240525 02:31:47.150"/>
</kw>
<status status="PASS" starttime="20240525 02:31:47.149" endtime="20240525 02:31:47.150"/>
</kw>
<msg timestamp="20240525 02:31:47.150" level="INFO">${bodyPostProd} = {'nome': 'Daniel Lynch217', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 02:31:47.147" endtime="20240525 02:31:47.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:47.150" level="INFO">{'nome': 'Daniel Lynch217', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 02:31:47.150" endtime="20240525 02:31:47.150"/>
</kw>
<kw name="HeadersAuth" library="services">
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:47.151" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTEwNywiZXhwIjoxNzE2NjE1NzA3fQ.C5xkdn8C8bOur4QLOnK0m8...</msg>
<status status="PASS" starttime="20240525 02:31:47.151" endtime="20240525 02:31:47.151"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:47.152" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTEwNywiZXhwIjoxNzE2NjE1NzA3fQ.C5xkdn8C8bOur4QLOnK0m8...</msg>
<status status="PASS" starttime="20240525 02:31:47.151" endtime="20240525 02:31:47.152"/>
</kw>
<status status="PASS" starttime="20240525 02:31:47.151" endtime="20240525 02:31:47.152"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 02:31:48.158" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTEwNywiZXhwIjoxNzE2NjE1NzA3fQ.C5xkdn8C8bOur4QLOnK0m8YdpfDCaZz-NWfJNLZ8gZc', 'Content-Length': '99', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Daniel Lynch217", "preco": "1010", "descricao": "Teste Automation", "quantidade": "1049"}' 
 </msg>
<msg timestamp="20240525 02:31:48.158" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '16f473f90bfee77802205a9e94be84fe', 'Date': 'Sat, 25 May 2024 05:31:48 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "csunVNcFNmDdrWoe"
} 
 </msg>
<msg timestamp="20240525 02:31:48.159" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:47.152" endtime="20240525 02:31:48.159"/>
</kw>
<msg timestamp="20240525 02:31:48.159" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:47.152" endtime="20240525 02:31:48.159"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:48.160" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:48.160" endtime="20240525 02:31:48.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:48.162" level="INFO">{'message': 'Cadastro realizado com sucesso', '_id': 'csunVNcFNmDdrWoe'}</msg>
<status status="PASS" starttime="20240525 02:31:48.160" endtime="20240525 02:31:48.162"/>
</kw>
<status status="PASS" starttime="20240525 02:31:47.146" endtime="20240525 02:31:48.162"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<arg>${RESPOSTA.json()}[_id]</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:48.165" level="INFO">${id} = csunVNcFNmDdrWoe</msg>
<status status="PASS" starttime="20240525 02:31:48.163" endtime="20240525 02:31:48.165"/>
</kw>
<status status="PASS" starttime="20240525 02:31:47.141" endtime="20240525 02:31:48.165"/>
</kw>
<status status="PASS" starttime="20240525 02:31:47.141" endtime="20240525 02:31:48.165"/>
</kw>
<kw name="Quando enviar uma requisição Put" library="put_produtos">
<arg>${token}</arg>
<arg>${FakeNome}${FakerValor}</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>${FakerValor}</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:48.170" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 02:31:48.169" endtime="20240525 02:31:48.170"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:48.171" endtime="20240525 02:31:48.172"/>
</kw>
<status status="PASS" starttime="20240525 02:31:48.170" endtime="20240525 02:31:48.172"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:48.173" endtime="20240525 02:31:48.173"/>
</kw>
<status status="PASS" starttime="20240525 02:31:48.172" endtime="20240525 02:31:48.173"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:48.174" endtime="20240525 02:31:48.175"/>
</kw>
<status status="PASS" starttime="20240525 02:31:48.173" endtime="20240525 02:31:48.175"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:48.176" endtime="20240525 02:31:48.176"/>
</kw>
<status status="PASS" starttime="20240525 02:31:48.175" endtime="20240525 02:31:48.176"/>
</kw>
<msg timestamp="20240525 02:31:48.177" level="INFO">${bodyPostProd} = {'nome': 'Daniel Lynch217', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '217'}</msg>
<status status="PASS" starttime="20240525 02:31:48.168" endtime="20240525 02:31:48.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:48.177" level="INFO">{'nome': 'Daniel Lynch217', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '217'}</msg>
<status status="PASS" starttime="20240525 02:31:48.177" endtime="20240525 02:31:48.177"/>
</kw>
<kw name="HeadersAuth" library="services">
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:48.179" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTEwNywiZXhwIjoxNzE2NjE1NzA3fQ.C5xkdn8C8bOur4QLOnK0m8...</msg>
<status status="PASS" starttime="20240525 02:31:48.178" endtime="20240525 02:31:48.179"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:48.180" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTEwNywiZXhwIjoxNzE2NjE1NzA3fQ.C5xkdn8C8bOur4QLOnK0m8...</msg>
<status status="PASS" starttime="20240525 02:31:48.179" endtime="20240525 02:31:48.180"/>
</kw>
<status status="PASS" starttime="20240525 02:31:48.178" endtime="20240525 02:31:48.180"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${nome}</var>
<arg>${bodyPostProd['nome']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240525 02:31:48.182" level="INFO">${nome} = Daniel Lynch217</msg>
<status status="PASS" starttime="20240525 02:31:48.180" endtime="20240525 02:31:48.182"/>
</kw>
<kw name="Put in" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<arg>${id}</arg>
<kw name="PUT" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request.</doc>
<msg timestamp="20240525 02:31:49.195" level="INFO">PUT Request : url=https://serverest.dev/produtos/csunVNcFNmDdrWoe 
 path_url=/produtos/csunVNcFNmDdrWoe 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTEwNywiZXhwIjoxNzE2NjE1NzA3fQ.C5xkdn8C8bOur4QLOnK0m8YdpfDCaZz-NWfJNLZ8gZc', 'Content-Length': '98', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Daniel Lynch217", "preco": "1010", "descricao": "Teste Automation", "quantidade": "217"}' 
 </msg>
<msg timestamp="20240525 02:31:49.195" level="INFO">PUT Response : url=https://serverest.dev/produtos/csunVNcFNmDdrWoe 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'c1e6cd792fec50baa5645941d675a1c3', 'Date': 'Sat, 25 May 2024 05:31:49 GMT', 'Server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg timestamp="20240525 02:31:49.195" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:48.184" endtime="20240525 02:31:49.195"/>
</kw>
<msg timestamp="20240525 02:31:49.196" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:48.182" endtime="20240525 02:31:49.196"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:49.196" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:49.196" endtime="20240525 02:31:49.197"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${nome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:49.197" level="INFO">${nome} = Daniel Lynch217</msg>
<status status="PASS" starttime="20240525 02:31:49.197" endtime="20240525 02:31:49.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:49.199" level="INFO">{'message': 'Registro alterado com sucesso'}</msg>
<status status="PASS" starttime="20240525 02:31:49.198" endtime="20240525 02:31:49.199"/>
</kw>
<status status="PASS" starttime="20240525 02:31:48.166" endtime="20240525 02:31:49.199"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>200</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 02:31:49.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 02:31:49.201" endtime="20240525 02:31:49.203"/>
</kw>
<status status="PASS" starttime="20240525 02:31:49.201" endtime="20240525 02:31:49.204"/>
</kw>
<kw name="E verificar a mensagem de validação" library="post_produtos">
<arg>Registro alterado com sucesso</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[message]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240525 02:31:49.206" endtime="20240525 02:31:49.207"/>
</kw>
<status status="PASS" starttime="20240525 02:31:49.205" endtime="20240525 02:31:49.207"/>
</kw>
<kw name="Excluir produto por nome" library="services">
<arg>${nome}</arg>
<kw name="Get in" library="services">
<var>${getResposta}</var>
<arg>/produtos/?nome=${parametros}</arg>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>headers=${headersLogin}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240525 02:31:50.206" level="INFO">GET Request : url=https://serverest.dev/produtos/?nome=Daniel%20Lynch217 
 path_url=/produtos/?nome=Daniel%20Lynch217 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20240525 02:31:50.206" level="INFO">GET Response : url=https://serverest.dev/produtos/?nome=Daniel%20Lynch217 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'd025331c32b9930a971292ec9bafa11c', 'Date': 'Sat, 25 May 2024 05:31:50 GMT', 'Server': 'Google Frontend', 'Content-Length': '248'} 
 body={
    "quantidade": 1,
    "produtos": [
        {
            "nome": "Daniel Lynch217",
            "preco": 1010,
            "descricao": "Teste Automation",
            "quantidade": 217,
            "_id": "csunVNcFNmDdrWoe"
        }
    ]
} 
 </msg>
<msg timestamp="20240525 02:31:50.206" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:49.210" endtime="20240525 02:31:50.206"/>
</kw>
<msg timestamp="20240525 02:31:50.207" level="INFO">${getResposta} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:49.209" endtime="20240525 02:31:50.207"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${id}</var>
<arg>${getResposta.json()}[produtos][0][_id]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240525 02:31:50.210" level="INFO">${id} = csunVNcFNmDdrWoe</msg>
<status status="PASS" starttime="20240525 02:31:50.208" endtime="20240525 02:31:50.210"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:50.211" level="INFO">${id} = csunVNcFNmDdrWoe</msg>
<status status="PASS" starttime="20240525 02:31:50.210" endtime="20240525 02:31:50.211"/>
</kw>
<kw name="Delete in" library="services">
<var>${RESPOSTA_DEL}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${id}</arg>
<kw name="DELETE" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request.</doc>
<msg timestamp="20240525 02:31:51.228" level="INFO">DELETE Request : url=https://serverest.dev/produtos/csunVNcFNmDdrWoe 
 path_url=/produtos/csunVNcFNmDdrWoe 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTEwNywiZXhwIjoxNzE2NjE1NzA3fQ.C5xkdn8C8bOur4QLOnK0m8YdpfDCaZz-NWfJNLZ8gZc', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20240525 02:31:51.228" level="INFO">DELETE Response : url=https://serverest.dev/produtos/csunVNcFNmDdrWoe 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '2b332715ba5dbf4e4e393464bf3d461e', 'Date': 'Sat, 25 May 2024 05:31:51 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20240525 02:31:51.229" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:50.212" endtime="20240525 02:31:51.229"/>
</kw>
<msg timestamp="20240525 02:31:51.229" level="INFO">${RESPOSTA_DEL} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:50.211" endtime="20240525 02:31:51.229"/>
</kw>
<status status="PASS" starttime="20240525 02:31:49.208" endtime="20240525 02:31:51.229"/>
</kw>
<status status="PASS" starttime="20240525 02:31:47.135" endtime="20240525 02:31:51.230"/>
</test>
<test id="s1-s4-t2" name="Atualizar um produto sem o Token" line="17">
<kw name="Fakers" library="Utils">
<kw name="Name" library="FakerLibrary">
<var>${FakeNome}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20240525 02:31:51.237" level="INFO">${FakeNome} = Christina Rogers</msg>
<status status="PASS" starttime="20240525 02:31:51.235" endtime="20240525 02:31:51.237"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeNome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:51.238" level="INFO">${FakeNome} = Christina Rogers</msg>
<status status="PASS" starttime="20240525 02:31:51.237" endtime="20240525 02:31:51.238"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${FakeEmail}</var>
<msg timestamp="20240525 02:31:51.239" level="INFO">${FakeEmail} = garciaemily@example.org</msg>
<status status="PASS" starttime="20240525 02:31:51.238" endtime="20240525 02:31:51.239"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeEmail}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:51.241" level="INFO">${FakeEmail} = garciaemily@example.org</msg>
<status status="PASS" starttime="20240525 02:31:51.240" endtime="20240525 02:31:51.241"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${compSenha}</var>
<arg>text=##</arg>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:31:51.242" level="INFO">${compSenha} = 64</msg>
<status status="PASS" starttime="20240525 02:31:51.241" endtime="20240525 02:31:51.242"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${FakeSenha}</var>
<arg>Seubarriga</arg>
<arg>${compSenha}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240525 02:31:51.243" level="INFO">${FakeSenha} = Seubarriga 64</msg>
<status status="PASS" starttime="20240525 02:31:51.242" endtime="20240525 02:31:51.243"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeSenha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:51.244" level="INFO">${FakeSenha} = Seubarriga 64</msg>
<status status="PASS" starttime="20240525 02:31:51.243" endtime="20240525 02:31:51.244"/>
</kw>
<kw name="Sentence" library="FakerLibrary">
<var>${FakerDescricao}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20240525 02:31:51.245" level="INFO">${FakerDescricao} = Purpose reveal education.</msg>
<status status="PASS" starttime="20240525 02:31:51.245" endtime="20240525 02:31:51.245"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerDescricao}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:51.247" level="INFO">${FakerDescricao} = Purpose reveal education.</msg>
<status status="PASS" starttime="20240525 02:31:51.246" endtime="20240525 02:31:51.247"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${FakerValor}</var>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:31:51.248" level="INFO">${FakerValor} = 719</msg>
<status status="PASS" starttime="20240525 02:31:51.247" endtime="20240525 02:31:51.248"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerValor}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:51.249" level="INFO">${FakerValor} = 719</msg>
<status status="PASS" starttime="20240525 02:31:51.248" endtime="20240525 02:31:51.249"/>
</kw>
<status status="PASS" starttime="20240525 02:31:51.234" endtime="20240525 02:31:51.249"/>
</kw>
<kw name="Dado que tenha uma massa configurada" library="delete_produtos">
<kw name="Cadastro produtos com sucesso" library="services">
<kw name="Fakers" library="Utils">
<kw name="Name" library="FakerLibrary">
<var>${FakeNome}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20240525 02:31:51.255" level="INFO">${FakeNome} = Madison Gomez</msg>
<status status="PASS" starttime="20240525 02:31:51.254" endtime="20240525 02:31:51.255"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeNome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:51.257" level="INFO">${FakeNome} = Madison Gomez</msg>
<status status="PASS" starttime="20240525 02:31:51.256" endtime="20240525 02:31:51.257"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${FakeEmail}</var>
<msg timestamp="20240525 02:31:51.259" level="INFO">${FakeEmail} = langmolly@example.com</msg>
<status status="PASS" starttime="20240525 02:31:51.257" endtime="20240525 02:31:51.259"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeEmail}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:51.261" level="INFO">${FakeEmail} = langmolly@example.com</msg>
<status status="PASS" starttime="20240525 02:31:51.260" endtime="20240525 02:31:51.261"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${compSenha}</var>
<arg>text=##</arg>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:31:51.271" level="INFO">${compSenha} = 24</msg>
<status status="PASS" starttime="20240525 02:31:51.261" endtime="20240525 02:31:51.271"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${FakeSenha}</var>
<arg>Seubarriga</arg>
<arg>${compSenha}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240525 02:31:51.272" level="INFO">${FakeSenha} = Seubarriga 24</msg>
<status status="PASS" starttime="20240525 02:31:51.271" endtime="20240525 02:31:51.272"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeSenha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:51.274" level="INFO">${FakeSenha} = Seubarriga 24</msg>
<status status="PASS" starttime="20240525 02:31:51.273" endtime="20240525 02:31:51.274"/>
</kw>
<kw name="Sentence" library="FakerLibrary">
<var>${FakerDescricao}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20240525 02:31:51.276" level="INFO">${FakerDescricao} = Mention possible art coach.</msg>
<status status="PASS" starttime="20240525 02:31:51.275" endtime="20240525 02:31:51.276"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerDescricao}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:51.277" level="INFO">${FakerDescricao} = Mention possible art coach.</msg>
<status status="PASS" starttime="20240525 02:31:51.276" endtime="20240525 02:31:51.278"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${FakerValor}</var>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:31:51.279" level="INFO">${FakerValor} = 207</msg>
<status status="PASS" starttime="20240525 02:31:51.278" endtime="20240525 02:31:51.279"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerValor}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:51.280" level="INFO">${FakerValor} = 207</msg>
<status status="PASS" starttime="20240525 02:31:51.279" endtime="20240525 02:31:51.280"/>
</kw>
<status status="PASS" starttime="20240525 02:31:51.253" endtime="20240525 02:31:51.280"/>
</kw>
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>${token}</arg>
<arg>${FakeNome}${FakerValor}</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>1049</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:51.286" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 02:31:51.285" endtime="20240525 02:31:51.287"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:51.290" endtime="20240525 02:31:51.291"/>
</kw>
<status status="PASS" starttime="20240525 02:31:51.287" endtime="20240525 02:31:51.292"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:51.295" endtime="20240525 02:31:51.296"/>
</kw>
<status status="PASS" starttime="20240525 02:31:51.293" endtime="20240525 02:31:51.296"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:51.297" endtime="20240525 02:31:51.298"/>
</kw>
<status status="PASS" starttime="20240525 02:31:51.296" endtime="20240525 02:31:51.298"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:51.302" endtime="20240525 02:31:51.306"/>
</kw>
<status status="PASS" starttime="20240525 02:31:51.299" endtime="20240525 02:31:51.306"/>
</kw>
<msg timestamp="20240525 02:31:51.307" level="INFO">${bodyPostProd} = {'nome': 'Madison Gomez207', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 02:31:51.283" endtime="20240525 02:31:51.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:51.311" level="INFO">{'nome': 'Madison Gomez207', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 02:31:51.308" endtime="20240525 02:31:51.311"/>
</kw>
<kw name="HeadersAuth" library="services">
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:51.315" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTEwNywiZXhwIjoxNzE2NjE1NzA3fQ.C5xkdn8C8bOur4QLOnK0m8...</msg>
<status status="PASS" starttime="20240525 02:31:51.314" endtime="20240525 02:31:51.315"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:51.319" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTEwNywiZXhwIjoxNzE2NjE1NzA3fQ.C5xkdn8C8bOur4QLOnK0m8...</msg>
<status status="PASS" starttime="20240525 02:31:51.316" endtime="20240525 02:31:51.324"/>
</kw>
<status status="PASS" starttime="20240525 02:31:51.312" endtime="20240525 02:31:51.324"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 02:31:52.354" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTEwNywiZXhwIjoxNzE2NjE1NzA3fQ.C5xkdn8C8bOur4QLOnK0m8YdpfDCaZz-NWfJNLZ8gZc', 'Content-Length': '100', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Madison Gomez207", "preco": "1010", "descricao": "Teste Automation", "quantidade": "1049"}' 
 </msg>
<msg timestamp="20240525 02:31:52.355" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'dd44df50e144ec75442e61a21d8975dc', 'Date': 'Sat, 25 May 2024 05:31:52 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "H0cpUwcVKys1QxnD"
} 
 </msg>
<msg timestamp="20240525 02:31:52.358" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:51.326" endtime="20240525 02:31:52.358"/>
</kw>
<msg timestamp="20240525 02:31:52.359" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:51.325" endtime="20240525 02:31:52.359"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:52.360" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:52.359" endtime="20240525 02:31:52.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:52.361" level="INFO">{'message': 'Cadastro realizado com sucesso', '_id': 'H0cpUwcVKys1QxnD'}</msg>
<status status="PASS" starttime="20240525 02:31:52.360" endtime="20240525 02:31:52.362"/>
</kw>
<status status="PASS" starttime="20240525 02:31:51.281" endtime="20240525 02:31:52.362"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<arg>${RESPOSTA.json()}[_id]</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:52.365" level="INFO">${id} = H0cpUwcVKys1QxnD</msg>
<status status="PASS" starttime="20240525 02:31:52.362" endtime="20240525 02:31:52.365"/>
</kw>
<status status="PASS" starttime="20240525 02:31:51.252" endtime="20240525 02:31:52.365"/>
</kw>
<status status="PASS" starttime="20240525 02:31:51.250" endtime="20240525 02:31:52.365"/>
</kw>
<kw name="Quando enviar uma requisição Put" library="put_produtos">
<arg>${EMPTY}</arg>
<arg>${FakeNome}${FakerValor}</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>${FakerValor}</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:52.369" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 02:31:52.369" endtime="20240525 02:31:52.371"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:52.372" endtime="20240525 02:31:52.372"/>
</kw>
<status status="PASS" starttime="20240525 02:31:52.371" endtime="20240525 02:31:52.372"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:52.373" endtime="20240525 02:31:52.374"/>
</kw>
<status status="PASS" starttime="20240525 02:31:52.372" endtime="20240525 02:31:52.374"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:52.375" endtime="20240525 02:31:52.376"/>
</kw>
<status status="PASS" starttime="20240525 02:31:52.374" endtime="20240525 02:31:52.376"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:52.377" endtime="20240525 02:31:52.377"/>
</kw>
<status status="PASS" starttime="20240525 02:31:52.376" endtime="20240525 02:31:52.377"/>
</kw>
<msg timestamp="20240525 02:31:52.378" level="INFO">${bodyPostProd} = {'nome': 'Madison Gomez207', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '207'}</msg>
<status status="PASS" starttime="20240525 02:31:52.368" endtime="20240525 02:31:52.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:52.378" level="INFO">{'nome': 'Madison Gomez207', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '207'}</msg>
<status status="PASS" starttime="20240525 02:31:52.378" endtime="20240525 02:31:52.378"/>
</kw>
<kw name="HeadersAuth" library="services">
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:52.380" level="INFO">${headersAuth} = {'Authorization': ''}</msg>
<status status="PASS" starttime="20240525 02:31:52.379" endtime="20240525 02:31:52.380"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:52.381" level="INFO">${headersAuth} = {'Authorization': ''}</msg>
<status status="PASS" starttime="20240525 02:31:52.380" endtime="20240525 02:31:52.381"/>
</kw>
<status status="PASS" starttime="20240525 02:31:52.379" endtime="20240525 02:31:52.381"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${nome}</var>
<arg>${bodyPostProd['nome']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240525 02:31:52.383" level="INFO">${nome} = Madison Gomez207</msg>
<status status="PASS" starttime="20240525 02:31:52.381" endtime="20240525 02:31:52.383"/>
</kw>
<kw name="Put in" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<arg>${id}</arg>
<kw name="PUT" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request.</doc>
<msg timestamp="20240525 02:31:53.481" level="INFO">PUT Request : url=https://serverest.dev/produtos/H0cpUwcVKys1QxnD 
 path_url=/produtos/H0cpUwcVKys1QxnD 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': '', 'Content-Length': '99', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Madison Gomez207", "preco": "1010", "descricao": "Teste Automation", "quantidade": "207"}' 
 </msg>
<msg timestamp="20240525 02:31:53.482" level="INFO">PUT Response : url=https://serverest.dev/produtos/H0cpUwcVKys1QxnD 
 status=401, reason=Unauthorized 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'd3facd7f3c958a3b35505a5a69d70633', 'Date': 'Sat, 25 May 2024 05:31:53 GMT', 'Server': 'Google Frontend', 'Content-Length': '103'} 
 body={
    "message": "Token de acesso ausente, inválido, expirado ou usuário do token não existe mais"
} 
 </msg>
<msg timestamp="20240525 02:31:53.482" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:52.384" endtime="20240525 02:31:53.482"/>
</kw>
<msg timestamp="20240525 02:31:53.483" level="INFO">${RESPOSTA} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:52.383" endtime="20240525 02:31:53.483"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:53.484" level="INFO">${RESPOSTA} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:53.483" endtime="20240525 02:31:53.484"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${nome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:53.485" level="INFO">${nome} = Madison Gomez207</msg>
<status status="PASS" starttime="20240525 02:31:53.484" endtime="20240525 02:31:53.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:53.487" level="INFO">{'message': 'Token de acesso ausente, inválido, expirado ou usuário do token não existe mais'}</msg>
<status status="PASS" starttime="20240525 02:31:53.485" endtime="20240525 02:31:53.487"/>
</kw>
<status status="PASS" starttime="20240525 02:31:52.366" endtime="20240525 02:31:53.487"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>401</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 02:31:53.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 02:31:53.490" endtime="20240525 02:31:53.492"/>
</kw>
<status status="PASS" starttime="20240525 02:31:53.489" endtime="20240525 02:31:53.492"/>
</kw>
<kw name="E verificar a mensagem de validação" library="post_produtos">
<arg>Token de acesso ausente, inválido, expirado ou usuário do token não existe mais</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[message]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240525 02:31:53.494" endtime="20240525 02:31:53.496"/>
</kw>
<status status="PASS" starttime="20240525 02:31:53.493" endtime="20240525 02:31:53.496"/>
</kw>
<status status="PASS" starttime="20240525 02:31:51.233" endtime="20240525 02:31:53.497"/>
</test>
<test id="s1-s4-t3" name="Atualizar um produto com Token Invalido" line="24">
<kw name="Fakers" library="Utils">
<kw name="Name" library="FakerLibrary">
<var>${FakeNome}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20240525 02:31:53.504" level="INFO">${FakeNome} = Kristy Burns</msg>
<status status="PASS" starttime="20240525 02:31:53.503" endtime="20240525 02:31:53.504"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeNome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:53.505" level="INFO">${FakeNome} = Kristy Burns</msg>
<status status="PASS" starttime="20240525 02:31:53.505" endtime="20240525 02:31:53.505"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${FakeEmail}</var>
<msg timestamp="20240525 02:31:53.507" level="INFO">${FakeEmail} = mcconnelljeremy@example.com</msg>
<status status="PASS" starttime="20240525 02:31:53.506" endtime="20240525 02:31:53.507"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeEmail}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:53.508" level="INFO">${FakeEmail} = mcconnelljeremy@example.com</msg>
<status status="PASS" starttime="20240525 02:31:53.507" endtime="20240525 02:31:53.508"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${compSenha}</var>
<arg>text=##</arg>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:31:53.509" level="INFO">${compSenha} = 91</msg>
<status status="PASS" starttime="20240525 02:31:53.508" endtime="20240525 02:31:53.509"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${FakeSenha}</var>
<arg>Seubarriga</arg>
<arg>${compSenha}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240525 02:31:53.509" level="INFO">${FakeSenha} = Seubarriga 91</msg>
<status status="PASS" starttime="20240525 02:31:53.509" endtime="20240525 02:31:53.509"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeSenha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:53.510" level="INFO">${FakeSenha} = Seubarriga 91</msg>
<status status="PASS" starttime="20240525 02:31:53.510" endtime="20240525 02:31:53.510"/>
</kw>
<kw name="Sentence" library="FakerLibrary">
<var>${FakerDescricao}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20240525 02:31:53.511" level="INFO">${FakerDescricao} = Market somebody single blood.</msg>
<status status="PASS" starttime="20240525 02:31:53.511" endtime="20240525 02:31:53.511"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerDescricao}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:53.512" level="INFO">${FakerDescricao} = Market somebody single blood.</msg>
<status status="PASS" starttime="20240525 02:31:53.512" endtime="20240525 02:31:53.512"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${FakerValor}</var>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:31:53.513" level="INFO">${FakerValor} = 956</msg>
<status status="PASS" starttime="20240525 02:31:53.512" endtime="20240525 02:31:53.513"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerValor}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:53.514" level="INFO">${FakerValor} = 956</msg>
<status status="PASS" starttime="20240525 02:31:53.513" endtime="20240525 02:31:53.514"/>
</kw>
<status status="PASS" starttime="20240525 02:31:53.502" endtime="20240525 02:31:53.514"/>
</kw>
<kw name="Dado que tenha uma massa configurada" library="delete_produtos">
<kw name="Cadastro produtos com sucesso" library="services">
<kw name="Fakers" library="Utils">
<kw name="Name" library="FakerLibrary">
<var>${FakeNome}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20240525 02:31:53.518" level="INFO">${FakeNome} = Felicia Gomez</msg>
<status status="PASS" starttime="20240525 02:31:53.517" endtime="20240525 02:31:53.518"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeNome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:53.519" level="INFO">${FakeNome} = Felicia Gomez</msg>
<status status="PASS" starttime="20240525 02:31:53.518" endtime="20240525 02:31:53.519"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${FakeEmail}</var>
<msg timestamp="20240525 02:31:53.521" level="INFO">${FakeEmail} = cherylroberts@example.net</msg>
<status status="PASS" starttime="20240525 02:31:53.520" endtime="20240525 02:31:53.522"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeEmail}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:53.525" level="INFO">${FakeEmail} = cherylroberts@example.net</msg>
<status status="PASS" starttime="20240525 02:31:53.523" endtime="20240525 02:31:53.525"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${compSenha}</var>
<arg>text=##</arg>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:31:53.526" level="INFO">${compSenha} = 17</msg>
<status status="PASS" starttime="20240525 02:31:53.525" endtime="20240525 02:31:53.526"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${FakeSenha}</var>
<arg>Seubarriga</arg>
<arg>${compSenha}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240525 02:31:53.528" level="INFO">${FakeSenha} = Seubarriga 17</msg>
<status status="PASS" starttime="20240525 02:31:53.527" endtime="20240525 02:31:53.528"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeSenha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:53.529" level="INFO">${FakeSenha} = Seubarriga 17</msg>
<status status="PASS" starttime="20240525 02:31:53.528" endtime="20240525 02:31:53.529"/>
</kw>
<kw name="Sentence" library="FakerLibrary">
<var>${FakerDescricao}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20240525 02:31:53.530" level="INFO">${FakerDescricao} = Paper drug force free knowledge buy.</msg>
<status status="PASS" starttime="20240525 02:31:53.530" endtime="20240525 02:31:53.530"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerDescricao}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:53.531" level="INFO">${FakerDescricao} = Paper drug force free knowledge buy.</msg>
<status status="PASS" starttime="20240525 02:31:53.530" endtime="20240525 02:31:53.531"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${FakerValor}</var>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:31:53.532" level="INFO">${FakerValor} = 650</msg>
<status status="PASS" starttime="20240525 02:31:53.532" endtime="20240525 02:31:53.532"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerValor}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:53.533" level="INFO">${FakerValor} = 650</msg>
<status status="PASS" starttime="20240525 02:31:53.532" endtime="20240525 02:31:53.533"/>
</kw>
<status status="PASS" starttime="20240525 02:31:53.516" endtime="20240525 02:31:53.533"/>
</kw>
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>${token}</arg>
<arg>${FakeNome}${FakerValor}</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>1049</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:53.537" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 02:31:53.536" endtime="20240525 02:31:53.537"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:53.539" endtime="20240525 02:31:53.539"/>
</kw>
<status status="PASS" starttime="20240525 02:31:53.537" endtime="20240525 02:31:53.540"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:53.541" endtime="20240525 02:31:53.541"/>
</kw>
<status status="PASS" starttime="20240525 02:31:53.540" endtime="20240525 02:31:53.541"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:53.543" endtime="20240525 02:31:53.543"/>
</kw>
<status status="PASS" starttime="20240525 02:31:53.542" endtime="20240525 02:31:53.543"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:53.544" endtime="20240525 02:31:53.545"/>
</kw>
<status status="PASS" starttime="20240525 02:31:53.544" endtime="20240525 02:31:53.545"/>
</kw>
<msg timestamp="20240525 02:31:53.545" level="INFO">${bodyPostProd} = {'nome': 'Felicia Gomez650', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 02:31:53.534" endtime="20240525 02:31:53.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:53.546" level="INFO">{'nome': 'Felicia Gomez650', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 02:31:53.546" endtime="20240525 02:31:53.546"/>
</kw>
<kw name="HeadersAuth" library="services">
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:53.548" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTEwNywiZXhwIjoxNzE2NjE1NzA3fQ.C5xkdn8C8bOur4QLOnK0m8...</msg>
<status status="PASS" starttime="20240525 02:31:53.547" endtime="20240525 02:31:53.548"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:53.549" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTEwNywiZXhwIjoxNzE2NjE1NzA3fQ.C5xkdn8C8bOur4QLOnK0m8...</msg>
<status status="PASS" starttime="20240525 02:31:53.548" endtime="20240525 02:31:53.549"/>
</kw>
<status status="PASS" starttime="20240525 02:31:53.546" endtime="20240525 02:31:53.549"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 02:31:54.608" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTEwNywiZXhwIjoxNzE2NjE1NzA3fQ.C5xkdn8C8bOur4QLOnK0m8YdpfDCaZz-NWfJNLZ8gZc', 'Content-Length': '100', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Felicia Gomez650", "preco": "1010", "descricao": "Teste Automation", "quantidade": "1049"}' 
 </msg>
<msg timestamp="20240525 02:31:54.608" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '199bda3c5a03f6c78f3ad3c249e3c26a', 'Date': 'Sat, 25 May 2024 05:31:54 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "ONWVTU7exhVs6aOy"
} 
 </msg>
<msg timestamp="20240525 02:31:54.608" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:53.551" endtime="20240525 02:31:54.608"/>
</kw>
<msg timestamp="20240525 02:31:54.609" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:53.550" endtime="20240525 02:31:54.609"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:54.610" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:54.609" endtime="20240525 02:31:54.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:54.612" level="INFO">{'message': 'Cadastro realizado com sucesso', '_id': 'ONWVTU7exhVs6aOy'}</msg>
<status status="PASS" starttime="20240525 02:31:54.611" endtime="20240525 02:31:54.612"/>
</kw>
<status status="PASS" starttime="20240525 02:31:53.533" endtime="20240525 02:31:54.613"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<arg>${RESPOSTA.json()}[_id]</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:54.616" level="INFO">${id} = ONWVTU7exhVs6aOy</msg>
<status status="PASS" starttime="20240525 02:31:54.613" endtime="20240525 02:31:54.616"/>
</kw>
<status status="PASS" starttime="20240525 02:31:53.516" endtime="20240525 02:31:54.617"/>
</kw>
<status status="PASS" starttime="20240525 02:31:53.515" endtime="20240525 02:31:54.617"/>
</kw>
<kw name="Quando enviar uma requisição Put" library="put_produtos">
<arg>token_invalido</arg>
<arg>${FakeNome}${FakerValor}</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>${FakerValor}</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:54.622" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 02:31:54.621" endtime="20240525 02:31:54.623"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:54.624" endtime="20240525 02:31:54.624"/>
</kw>
<status status="PASS" starttime="20240525 02:31:54.623" endtime="20240525 02:31:54.624"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:54.625" endtime="20240525 02:31:54.626"/>
</kw>
<status status="PASS" starttime="20240525 02:31:54.625" endtime="20240525 02:31:54.626"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:54.628" endtime="20240525 02:31:54.628"/>
</kw>
<status status="PASS" starttime="20240525 02:31:54.627" endtime="20240525 02:31:54.628"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:54.630" endtime="20240525 02:31:54.630"/>
</kw>
<status status="PASS" starttime="20240525 02:31:54.629" endtime="20240525 02:31:54.630"/>
</kw>
<msg timestamp="20240525 02:31:54.631" level="INFO">${bodyPostProd} = {'nome': 'Felicia Gomez650', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '650'}</msg>
<status status="PASS" starttime="20240525 02:31:54.620" endtime="20240525 02:31:54.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:54.631" level="INFO">{'nome': 'Felicia Gomez650', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '650'}</msg>
<status status="PASS" starttime="20240525 02:31:54.631" endtime="20240525 02:31:54.632"/>
</kw>
<kw name="HeadersAuth" library="services">
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:54.634" level="INFO">${headersAuth} = {'Authorization': 'token_invalido'}</msg>
<status status="PASS" starttime="20240525 02:31:54.633" endtime="20240525 02:31:54.634"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:54.635" level="INFO">${headersAuth} = {'Authorization': 'token_invalido'}</msg>
<status status="PASS" starttime="20240525 02:31:54.634" endtime="20240525 02:31:54.635"/>
</kw>
<status status="PASS" starttime="20240525 02:31:54.632" endtime="20240525 02:31:54.635"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${nome}</var>
<arg>${bodyPostProd['nome']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240525 02:31:54.637" level="INFO">${nome} = Felicia Gomez650</msg>
<status status="PASS" starttime="20240525 02:31:54.635" endtime="20240525 02:31:54.637"/>
</kw>
<kw name="Put in" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<arg>${id}</arg>
<kw name="PUT" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request.</doc>
<msg timestamp="20240525 02:31:55.733" level="INFO">PUT Request : url=https://serverest.dev/produtos/ONWVTU7exhVs6aOy 
 path_url=/produtos/ONWVTU7exhVs6aOy 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'token_invalido', 'Content-Length': '99', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Felicia Gomez650", "preco": "1010", "descricao": "Teste Automation", "quantidade": "650"}' 
 </msg>
<msg timestamp="20240525 02:31:55.733" level="INFO">PUT Response : url=https://serverest.dev/produtos/ONWVTU7exhVs6aOy 
 status=401, reason=Unauthorized 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'ee53cc94dff0cc21e3f0c7d2eb3ced02', 'Date': 'Sat, 25 May 2024 05:31:55 GMT', 'Server': 'Google Frontend', 'Content-Length': '103'} 
 body={
    "message": "Token de acesso ausente, inválido, expirado ou usuário do token não existe mais"
} 
 </msg>
<msg timestamp="20240525 02:31:55.733" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:54.638" endtime="20240525 02:31:55.733"/>
</kw>
<msg timestamp="20240525 02:31:55.733" level="INFO">${RESPOSTA} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:54.637" endtime="20240525 02:31:55.733"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:55.733" level="INFO">${RESPOSTA} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:55.733" endtime="20240525 02:31:55.733"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${nome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:55.734" level="INFO">${nome} = Felicia Gomez650</msg>
<status status="PASS" starttime="20240525 02:31:55.734" endtime="20240525 02:31:55.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:55.734" level="INFO">{'message': 'Token de acesso ausente, inválido, expirado ou usuário do token não existe mais'}</msg>
<status status="PASS" starttime="20240525 02:31:55.734" endtime="20240525 02:31:55.735"/>
</kw>
<status status="PASS" starttime="20240525 02:31:54.618" endtime="20240525 02:31:55.735"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>401</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 02:31:55.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 02:31:55.735" endtime="20240525 02:31:55.736"/>
</kw>
<status status="PASS" starttime="20240525 02:31:55.735" endtime="20240525 02:31:55.736"/>
</kw>
<kw name="E verificar a mensagem de validação" library="post_produtos">
<arg>Token de acesso ausente, inválido, expirado ou usuário do token não existe mais</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[message]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240525 02:31:55.737" endtime="20240525 02:31:55.738"/>
</kw>
<status status="PASS" starttime="20240525 02:31:55.737" endtime="20240525 02:31:55.738"/>
</kw>
<status status="PASS" starttime="20240525 02:31:53.501" endtime="20240525 02:31:55.738"/>
</test>
<doc>Documentacao do POST da API: ServeRest</doc>
<status status="PASS" starttime="20240525 02:31:46.126" endtime="20240525 02:31:55.740"/>
</suite>
<suite id="s1-s5" name="05 - Delete Produtos" source="C:\ProjetosC\serveRest-robot\features\05 - delete_produtos.robot">
<kw name="Token" library="services" type="SETUP">
<kw name="Conectar a API" library="services">
<arg>/login</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>apiServeRest</arg>
<arg>${base_url}</arg>
<arg>${headersLogin}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20240525 02:31:55.762" level="INFO">Creating Session using : alias=apiServeRest, url=https://serverest.dev, headers={'accept': 'application/json', 'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20240525 02:31:55.762" endtime="20240525 02:31:55.762"/>
</kw>
<status status="PASS" starttime="20240525 02:31:55.761" endtime="20240525 02:31:55.763"/>
</kw>
<kw name="Quando entrar com usuario e senha" library="login">
<kw name="Post in" library="services">
<var>${RESPOSTA}</var>
<arg>/login</arg>
<arg>${bodyLOGIN}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headersLogin}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 02:31:56.761" level="INFO">POST Request : url=https://serverest.dev/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body=b'{"email": "sandroteste@qa.com", "password": "testeQA"}' 
 </msg>
<msg timestamp="20240525 02:31:56.761" level="INFO">POST Response : url=https://serverest.dev/login 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '97b966f346ebcbcb227a0002bafc9d93;o=1', 'Date': 'Sat, 25 May 2024 05:31:57 GMT', 'Server': 'Google Frontend', 'Content-Length': '275'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTExNywiZXhwIjoxNzE2NjE1NzE3fQ.xk2A1DJqFK6qRKFtjS0c4MBxfaz1dzy25tRATTRV-D8"
} 
 </msg>
<msg timestamp="20240525 02:31:56.762" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:55.763" endtime="20240525 02:31:56.762"/>
</kw>
<msg timestamp="20240525 02:31:56.762" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:55.763" endtime="20240525 02:31:56.762"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${token}</var>
<arg>${RESPOSTA.json()}[authorization]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240525 02:31:56.764" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTExNywiZXhwIjoxNzE2NjE1NzE3fQ.xk2A1DJqFK6qRKFtjS0c4MBxfaz1dzy25tRATTRV-...</msg>
<status status="PASS" starttime="20240525 02:31:56.763" endtime="20240525 02:31:56.764"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${token}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240525 02:31:56.765" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTExNywiZXhwIjoxNzE2NjE1NzE3fQ.xk2A1DJqFK6qRKFtjS0c4MBxfaz1dzy25tRATTRV-...</msg>
<status status="PASS" starttime="20240525 02:31:56.765" endtime="20240525 02:31:56.765"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240525 02:31:56.766" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:56.766" endtime="20240525 02:31:56.767"/>
</kw>
<status status="PASS" starttime="20240525 02:31:55.763" endtime="20240525 02:31:56.767"/>
</kw>
<status status="PASS" starttime="20240525 02:31:55.760" endtime="20240525 02:31:56.767"/>
</kw>
<test id="s1-s5-t1" name="Deletar produto com sucesso" line="9">
<kw name="Dado que tenha uma massa configurada" library="delete_produtos">
<kw name="Cadastro produtos com sucesso" library="services">
<kw name="Fakers" library="Utils">
<kw name="Name" library="FakerLibrary">
<var>${FakeNome}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20240525 02:31:56.771" level="INFO">${FakeNome} = Sean Johnson</msg>
<status status="PASS" starttime="20240525 02:31:56.770" endtime="20240525 02:31:56.771"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeNome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:56.772" level="INFO">${FakeNome} = Sean Johnson</msg>
<status status="PASS" starttime="20240525 02:31:56.771" endtime="20240525 02:31:56.772"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${FakeEmail}</var>
<msg timestamp="20240525 02:31:56.774" level="INFO">${FakeEmail} = ebonywalsh@example.net</msg>
<status status="PASS" starttime="20240525 02:31:56.773" endtime="20240525 02:31:56.774"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeEmail}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:56.776" level="INFO">${FakeEmail} = ebonywalsh@example.net</msg>
<status status="PASS" starttime="20240525 02:31:56.775" endtime="20240525 02:31:56.776"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${compSenha}</var>
<arg>text=##</arg>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:31:56.777" level="INFO">${compSenha} = 12</msg>
<status status="PASS" starttime="20240525 02:31:56.776" endtime="20240525 02:31:56.777"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${FakeSenha}</var>
<arg>Seubarriga</arg>
<arg>${compSenha}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240525 02:31:56.778" level="INFO">${FakeSenha} = Seubarriga 12</msg>
<status status="PASS" starttime="20240525 02:31:56.777" endtime="20240525 02:31:56.778"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeSenha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:56.779" level="INFO">${FakeSenha} = Seubarriga 12</msg>
<status status="PASS" starttime="20240525 02:31:56.778" endtime="20240525 02:31:56.779"/>
</kw>
<kw name="Sentence" library="FakerLibrary">
<var>${FakerDescricao}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20240525 02:31:56.780" level="INFO">${FakerDescricao} = Official very then yard.</msg>
<status status="PASS" starttime="20240525 02:31:56.779" endtime="20240525 02:31:56.780"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerDescricao}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:56.781" level="INFO">${FakerDescricao} = Official very then yard.</msg>
<status status="PASS" starttime="20240525 02:31:56.780" endtime="20240525 02:31:56.781"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${FakerValor}</var>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:31:56.782" level="INFO">${FakerValor} = 999</msg>
<status status="PASS" starttime="20240525 02:31:56.781" endtime="20240525 02:31:56.782"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerValor}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:56.783" level="INFO">${FakerValor} = 999</msg>
<status status="PASS" starttime="20240525 02:31:56.782" endtime="20240525 02:31:56.783"/>
</kw>
<status status="PASS" starttime="20240525 02:31:56.769" endtime="20240525 02:31:56.783"/>
</kw>
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>${token}</arg>
<arg>${FakeNome}${FakerValor}</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>1049</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:56.788" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 02:31:56.787" endtime="20240525 02:31:56.788"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:56.789" endtime="20240525 02:31:56.790"/>
</kw>
<status status="PASS" starttime="20240525 02:31:56.788" endtime="20240525 02:31:56.790"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:56.791" endtime="20240525 02:31:56.792"/>
</kw>
<status status="PASS" starttime="20240525 02:31:56.790" endtime="20240525 02:31:56.792"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:56.793" endtime="20240525 02:31:56.793"/>
</kw>
<status status="PASS" starttime="20240525 02:31:56.792" endtime="20240525 02:31:56.793"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:56.794" endtime="20240525 02:31:56.795"/>
</kw>
<status status="PASS" starttime="20240525 02:31:56.794" endtime="20240525 02:31:56.795"/>
</kw>
<msg timestamp="20240525 02:31:56.796" level="INFO">${bodyPostProd} = {'nome': 'Sean Johnson999', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 02:31:56.785" endtime="20240525 02:31:56.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:56.797" level="INFO">{'nome': 'Sean Johnson999', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 02:31:56.796" endtime="20240525 02:31:56.797"/>
</kw>
<kw name="HeadersAuth" library="services">
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:56.798" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTExNywiZXhwIjoxNzE2NjE1NzE3fQ.xk2A1DJqFK6qRKFtjS0c4M...</msg>
<status status="PASS" starttime="20240525 02:31:56.798" endtime="20240525 02:31:56.798"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:56.799" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTExNywiZXhwIjoxNzE2NjE1NzE3fQ.xk2A1DJqFK6qRKFtjS0c4M...</msg>
<status status="PASS" starttime="20240525 02:31:56.799" endtime="20240525 02:31:56.799"/>
</kw>
<status status="PASS" starttime="20240525 02:31:56.797" endtime="20240525 02:31:56.799"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 02:31:57.887" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTExNywiZXhwIjoxNzE2NjE1NzE3fQ.xk2A1DJqFK6qRKFtjS0c4MBxfaz1dzy25tRATTRV-D8', 'Content-Length': '99', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Sean Johnson999", "preco": "1010", "descricao": "Teste Automation", "quantidade": "1049"}' 
 </msg>
<msg timestamp="20240525 02:31:57.888" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '7e5fb6c8a2201d6c20d9af0422ef56c6', 'Date': 'Sat, 25 May 2024 05:31:58 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "F79fVxsgtl69Zivd"
} 
 </msg>
<msg timestamp="20240525 02:31:57.889" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:56.801" endtime="20240525 02:31:57.889"/>
</kw>
<msg timestamp="20240525 02:31:57.890" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:56.800" endtime="20240525 02:31:57.890"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:57.893" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:57.892" endtime="20240525 02:31:57.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:57.896" level="INFO">{'message': 'Cadastro realizado com sucesso', '_id': 'F79fVxsgtl69Zivd'}</msg>
<status status="PASS" starttime="20240525 02:31:57.893" endtime="20240525 02:31:57.896"/>
</kw>
<status status="PASS" starttime="20240525 02:31:56.784" endtime="20240525 02:31:57.896"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<arg>${RESPOSTA.json()}[_id]</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:57.899" level="INFO">${id} = F79fVxsgtl69Zivd</msg>
<status status="PASS" starttime="20240525 02:31:57.896" endtime="20240525 02:31:57.899"/>
</kw>
<status status="PASS" starttime="20240525 02:31:56.769" endtime="20240525 02:31:57.899"/>
</kw>
<status status="PASS" starttime="20240525 02:31:56.768" endtime="20240525 02:31:57.899"/>
</kw>
<kw name="Quando enviar uma requisição pra excluir um produto" library="delete_produtos">
<arg>${token}</arg>
<kw name="HeadersAuth" library="services">
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:57.904" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTExNywiZXhwIjoxNzE2NjE1NzE3fQ.xk2A1DJqFK6qRKFtjS0c4M...</msg>
<status status="PASS" starttime="20240525 02:31:57.903" endtime="20240525 02:31:57.904"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:57.905" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTExNywiZXhwIjoxNzE2NjE1NzE3fQ.xk2A1DJqFK6qRKFtjS0c4M...</msg>
<status status="PASS" starttime="20240525 02:31:57.905" endtime="20240525 02:31:57.905"/>
</kw>
<status status="PASS" starttime="20240525 02:31:57.902" endtime="20240525 02:31:57.905"/>
</kw>
<kw name="Delete in" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${id}</arg>
<kw name="DELETE" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request.</doc>
<msg timestamp="20240525 02:31:59.113" level="INFO">DELETE Request : url=https://serverest.dev/produtos/F79fVxsgtl69Zivd 
 path_url=/produtos/F79fVxsgtl69Zivd 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTExNywiZXhwIjoxNzE2NjE1NzE3fQ.xk2A1DJqFK6qRKFtjS0c4MBxfaz1dzy25tRATTRV-D8', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20240525 02:31:59.113" level="INFO">DELETE Response : url=https://serverest.dev/produtos/F79fVxsgtl69Zivd 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'a4aea76cec2a1aea4bfd593a173da02a', 'Date': 'Sat, 25 May 2024 05:31:59 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20240525 02:31:59.113" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:57.907" endtime="20240525 02:31:59.113"/>
</kw>
<msg timestamp="20240525 02:31:59.114" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:57.906" endtime="20240525 02:31:59.114"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:59.115" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:59.114" endtime="20240525 02:31:59.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:59.117" level="INFO">{'message': 'Registro excluído com sucesso'}</msg>
<status status="PASS" starttime="20240525 02:31:59.115" endtime="20240525 02:31:59.117"/>
</kw>
<status status="PASS" starttime="20240525 02:31:57.901" endtime="20240525 02:31:59.117"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>200</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 02:31:59.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 02:31:59.119" endtime="20240525 02:31:59.121"/>
</kw>
<status status="PASS" starttime="20240525 02:31:59.118" endtime="20240525 02:31:59.121"/>
</kw>
<kw name="E verificar a mensagem de exclusão" library="delete_produtos">
<arg>Registro excluído com sucesso</arg>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${RESPOSTA.json()}[message]</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240525 02:31:59.123" endtime="20240525 02:31:59.124"/>
</kw>
<status status="PASS" starttime="20240525 02:31:59.122" endtime="20240525 02:31:59.124"/>
</kw>
<status status="PASS" starttime="20240525 02:31:56.767" endtime="20240525 02:31:59.126"/>
</test>
<test id="s1-s5-t2" name="Deletar produto sem o Token" line="15">
<kw name="Dado que tenha uma massa configurada" library="delete_produtos">
<kw name="Cadastro produtos com sucesso" library="services">
<kw name="Fakers" library="Utils">
<kw name="Name" library="FakerLibrary">
<var>${FakeNome}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20240525 02:31:59.134" level="INFO">${FakeNome} = Julian Washington</msg>
<status status="PASS" starttime="20240525 02:31:59.132" endtime="20240525 02:31:59.134"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeNome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:59.135" level="INFO">${FakeNome} = Julian Washington</msg>
<status status="PASS" starttime="20240525 02:31:59.135" endtime="20240525 02:31:59.135"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${FakeEmail}</var>
<msg timestamp="20240525 02:31:59.138" level="INFO">${FakeEmail} = reedwilliam@example.org</msg>
<status status="PASS" starttime="20240525 02:31:59.136" endtime="20240525 02:31:59.138"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeEmail}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:59.139" level="INFO">${FakeEmail} = reedwilliam@example.org</msg>
<status status="PASS" starttime="20240525 02:31:59.138" endtime="20240525 02:31:59.139"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${compSenha}</var>
<arg>text=##</arg>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:31:59.140" level="INFO">${compSenha} = 54</msg>
<status status="PASS" starttime="20240525 02:31:59.139" endtime="20240525 02:31:59.140"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${FakeSenha}</var>
<arg>Seubarriga</arg>
<arg>${compSenha}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240525 02:31:59.141" level="INFO">${FakeSenha} = Seubarriga 54</msg>
<status status="PASS" starttime="20240525 02:31:59.140" endtime="20240525 02:31:59.141"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeSenha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:59.142" level="INFO">${FakeSenha} = Seubarriga 54</msg>
<status status="PASS" starttime="20240525 02:31:59.141" endtime="20240525 02:31:59.142"/>
</kw>
<kw name="Sentence" library="FakerLibrary">
<var>${FakerDescricao}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20240525 02:31:59.143" level="INFO">${FakerDescricao} = Manage stand standard explain unit here painting.</msg>
<status status="PASS" starttime="20240525 02:31:59.142" endtime="20240525 02:31:59.143"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerDescricao}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:59.144" level="INFO">${FakerDescricao} = Manage stand standard explain unit here painting.</msg>
<status status="PASS" starttime="20240525 02:31:59.143" endtime="20240525 02:31:59.144"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${FakerValor}</var>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:31:59.145" level="INFO">${FakerValor} = 102</msg>
<status status="PASS" starttime="20240525 02:31:59.144" endtime="20240525 02:31:59.145"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerValor}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:59.146" level="INFO">${FakerValor} = 102</msg>
<status status="PASS" starttime="20240525 02:31:59.145" endtime="20240525 02:31:59.146"/>
</kw>
<status status="PASS" starttime="20240525 02:31:59.131" endtime="20240525 02:31:59.147"/>
</kw>
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>${token}</arg>
<arg>${FakeNome}${FakerValor}</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>1049</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:59.152" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 02:31:59.151" endtime="20240525 02:31:59.152"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:59.154" endtime="20240525 02:31:59.155"/>
</kw>
<status status="PASS" starttime="20240525 02:31:59.152" endtime="20240525 02:31:59.155"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:59.156" endtime="20240525 02:31:59.157"/>
</kw>
<status status="PASS" starttime="20240525 02:31:59.155" endtime="20240525 02:31:59.157"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:59.159" endtime="20240525 02:31:59.159"/>
</kw>
<status status="PASS" starttime="20240525 02:31:59.158" endtime="20240525 02:31:59.160"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:31:59.161" endtime="20240525 02:31:59.162"/>
</kw>
<status status="PASS" starttime="20240525 02:31:59.160" endtime="20240525 02:31:59.163"/>
</kw>
<msg timestamp="20240525 02:31:59.163" level="INFO">${bodyPostProd} = {'nome': 'Julian Washington102', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 02:31:59.149" endtime="20240525 02:31:59.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:31:59.164" level="INFO">{'nome': 'Julian Washington102', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 02:31:59.164" endtime="20240525 02:31:59.165"/>
</kw>
<kw name="HeadersAuth" library="services">
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:31:59.168" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTExNywiZXhwIjoxNzE2NjE1NzE3fQ.xk2A1DJqFK6qRKFtjS0c4M...</msg>
<status status="PASS" starttime="20240525 02:31:59.166" endtime="20240525 02:31:59.168"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:31:59.169" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTExNywiZXhwIjoxNzE2NjE1NzE3fQ.xk2A1DJqFK6qRKFtjS0c4M...</msg>
<status status="PASS" starttime="20240525 02:31:59.168" endtime="20240525 02:31:59.169"/>
</kw>
<status status="PASS" starttime="20240525 02:31:59.165" endtime="20240525 02:31:59.169"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 02:32:00.342" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTExNywiZXhwIjoxNzE2NjE1NzE3fQ.xk2A1DJqFK6qRKFtjS0c4MBxfaz1dzy25tRATTRV-D8', 'Content-Length': '104', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Julian Washington102", "preco": "1010", "descricao": "Teste Automation", "quantidade": "1049"}' 
 </msg>
<msg timestamp="20240525 02:32:00.342" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'b1f59f9a9c011b4e35379355742cbc9a', 'Date': 'Sat, 25 May 2024 05:32:00 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "YOoxQPCML5O4lcqN"
} 
 </msg>
<msg timestamp="20240525 02:32:00.343" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:59.171" endtime="20240525 02:32:00.343"/>
</kw>
<msg timestamp="20240525 02:32:00.343" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 02:31:59.169" endtime="20240525 02:32:00.343"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:32:00.344" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 02:32:00.344" endtime="20240525 02:32:00.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:32:00.346" level="INFO">{'message': 'Cadastro realizado com sucesso', '_id': 'YOoxQPCML5O4lcqN'}</msg>
<status status="PASS" starttime="20240525 02:32:00.345" endtime="20240525 02:32:00.346"/>
</kw>
<status status="PASS" starttime="20240525 02:31:59.147" endtime="20240525 02:32:00.346"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<arg>${RESPOSTA.json()}[_id]</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:32:00.349" level="INFO">${id} = YOoxQPCML5O4lcqN</msg>
<status status="PASS" starttime="20240525 02:32:00.347" endtime="20240525 02:32:00.349"/>
</kw>
<status status="PASS" starttime="20240525 02:31:59.131" endtime="20240525 02:32:00.350"/>
</kw>
<status status="PASS" starttime="20240525 02:31:59.130" endtime="20240525 02:32:00.350"/>
</kw>
<kw name="Quando enviar uma requisição pra excluir um produto" library="delete_produtos">
<arg>${EMPTY}</arg>
<kw name="HeadersAuth" library="services">
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:32:00.355" level="INFO">${headersAuth} = {'Authorization': ''}</msg>
<status status="PASS" starttime="20240525 02:32:00.354" endtime="20240525 02:32:00.355"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:32:00.355" level="INFO">${headersAuth} = {'Authorization': ''}</msg>
<status status="PASS" starttime="20240525 02:32:00.355" endtime="20240525 02:32:00.356"/>
</kw>
<status status="PASS" starttime="20240525 02:32:00.353" endtime="20240525 02:32:00.356"/>
</kw>
<kw name="Delete in" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${id}</arg>
<kw name="DELETE" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request.</doc>
<msg timestamp="20240525 02:32:01.366" level="INFO">DELETE Request : url=https://serverest.dev/produtos/YOoxQPCML5O4lcqN 
 path_url=/produtos/YOoxQPCML5O4lcqN 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': '', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20240525 02:32:01.366" level="INFO">DELETE Response : url=https://serverest.dev/produtos/YOoxQPCML5O4lcqN 
 status=401, reason=Unauthorized 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'e33c948cca20fa854c1d30d15f58d916', 'Date': 'Sat, 25 May 2024 05:32:01 GMT', 'Server': 'Google Frontend', 'Content-Length': '103'} 
 body={
    "message": "Token de acesso ausente, inválido, expirado ou usuário do token não existe mais"
} 
 </msg>
<msg timestamp="20240525 02:32:01.366" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20240525 02:32:00.357" endtime="20240525 02:32:01.366"/>
</kw>
<msg timestamp="20240525 02:32:01.366" level="INFO">${RESPOSTA} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20240525 02:32:00.356" endtime="20240525 02:32:01.367"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:32:01.367" level="INFO">${RESPOSTA} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20240525 02:32:01.367" endtime="20240525 02:32:01.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:32:01.368" level="INFO">{'message': 'Token de acesso ausente, inválido, expirado ou usuário do token não existe mais'}</msg>
<status status="PASS" starttime="20240525 02:32:01.368" endtime="20240525 02:32:01.369"/>
</kw>
<status status="PASS" starttime="20240525 02:32:00.351" endtime="20240525 02:32:01.369"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>401</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 02:32:01.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 02:32:01.370" endtime="20240525 02:32:01.371"/>
</kw>
<status status="PASS" starttime="20240525 02:32:01.369" endtime="20240525 02:32:01.371"/>
</kw>
<kw name="E verificar a mensagem de exclusão" library="delete_produtos">
<arg>Token de acesso ausente, inválido, expirado ou usuário do token não existe mais</arg>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${RESPOSTA.json()}[message]</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240525 02:32:01.372" endtime="20240525 02:32:01.373"/>
</kw>
<status status="PASS" starttime="20240525 02:32:01.371" endtime="20240525 02:32:01.373"/>
</kw>
<status status="PASS" starttime="20240525 02:31:59.129" endtime="20240525 02:32:01.373"/>
</test>
<test id="s1-s5-t3" name="Deletar produto com Token Invalido" line="21">
<kw name="Dado que tenha uma massa configurada" library="delete_produtos">
<kw name="Cadastro produtos com sucesso" library="services">
<kw name="Fakers" library="Utils">
<kw name="Name" library="FakerLibrary">
<var>${FakeNome}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20240525 02:32:01.376" level="INFO">${FakeNome} = Gloria Torres</msg>
<status status="PASS" starttime="20240525 02:32:01.376" endtime="20240525 02:32:01.376"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeNome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:32:01.377" level="INFO">${FakeNome} = Gloria Torres</msg>
<status status="PASS" starttime="20240525 02:32:01.376" endtime="20240525 02:32:01.377"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${FakeEmail}</var>
<msg timestamp="20240525 02:32:01.377" level="INFO">${FakeEmail} = margaret92@example.com</msg>
<status status="PASS" starttime="20240525 02:32:01.377" endtime="20240525 02:32:01.377"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeEmail}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:32:01.377" level="INFO">${FakeEmail} = margaret92@example.com</msg>
<status status="PASS" starttime="20240525 02:32:01.377" endtime="20240525 02:32:01.377"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${compSenha}</var>
<arg>text=##</arg>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:32:01.378" level="INFO">${compSenha} = 66</msg>
<status status="PASS" starttime="20240525 02:32:01.377" endtime="20240525 02:32:01.378"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${FakeSenha}</var>
<arg>Seubarriga</arg>
<arg>${compSenha}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240525 02:32:01.378" level="INFO">${FakeSenha} = Seubarriga 66</msg>
<status status="PASS" starttime="20240525 02:32:01.378" endtime="20240525 02:32:01.378"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeSenha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:32:01.378" level="INFO">${FakeSenha} = Seubarriga 66</msg>
<status status="PASS" starttime="20240525 02:32:01.378" endtime="20240525 02:32:01.379"/>
</kw>
<kw name="Sentence" library="FakerLibrary">
<var>${FakerDescricao}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20240525 02:32:01.379" level="INFO">${FakerDescricao} = Myself sometimes again behavior.</msg>
<status status="PASS" starttime="20240525 02:32:01.379" endtime="20240525 02:32:01.379"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerDescricao}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:32:01.379" level="INFO">${FakerDescricao} = Myself sometimes again behavior.</msg>
<status status="PASS" starttime="20240525 02:32:01.379" endtime="20240525 02:32:01.379"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${FakerValor}</var>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:32:01.379" level="INFO">${FakerValor} = 059</msg>
<status status="PASS" starttime="20240525 02:32:01.379" endtime="20240525 02:32:01.380"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerValor}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:32:01.380" level="INFO">${FakerValor} = 059</msg>
<status status="PASS" starttime="20240525 02:32:01.380" endtime="20240525 02:32:01.380"/>
</kw>
<status status="PASS" starttime="20240525 02:32:01.375" endtime="20240525 02:32:01.380"/>
</kw>
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>${token}</arg>
<arg>${FakeNome}${FakerValor}</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>1049</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:32:01.406" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 02:32:01.381" endtime="20240525 02:32:01.406"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:32:01.406" endtime="20240525 02:32:01.406"/>
</kw>
<status status="PASS" starttime="20240525 02:32:01.406" endtime="20240525 02:32:01.407"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:32:01.407" endtime="20240525 02:32:01.407"/>
</kw>
<status status="PASS" starttime="20240525 02:32:01.407" endtime="20240525 02:32:01.407"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:32:01.408" endtime="20240525 02:32:01.408"/>
</kw>
<status status="PASS" starttime="20240525 02:32:01.407" endtime="20240525 02:32:01.408"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:32:01.408" endtime="20240525 02:32:01.409"/>
</kw>
<status status="PASS" starttime="20240525 02:32:01.408" endtime="20240525 02:32:01.409"/>
</kw>
<msg timestamp="20240525 02:32:01.409" level="INFO">${bodyPostProd} = {'nome': 'Gloria Torres059', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 02:32:01.380" endtime="20240525 02:32:01.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:32:01.409" level="INFO">{'nome': 'Gloria Torres059', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 02:32:01.409" endtime="20240525 02:32:01.409"/>
</kw>
<kw name="HeadersAuth" library="services">
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:32:01.411" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTExNywiZXhwIjoxNzE2NjE1NzE3fQ.xk2A1DJqFK6qRKFtjS0c4M...</msg>
<status status="PASS" starttime="20240525 02:32:01.411" endtime="20240525 02:32:01.411"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:32:01.411" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTExNywiZXhwIjoxNzE2NjE1NzE3fQ.xk2A1DJqFK6qRKFtjS0c4M...</msg>
<status status="PASS" starttime="20240525 02:32:01.411" endtime="20240525 02:32:01.412"/>
</kw>
<status status="PASS" starttime="20240525 02:32:01.410" endtime="20240525 02:32:01.412"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 02:32:02.493" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTExNywiZXhwIjoxNzE2NjE1NzE3fQ.xk2A1DJqFK6qRKFtjS0c4MBxfaz1dzy25tRATTRV-D8', 'Content-Length': '100', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Gloria Torres059", "preco": "1010", "descricao": "Teste Automation", "quantidade": "1049"}' 
 </msg>
<msg timestamp="20240525 02:32:02.493" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '9ef3b7a921715f9402ff144176155f78', 'Date': 'Sat, 25 May 2024 05:32:02 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "ScSByXFf7sPAW0lu"
} 
 </msg>
<msg timestamp="20240525 02:32:02.498" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 02:32:01.412" endtime="20240525 02:32:02.498"/>
</kw>
<msg timestamp="20240525 02:32:02.499" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 02:32:01.412" endtime="20240525 02:32:02.499"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:32:02.500" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 02:32:02.499" endtime="20240525 02:32:02.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:32:02.502" level="INFO">{'message': 'Cadastro realizado com sucesso', '_id': 'ScSByXFf7sPAW0lu'}</msg>
<status status="PASS" starttime="20240525 02:32:02.500" endtime="20240525 02:32:02.502"/>
</kw>
<status status="PASS" starttime="20240525 02:32:01.380" endtime="20240525 02:32:02.502"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<arg>${RESPOSTA.json()}[_id]</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:32:02.506" level="INFO">${id} = ScSByXFf7sPAW0lu</msg>
<status status="PASS" starttime="20240525 02:32:02.503" endtime="20240525 02:32:02.506"/>
</kw>
<status status="PASS" starttime="20240525 02:32:01.375" endtime="20240525 02:32:02.507"/>
</kw>
<status status="PASS" starttime="20240525 02:32:01.375" endtime="20240525 02:32:02.507"/>
</kw>
<kw name="Quando enviar uma requisição pra excluir um produto" library="delete_produtos">
<arg>token_invalido</arg>
<kw name="HeadersAuth" library="services">
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:32:02.511" level="INFO">${headersAuth} = {'Authorization': 'token_invalido'}</msg>
<status status="PASS" starttime="20240525 02:32:02.510" endtime="20240525 02:32:02.511"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:32:02.512" level="INFO">${headersAuth} = {'Authorization': 'token_invalido'}</msg>
<status status="PASS" starttime="20240525 02:32:02.511" endtime="20240525 02:32:02.512"/>
</kw>
<status status="PASS" starttime="20240525 02:32:02.509" endtime="20240525 02:32:02.512"/>
</kw>
<kw name="Delete in" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${id}</arg>
<kw name="DELETE" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request.</doc>
<msg timestamp="20240525 02:32:03.516" level="INFO">DELETE Request : url=https://serverest.dev/produtos/ScSByXFf7sPAW0lu 
 path_url=/produtos/ScSByXFf7sPAW0lu 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'token_invalido', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20240525 02:32:03.516" level="INFO">DELETE Response : url=https://serverest.dev/produtos/ScSByXFf7sPAW0lu 
 status=401, reason=Unauthorized 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '32a68e5067471d812f97bd9f5ec19616', 'Date': 'Sat, 25 May 2024 05:32:03 GMT', 'Server': 'Google Frontend', 'Content-Length': '103'} 
 body={
    "message": "Token de acesso ausente, inválido, expirado ou usuário do token não existe mais"
} 
 </msg>
<msg timestamp="20240525 02:32:03.516" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20240525 02:32:02.513" endtime="20240525 02:32:03.516"/>
</kw>
<msg timestamp="20240525 02:32:03.517" level="INFO">${RESPOSTA} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20240525 02:32:02.512" endtime="20240525 02:32:03.517"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:32:03.518" level="INFO">${RESPOSTA} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20240525 02:32:03.517" endtime="20240525 02:32:03.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:32:03.520" level="INFO">{'message': 'Token de acesso ausente, inválido, expirado ou usuário do token não existe mais'}</msg>
<status status="PASS" starttime="20240525 02:32:03.518" endtime="20240525 02:32:03.520"/>
</kw>
<status status="PASS" starttime="20240525 02:32:02.508" endtime="20240525 02:32:03.520"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>401</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 02:32:03.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 02:32:03.523" endtime="20240525 02:32:03.525"/>
</kw>
<status status="PASS" starttime="20240525 02:32:03.522" endtime="20240525 02:32:03.525"/>
</kw>
<kw name="E verificar a mensagem de exclusão" library="delete_produtos">
<arg>Token de acesso ausente, inválido, expirado ou usuário do token não existe mais</arg>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${RESPOSTA.json()}[message]</arg>
<arg>${mensagem}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240525 02:32:03.527" endtime="20240525 02:32:03.530"/>
</kw>
<status status="PASS" starttime="20240525 02:32:03.526" endtime="20240525 02:32:03.530"/>
</kw>
<status status="PASS" starttime="20240525 02:32:01.375" endtime="20240525 02:32:03.531"/>
</test>
<test id="s1-s5-t4" name="Validar se o Produto foi excluido com sucesso" line="27">
<kw name="Cadastro produtos com sucesso" library="services">
<kw name="Fakers" library="Utils">
<kw name="Name" library="FakerLibrary">
<var>${FakeNome}</var>
<doc>:example: 'John Doe'</doc>
<msg timestamp="20240525 02:32:03.539" level="INFO">${FakeNome} = Amber Miller</msg>
<status status="PASS" starttime="20240525 02:32:03.538" endtime="20240525 02:32:03.539"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeNome}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:32:03.540" level="INFO">${FakeNome} = Amber Miller</msg>
<status status="PASS" starttime="20240525 02:32:03.539" endtime="20240525 02:32:03.540"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${FakeEmail}</var>
<msg timestamp="20240525 02:32:03.541" level="INFO">${FakeEmail} = laceyscott@example.org</msg>
<status status="PASS" starttime="20240525 02:32:03.540" endtime="20240525 02:32:03.541"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeEmail}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:32:03.542" level="INFO">${FakeEmail} = laceyscott@example.org</msg>
<status status="PASS" starttime="20240525 02:32:03.542" endtime="20240525 02:32:03.542"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${compSenha}</var>
<arg>text=##</arg>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:32:03.543" level="INFO">${compSenha} = 77</msg>
<status status="PASS" starttime="20240525 02:32:03.543" endtime="20240525 02:32:03.543"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${FakeSenha}</var>
<arg>Seubarriga</arg>
<arg>${compSenha}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240525 02:32:03.544" level="INFO">${FakeSenha} = Seubarriga 77</msg>
<status status="PASS" starttime="20240525 02:32:03.544" endtime="20240525 02:32:03.544"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakeSenha}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:32:03.545" level="INFO">${FakeSenha} = Seubarriga 77</msg>
<status status="PASS" starttime="20240525 02:32:03.545" endtime="20240525 02:32:03.545"/>
</kw>
<kw name="Sentence" library="FakerLibrary">
<var>${FakerDescricao}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20240525 02:32:03.546" level="INFO">${FakerDescricao} = Good institution arrive seem like tough return.</msg>
<status status="PASS" starttime="20240525 02:32:03.546" endtime="20240525 02:32:03.546"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerDescricao}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:32:03.547" level="INFO">${FakerDescricao} = Good institution arrive seem like tough return.</msg>
<status status="PASS" starttime="20240525 02:32:03.547" endtime="20240525 02:32:03.547"/>
</kw>
<kw name="Numerify" library="FakerLibrary">
<var>${FakerValor}</var>
<doc>Generate a string with each placeholder in ``text`` replaced according
to the following rules:</doc>
<msg timestamp="20240525 02:32:03.548" level="INFO">${FakerValor} = 121</msg>
<status status="PASS" starttime="20240525 02:32:03.548" endtime="20240525 02:32:03.548"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${FakerValor}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:32:03.549" level="INFO">${FakerValor} = 121</msg>
<status status="PASS" starttime="20240525 02:32:03.548" endtime="20240525 02:32:03.549"/>
</kw>
<status status="PASS" starttime="20240525 02:32:03.537" endtime="20240525 02:32:03.549"/>
</kw>
<kw name="Quando enviar uma requisição Post" library="post_produtos">
<arg>${token}</arg>
<arg>${FakeNome}${FakerValor}</arg>
<arg>1010</arg>
<arg>Teste Automation</arg>
<arg>1049</arg>
<kw name="Factory New Produtos" library="produtos_fac">
<var>${bodyPostProd}</var>
<arg>cnome=${cnome}</arg>
<arg>cpreco=${cpreco}</arg>
<arg>cdescricao=${cdescricao}</arg>
<arg>cquantidade=${cquantidade}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${produtos}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:32:03.553" level="INFO">${produtos} = {}</msg>
<status status="PASS" starttime="20240525 02:32:03.552" endtime="20240525 02:32:03.553"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cnome}" != 'None'</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>nome</arg>
<arg>${cnome}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:32:03.554" endtime="20240525 02:32:03.554"/>
</kw>
<status status="PASS" starttime="20240525 02:32:03.553" endtime="20240525 02:32:03.555"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cpreco}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>preco</arg>
<arg>${cpreco}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:32:03.556" endtime="20240525 02:32:03.556"/>
</kw>
<status status="PASS" starttime="20240525 02:32:03.555" endtime="20240525 02:32:03.556"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cdescricao}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>descricao</arg>
<arg>${cdescricao}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:32:03.557" endtime="20240525 02:32:03.559"/>
</kw>
<status status="PASS" starttime="20240525 02:32:03.557" endtime="20240525 02:32:03.559"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${cquantidade}" != "None"</arg>
<arg>Set To Dictionary</arg>
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set To Dictionary" library="Collections">
<arg>${produtos}</arg>
<arg>quantidade</arg>
<arg>${cquantidade}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20240525 02:32:03.560" endtime="20240525 02:32:03.560"/>
</kw>
<status status="PASS" starttime="20240525 02:32:03.559" endtime="20240525 02:32:03.560"/>
</kw>
<msg timestamp="20240525 02:32:03.561" level="INFO">${bodyPostProd} = {'nome': 'Amber Miller121', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 02:32:03.550" endtime="20240525 02:32:03.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${bodyPostProd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:32:03.563" level="INFO">{'nome': 'Amber Miller121', 'preco': '1010', 'descricao': 'Teste Automation', 'quantidade': '1049'}</msg>
<status status="PASS" starttime="20240525 02:32:03.562" endtime="20240525 02:32:03.563"/>
</kw>
<kw name="HeadersAuth" library="services">
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:32:03.565" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTExNywiZXhwIjoxNzE2NjE1NzE3fQ.xk2A1DJqFK6qRKFtjS0c4M...</msg>
<status status="PASS" starttime="20240525 02:32:03.564" endtime="20240525 02:32:03.565"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:32:03.566" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTExNywiZXhwIjoxNzE2NjE1NzE3fQ.xk2A1DJqFK6qRKFtjS0c4M...</msg>
<status status="PASS" starttime="20240525 02:32:03.565" endtime="20240525 02:32:03.566"/>
</kw>
<status status="PASS" starttime="20240525 02:32:03.563" endtime="20240525 02:32:03.566"/>
</kw>
<kw name="Post Cadastrar" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${bodyPostProd}</arg>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}</arg>
<arg>json=${body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240525 02:32:04.643" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTExNywiZXhwIjoxNzE2NjE1NzE3fQ.xk2A1DJqFK6qRKFtjS0c4MBxfaz1dzy25tRATTRV-D8', 'Content-Length': '99', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Amber Miller121", "preco": "1010", "descricao": "Teste Automation", "quantidade": "1049"}' 
 </msg>
<msg timestamp="20240525 02:32:04.643" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '26877cebd615ce61c0bb5f1c8e9e2e4a', 'Date': 'Sat, 25 May 2024 05:32:04 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "oBD4CxGFhvsUQ6l2"
} 
 </msg>
<msg timestamp="20240525 02:32:04.644" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 02:32:03.569" endtime="20240525 02:32:04.644"/>
</kw>
<msg timestamp="20240525 02:32:04.644" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 02:32:03.566" endtime="20240525 02:32:04.644"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:32:04.645" level="INFO">${RESPOSTA} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20240525 02:32:04.645" endtime="20240525 02:32:04.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:32:04.648" level="INFO">{'message': 'Cadastro realizado com sucesso', '_id': 'oBD4CxGFhvsUQ6l2'}</msg>
<status status="PASS" starttime="20240525 02:32:04.646" endtime="20240525 02:32:04.648"/>
</kw>
<status status="PASS" starttime="20240525 02:32:03.549" endtime="20240525 02:32:04.648"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<arg>${RESPOSTA.json()}[_id]</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:32:04.651" level="INFO">${id} = oBD4CxGFhvsUQ6l2</msg>
<status status="PASS" starttime="20240525 02:32:04.648" endtime="20240525 02:32:04.652"/>
</kw>
<status status="PASS" starttime="20240525 02:32:03.536" endtime="20240525 02:32:04.652"/>
</kw>
<kw name="Excluir Produto" library="services">
<kw name="Set Test Variable" library="BuiltIn">
<arg>${id}</arg>
<arg>${RESPOSTA.json()}[_id]</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:32:04.656" level="INFO">${id} = oBD4CxGFhvsUQ6l2</msg>
<status status="PASS" starttime="20240525 02:32:04.654" endtime="20240525 02:32:04.656"/>
</kw>
<kw name="Quando enviar uma requisição pra excluir um produto" library="delete_produtos">
<arg>${token}</arg>
<kw name="HeadersAuth" library="services">
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:32:04.659" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTExNywiZXhwIjoxNzE2NjE1NzE3fQ.xk2A1DJqFK6qRKFtjS0c4M...</msg>
<status status="PASS" starttime="20240525 02:32:04.658" endtime="20240525 02:32:04.659"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:32:04.660" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTExNywiZXhwIjoxNzE2NjE1NzE3fQ.xk2A1DJqFK6qRKFtjS0c4M...</msg>
<status status="PASS" starttime="20240525 02:32:04.659" endtime="20240525 02:32:04.660"/>
</kw>
<status status="PASS" starttime="20240525 02:32:04.657" endtime="20240525 02:32:04.660"/>
</kw>
<kw name="Delete in" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${id}</arg>
<kw name="DELETE" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request.</doc>
<msg timestamp="20240525 02:32:05.667" level="INFO">DELETE Request : url=https://serverest.dev/produtos/oBD4CxGFhvsUQ6l2 
 path_url=/produtos/oBD4CxGFhvsUQ6l2 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTExNywiZXhwIjoxNzE2NjE1NzE3fQ.xk2A1DJqFK6qRKFtjS0c4MBxfaz1dzy25tRATTRV-D8', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20240525 02:32:05.667" level="INFO">DELETE Response : url=https://serverest.dev/produtos/oBD4CxGFhvsUQ6l2 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'a931d537ce5458edcd2e278a97e5bd43', 'Date': 'Sat, 25 May 2024 05:32:05 GMT', 'Server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg timestamp="20240525 02:32:05.667" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:32:04.662" endtime="20240525 02:32:05.667"/>
</kw>
<msg timestamp="20240525 02:32:05.668" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:32:04.661" endtime="20240525 02:32:05.668"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:32:05.669" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:32:05.668" endtime="20240525 02:32:05.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:32:05.672" level="INFO">{'message': 'Registro excluído com sucesso'}</msg>
<status status="PASS" starttime="20240525 02:32:05.670" endtime="20240525 02:32:05.672"/>
</kw>
<status status="PASS" starttime="20240525 02:32:04.656" endtime="20240525 02:32:05.672"/>
</kw>
<status status="PASS" starttime="20240525 02:32:04.653" endtime="20240525 02:32:05.672"/>
</kw>
<kw name="Quando enviar uma requisição pra excluir um produto" library="delete_produtos">
<arg>${token}</arg>
<kw name="HeadersAuth" library="services">
<arg>${token}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headersAuth}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240525 02:32:05.676" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTExNywiZXhwIjoxNzE2NjE1NzE3fQ.xk2A1DJqFK6qRKFtjS0c4M...</msg>
<status status="PASS" starttime="20240525 02:32:05.675" endtime="20240525 02:32:05.676"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${headersAuth}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:32:05.677" level="INFO">${headersAuth} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTExNywiZXhwIjoxNzE2NjE1NzE3fQ.xk2A1DJqFK6qRKFtjS0c4M...</msg>
<status status="PASS" starttime="20240525 02:32:05.676" endtime="20240525 02:32:05.677"/>
</kw>
<status status="PASS" starttime="20240525 02:32:05.674" endtime="20240525 02:32:05.677"/>
</kw>
<kw name="Delete in" library="services">
<var>${RESPOSTA}</var>
<arg>/produtos</arg>
<arg>${headersAuth}</arg>
<arg>${id}</arg>
<kw name="DELETE" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}${endpoint}/${id}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request.</doc>
<msg timestamp="20240525 02:32:06.792" level="INFO">DELETE Request : url=https://serverest.dev/produtos/oBD4CxGFhvsUQ6l2 
 path_url=/produtos/oBD4CxGFhvsUQ6l2 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbmRyb3Rlc3RlQHFhLmNvbSIsInBhc3N3b3JkIjoidGVzdGVRQSIsImlhdCI6MTcxNjYxNTExNywiZXhwIjoxNzE2NjE1NzE3fQ.xk2A1DJqFK6qRKFtjS0c4MBxfaz1dzy25tRATTRV-D8', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20240525 02:32:06.792" level="INFO">DELETE Response : url=https://serverest.dev/produtos/oBD4CxGFhvsUQ6l2 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '495f29a159c33bdf089e8819ce561355;o=1', 'Date': 'Sat, 25 May 2024 05:32:07 GMT', 'Server': 'Google Frontend', 'Content-Length': '46'} 
 body={
    "message": "Nenhum registro excluído"
} 
 </msg>
<msg timestamp="20240525 02:32:06.792" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:32:05.678" endtime="20240525 02:32:06.793"/>
</kw>
<msg timestamp="20240525 02:32:06.793" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:32:05.677" endtime="20240525 02:32:06.793"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240525 02:32:06.793" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240525 02:32:06.793" endtime="20240525 02:32:06.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240525 02:32:06.794" level="INFO">{'message': 'Nenhum registro excluído'}</msg>
<status status="PASS" starttime="20240525 02:32:06.793" endtime="20240525 02:32:06.794"/>
</kw>
<status status="PASS" starttime="20240525 02:32:05.673" endtime="20240525 02:32:06.794"/>
</kw>
<kw name="Então ira visuazilar o Status Code" library="get_produtos">
<arg>200</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.status_code}</arg>
<arg>${statusCode}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20240525 02:32:06.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20240525 02:32:06.795" endtime="20240525 02:32:06.795"/>
</kw>
<status status="PASS" starttime="20240525 02:32:06.794" endtime="20240525 02:32:06.795"/>
</kw>
<kw name="E verificar a mensagem de validação" library="post_produtos">
<arg>Nenhum registro excluído</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA.json()}[message]</arg>
<arg>${mensagem}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20240525 02:32:06.796" endtime="20240525 02:32:06.797"/>
</kw>
<status status="PASS" starttime="20240525 02:32:06.796" endtime="20240525 02:32:06.797"/>
</kw>
<status status="PASS" starttime="20240525 02:32:03.535" endtime="20240525 02:32:06.797"/>
</test>
<doc>Documentacao do POST da API: ServeRest</doc>
<status status="PASS" starttime="20240525 02:31:55.742" endtime="20240525 02:32:06.799"/>
</suite>
<status status="PASS" starttime="20240525 02:31:23.220" endtime="20240525 02:32:06.801"/>
</suite>
<statistics>
<total>
<stat pass="22" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="22" fail="0" skip="0" id="s1" name="Features">Features</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="01 - Login">Features.01 - Login</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="02 - Get Produtos">Features.02 - Get Produtos</stat>
<stat pass="12" fail="0" skip="0" id="s1-s3" name="03 - Post Produtos">Features.03 - Post Produtos</stat>
<stat pass="3" fail="0" skip="0" id="s1-s4" name="04 - Put Produtos">Features.04 - Put Produtos</stat>
<stat pass="4" fail="0" skip="0" id="s1-s5" name="05 - Delete Produtos">Features.05 - Delete Produtos</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
